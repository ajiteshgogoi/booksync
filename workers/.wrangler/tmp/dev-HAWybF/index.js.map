{
  "version": 3,
  "sources": ["../../../node_modules/wrangler/_virtual_unenv_global_polyfill-clear$immediate.js", "../../../node_modules/unenv/runtime/_internal/utils.mjs", "../../../node_modules/unenv/runtime/mock/noop.mjs", "../../../node_modules/unenv/runtime/node/timers/internal/immediate.mjs", "../../../node_modules/unenv/runtime/node/timers/internal/set-immediate.mjs", "../../../node_modules/unenv/runtime/node/timers/$cloudflare.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-set$immediate.js", "../../../node_modules/unenv/runtime/mock/proxy.mjs", "../../../node_modules/unenv/runtime/node/console/index.mjs", "../../../node_modules/unenv/runtime/node/console/$cloudflare.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-console.js", "../../../node_modules/unenv/runtime/web/performance/_entry.mjs", "../../../node_modules/unenv/runtime/web/performance/_performance.mjs", "../../../node_modules/unenv/runtime/web/performance/_observer.mjs", "../../../node_modules/unenv/runtime/web/performance/index.mjs", "../../../node_modules/unenv/runtime/polyfill/global-this.mjs", "../../../node_modules/unenv/runtime/polyfill/performance.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-performance.js", "../../../node_modules/unenv/runtime/node/stream/internal/readable.mjs", "../../../node_modules/unenv/runtime/node/stream/internal/writable.mjs", "../../../node_modules/unenv/runtime/node/stream/internal/duplex.mjs", "../../../node_modules/unenv/runtime/node/net/internal/socket.mjs", "../../../node_modules/unenv/runtime/node/net/index.mjs", "../../../node_modules/unenv/runtime/node/tty/internal/read-stream.mjs", "../../../node_modules/unenv/runtime/node/tty/internal/write-stream.mjs", "../../../node_modules/unenv/runtime/node/tty/index.mjs", "../../../node_modules/unenv/runtime/mock/empty.mjs", "../../../node_modules/unenv/runtime/node/process/internal/env.mjs", "../../../node_modules/unenv/runtime/node/process/internal/time.mjs", "../../../node_modules/unenv/runtime/node/process/internal/process.mjs", "../../../node_modules/unenv/runtime/node/process/$cloudflare.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-process.js", "../../../../shared/node_modules/@notionhq/client/src/utils.ts", "../../../../shared/node_modules/@notionhq/client/src/logging.ts", "../../../../shared/node_modules/@notionhq/client/src/errors.ts", "../../../../shared/node_modules/@notionhq/client/src/api-endpoints.ts", "../../../node_modules/unenv/runtime/npm/node-fetch.mjs", "required-unenv-alias:node-fetch", "../../../../shared/node_modules/@notionhq/client/build/package.json", "../../../../shared/node_modules/@notionhq/client/src/Client.ts", "../../../../shared/node_modules/@notionhq/client/src/helpers.ts", "../../../../shared/node_modules/@notionhq/client/src/index.ts", "../bundle-e3qiJ6/middleware-loader.entry.ts", "../bundle-e3qiJ6/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/itty-router/dist/itty-router.mjs", "../../../../shared/src/index.ts", "../../../../shared/src/utils/parseClippings.ts", "../../../node_modules/unenv/runtime/node/crypto/$cloudflare.mjs", "../../../node_modules/unenv/runtime/node/crypto/internal/node.mjs", "../../../../shared/src/services/notionStore.ts", "../../../../shared/src/services/notionClient.ts", "../../../../shared/node_modules/axios/index.js", "../../../../shared/node_modules/axios/lib/axios.js", "../../../../shared/node_modules/axios/lib/utils.js", "../../../../shared/node_modules/axios/lib/helpers/bind.js", "../../../../shared/node_modules/axios/lib/core/Axios.js", "../../../../shared/node_modules/axios/lib/helpers/buildURL.js", "../../../../shared/node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../../../../shared/node_modules/axios/lib/helpers/toFormData.js", "../../../../shared/node_modules/axios/lib/core/AxiosError.js", "../../../../shared/node_modules/axios/lib/helpers/null.js", "../../../../shared/node_modules/axios/lib/core/InterceptorManager.js", "../../../../shared/node_modules/axios/lib/core/dispatchRequest.js", "../../../../shared/node_modules/axios/lib/core/transformData.js", "../../../../shared/node_modules/axios/lib/defaults/index.js", "../../../../shared/node_modules/axios/lib/defaults/transitional.js", "../../../../shared/node_modules/axios/lib/helpers/toURLEncodedForm.js", "../../../../shared/node_modules/axios/lib/platform/index.js", "../../../../shared/node_modules/axios/lib/platform/browser/index.js", "../../../../shared/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js", "../../../../shared/node_modules/axios/lib/platform/browser/classes/FormData.js", "../../../../shared/node_modules/axios/lib/platform/browser/classes/Blob.js", "../../../../shared/node_modules/axios/lib/platform/common/utils.js", "../../../../shared/node_modules/axios/lib/helpers/formDataToJSON.js", "../../../../shared/node_modules/axios/lib/core/AxiosHeaders.js", "../../../../shared/node_modules/axios/lib/helpers/parseHeaders.js", "../../../../shared/node_modules/axios/lib/cancel/isCancel.js", "../../../../shared/node_modules/axios/lib/cancel/CanceledError.js", "../../../../shared/node_modules/axios/lib/adapters/adapters.js", "../../../../shared/node_modules/axios/lib/adapters/xhr.js", "../../../../shared/node_modules/axios/lib/core/settle.js", "../../../../shared/node_modules/axios/lib/helpers/parseProtocol.js", "../../../../shared/node_modules/axios/lib/helpers/progressEventReducer.js", "../../../../shared/node_modules/axios/lib/helpers/speedometer.js", "../../../../shared/node_modules/axios/lib/helpers/throttle.js", "../../../../shared/node_modules/axios/lib/helpers/resolveConfig.js", "../../../../shared/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../../../shared/node_modules/axios/lib/helpers/cookies.js", "../../../../shared/node_modules/axios/lib/core/buildFullPath.js", "../../../../shared/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../../../shared/node_modules/axios/lib/helpers/combineURLs.js", "../../../../shared/node_modules/axios/lib/core/mergeConfig.js", "../../../../shared/node_modules/axios/lib/adapters/fetch.js", "../../../../shared/node_modules/axios/lib/helpers/composeSignals.js", "../../../../shared/node_modules/axios/lib/helpers/trackStream.js", "../../../../shared/node_modules/axios/lib/helpers/validator.js", "../../../../shared/node_modules/axios/lib/env/data.js", "../../../../shared/node_modules/axios/lib/cancel/CancelToken.js", "../../../../shared/node_modules/axios/lib/helpers/spread.js", "../../../../shared/node_modules/axios/lib/helpers/isAxiosError.js", "../../../../shared/node_modules/axios/lib/helpers/HttpStatusCode.js", "../../../../shared/src/utils/retry.ts", "../../../../shared/src/utils/notionUtils.ts", "../../../../shared/src/services/kvStore.ts", "../../../../shared/src/services/syncService.ts", "../../../src/services/kvJobStore.ts", "../../../src/services/oauthCallbackService.ts", "../../../src/services/jobStore.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\dev\\github\\booksync\\workers\\.wrangler\\tmp\\dev-HAWybF",
  "sourcesContent": ["import { clearImmediate } from \"unenv/runtime/node/timers/$cloudflare\";\nglobalThis.clearImmediate = clearImmediate;", "export function rawHeaders(headers) {\n  const rawHeaders2 = [];\n  for (const key in headers) {\n    if (Array.isArray(headers[key])) {\n      for (const h of headers[key]) {\n        rawHeaders2.push(key, h);\n      }\n    } else {\n      rawHeaders2.push(key, headers[key]);\n    }\n  }\n  return rawHeaders2;\n}\nexport function mergeFns(...functions) {\n  return function(...args) {\n    for (const fn of functions) {\n      fn(...args);\n    }\n  };\n}\nexport function createNotImplementedError(name) {\n  return new Error(`[unenv] ${name} is not implemented yet!`);\n}\nexport function notImplemented(name) {\n  const fn = () => {\n    throw createNotImplementedError(name);\n  };\n  return Object.assign(fn, { __unenv__: true });\n}\nexport function notImplementedAsync(name) {\n  const fn = notImplemented(name);\n  fn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n  fn.native = fn;\n  return fn;\n}\nexport function notImplementedClass(name) {\n  return class {\n    __unenv__ = true;\n    constructor() {\n      throw new Error(`[unenv] ${name} is not implemented yet!`);\n    }\n  };\n}\n", "export default Object.assign(() => {\n}, { __unenv__: true });\n", "export class Immediate {\n  _onImmediate;\n  _timeout;\n  constructor(callback, args) {\n    this._onImmediate = callback;\n    if (\"setTimeout\" in globalThis) {\n      this._timeout = setTimeout(callback, 0, ...args);\n    } else {\n      callback(...args);\n    }\n  }\n  ref() {\n    this._timeout?.ref();\n    return this;\n  }\n  unref() {\n    this._timeout?.unref();\n    return this;\n  }\n  hasRef() {\n    return this._timeout?.hasRef() ?? false;\n  }\n  [Symbol.dispose]() {\n    if (\"clearTimeout\" in globalThis) {\n      clearTimeout(this._timeout);\n    }\n  }\n}\n", "import { Immediate } from \"./immediate.mjs\";\nexport function setImmediateFallbackPromises(value) {\n  return new Promise((res) => {\n    res(value);\n  });\n}\nexport function setImmediateFallback(callback, ...args) {\n  return new Immediate(callback, args);\n}\nsetImmediateFallback.__promisify__ = setImmediateFallbackPromises;\nexport function clearImmediateFallback(immediate) {\n  immediate?.[Symbol.dispose]();\n}\n", "export {\n  _unrefActive,\n  active,\n  clearInterval,\n  clearTimeout,\n  enroll,\n  promises,\n  setInterval,\n  setTimeout,\n  unenroll\n} from \"./index.mjs\";\nexport {\n  setImmediateFallback as setImmediate,\n  clearImmediateFallback as clearImmediate\n} from \"./internal/set-immediate.mjs\";\nimport {\n  _unrefActive as _unrefActive2,\n  active as active2,\n  clearInterval as clearInterval2,\n  clearTimeout as clearTimeout2,\n  enroll as enroll2,\n  promises as promises2,\n  setInterval as setInterval2,\n  setTimeout as setTimeout2,\n  unenroll as unenroll2\n} from \"./index.mjs\";\nimport {\n  setImmediateFallback as setImmediate,\n  clearImmediateFallback as clearImmediate\n} from \"./internal/set-immediate.mjs\";\nexport default {\n  // @ts-expect-error deprecated\n  _unrefActive: _unrefActive2,\n  active: active2,\n  clearImmediate,\n  clearInterval: clearInterval2,\n  clearTimeout: clearTimeout2,\n  enroll: enroll2,\n  promises: promises2,\n  setImmediate,\n  setInterval: setInterval2,\n  setTimeout: setTimeout2,\n  unenroll: unenroll2\n};\n", "import { setImmediate } from \"unenv/runtime/node/timers/$cloudflare\";\nglobalThis.setImmediate = setImmediate;", "const fn = function() {\n};\nfunction createMock(name, overrides = {}) {\n  fn.prototype.name = name;\n  const props = {};\n  return new Proxy(fn, {\n    get(_target, prop) {\n      if (prop === \"caller\") {\n        return null;\n      }\n      if (prop === \"__createMock__\") {\n        return createMock;\n      }\n      if (prop === \"__unenv__\") {\n        return true;\n      }\n      if (prop in overrides) {\n        return overrides[prop];\n      }\n      return props[prop] = props[prop] || createMock(`${name}.${prop.toString()}`);\n    },\n    apply(_target, _this, _args) {\n      return createMock(`${name}()`);\n    },\n    construct(_target, _args, _newT) {\n      return createMock(`[${name}]`);\n    },\n    // @ts-ignore (ES6-only - removed in ES7)\n    // https://github.com/tc39/ecma262/issues/161\n    enumerate() {\n      return [];\n    }\n  });\n}\nexport default createMock(\"mock\");\n", "import { Writable } from \"node:stream\";\nimport mock from \"../../mock/proxy.mjs\";\nimport noop from \"../../mock/noop.mjs\";\nimport { notImplemented } from \"../../_internal/utils.mjs\";\nconst _console = globalThis.console;\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\nexport const createTask = _console?.createTask ?? notImplemented(\"console.createTask\");\nexport const assert = notImplemented(\"console.assert\");\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? mock.__createMock__(\"console.Console\");\nexport { default as _times } from \"../../mock/proxy.mjs\";\nexport function context() {\n  return _console;\n}\nexport {\n  default as _stdoutErrorHandler,\n  default as _stderrErrorHandler\n} from \"../../mock/noop.mjs\";\nexport default {\n  assert,\n  clear,\n  Console,\n  count,\n  countReset,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupEnd,\n  groupCollapsed,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n};\n", "export {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"./index.mjs\";\nimport {\n  Console as Console2,\n  _ignoreErrors as _ignoreErrors2,\n  _stderr as _stderr2,\n  _stderrErrorHandler as _stderrErrorHandler2,\n  _stdout as _stdout2,\n  _stdoutErrorHandler as _stdoutErrorHandler2,\n  _times as _times2\n} from \"./index.mjs\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console: Console2,\n  _ignoreErrors: _ignoreErrors2,\n  _stderr: _stderr2,\n  _stderrErrorHandler: _stderrErrorHandler2,\n  _stdout: _stdout2,\n  _stdoutErrorHandler: _stdoutErrorHandler2,\n  _times: _times2\n});\nexport default workerdConsole;\n", "import globalVar from \"unenv/runtime/node/console/$cloudflare\";\nglobalThis.console = globalVar;", "export const _supportedEntryTypes = [\n  \"event\",\n  // PerformanceEntry\n  \"mark\",\n  // PerformanceMark\n  \"measure\",\n  // PerformanceMeasure\n  \"resource\"\n  // PerformanceResourceTiming\n];\nexport class _PerformanceEntry {\n  __unenv__ = true;\n  detail;\n  entryType = \"event\";\n  name;\n  startTime;\n  constructor(name, options) {\n    this.name = name;\n    this.startTime = options?.startTime || performance.now();\n    this.detail = options?.detail;\n  }\n  get duration() {\n    return performance.now() - this.startTime;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      entryType: this.entryType,\n      startTime: this.startTime,\n      duration: this.duration,\n      detail: this.detail\n    };\n  }\n}\nexport const PerformanceEntry = globalThis.PerformanceEntry || _PerformanceEntry;\nexport class _PerformanceMark extends _PerformanceEntry {\n  entryType = \"mark\";\n}\nexport const PerformanceMark = globalThis.PerformanceMark || _PerformanceMark;\nexport class _PerformanceMeasure extends _PerformanceEntry {\n  entryType = \"measure\";\n}\nexport const PerformanceMeasure = globalThis.PerformanceMeasure || _PerformanceMeasure;\nexport class _PerformanceResourceTiming extends _PerformanceEntry {\n  entryType = \"resource\";\n  serverTiming = [];\n  connectEnd = 0;\n  connectStart = 0;\n  decodedBodySize = 0;\n  domainLookupEnd = 0;\n  domainLookupStart = 0;\n  encodedBodySize = 0;\n  fetchStart = 0;\n  initiatorType = \"\";\n  name = \"\";\n  nextHopProtocol = \"\";\n  redirectEnd = 0;\n  redirectStart = 0;\n  requestStart = 0;\n  responseEnd = 0;\n  responseStart = 0;\n  secureConnectionStart = 0;\n  startTime = 0;\n  transferSize = 0;\n  workerStart = 0;\n  responseStatus = 0;\n}\nexport const PerformanceResourceTiming = globalThis.PerformanceResourceTiming || _PerformanceResourceTiming;\n", "import { createNotImplementedError } from \"../../_internal/utils.mjs\";\nimport mock from \"../../mock/proxy.mjs\";\nimport { _PerformanceMark, _PerformanceMeasure } from \"./_entry.mjs\";\nconst _timeOrigin = Date.now();\nexport class _Performance {\n  __unenv__ = true;\n  timeOrigin = _timeOrigin;\n  eventCounts = /* @__PURE__ */ new Map();\n  _entries = [];\n  _resourceTimingBufferSize = 0;\n  navigation = mock.__createMock__(\"PerformanceNavigation\");\n  timing = mock.__createMock__(\"PerformanceTiming\");\n  onresourcetimingbufferfull = null;\n  now() {\n    if (globalThis?.performance?.now && this.timeOrigin === _timeOrigin) {\n      return globalThis.performance.now();\n    }\n    return Date.now() - this.timeOrigin;\n  }\n  clearMarks(markName) {\n    this._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n  }\n  clearMeasures(measureName) {\n    this._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n  }\n  clearResourceTimings() {\n    this._entries = this._entries.filter(\n      (e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\"\n    );\n  }\n  getEntries() {\n    return this._entries;\n  }\n  getEntriesByName(name, type) {\n    return this._entries.filter(\n      (e) => e.name === name && (!type || e.entryType === type)\n    );\n  }\n  getEntriesByType(type) {\n    return this._entries.filter(\n      (e) => e.entryType === type\n    );\n  }\n  mark(name, options) {\n    const entry = new _PerformanceMark(name, options);\n    this._entries.push(entry);\n    return entry;\n  }\n  measure(measureName, startOrMeasureOptions, endMark) {\n    let start;\n    let end;\n    if (typeof startOrMeasureOptions === \"string\") {\n      start = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n      end = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n    } else {\n      start = Number.parseFloat(startOrMeasureOptions?.start) || performance.now();\n      end = Number.parseFloat(startOrMeasureOptions?.end) || performance.now();\n    }\n    const entry = new _PerformanceMeasure(measureName, {\n      startTime: start,\n      detail: { start, end }\n    });\n    this._entries.push(entry);\n    return entry;\n  }\n  setResourceTimingBufferSize(maxSize) {\n    this._resourceTimingBufferSize = maxSize;\n  }\n  toJSON() {\n    return this;\n  }\n  addEventListener(type, listener, options) {\n    throw createNotImplementedError(\"Performance.addEventListener\");\n  }\n  removeEventListener(type, listener, options) {\n    throw createNotImplementedError(\"Performance.removeEventListener\");\n  }\n  dispatchEvent(event) {\n    throw createNotImplementedError(\"Performance.dispatchEvent\");\n  }\n}\nexport const Performance = globalThis.Performance || _Performance;\nexport const performance = globalThis.performance || new Performance();\n", "import { createNotImplementedError } from \"../../_internal/utils.mjs\";\nimport { _supportedEntryTypes } from \"./_entry.mjs\";\nexport class _PerformanceObserver {\n  __unenv__ = true;\n  static supportedEntryTypes = _supportedEntryTypes;\n  _callback = null;\n  constructor(callback) {\n    this._callback = callback;\n  }\n  takeRecords() {\n    return [];\n  }\n  disconnect() {\n    throw createNotImplementedError(\"PerformanceObserver.disconnect\");\n  }\n  observe(options) {\n    throw createNotImplementedError(\"PerformanceObserver.observe\");\n  }\n}\nexport const PerformanceObserver = globalThis.PerformanceObserver || _PerformanceObserver;\nexport class _PerformanceObserverEntryList {\n  __unenv__ = true;\n  getEntries() {\n    return [];\n  }\n  getEntriesByName(_name, _type) {\n    return [];\n  }\n  getEntriesByType(type) {\n    return [];\n  }\n}\nexport const PerformanceObserverEntryList = globalThis.PerformanceObserverEntryList || _PerformanceObserverEntryList;\n", "export { Performance, _Performance, performance } from \"./_performance.mjs\";\nexport {\n  PerformanceObserver,\n  _PerformanceObserver,\n  PerformanceObserverEntryList,\n  _PerformanceObserverEntryList\n} from \"./_observer.mjs\";\nexport {\n  PerformanceEntry,\n  _PerformanceEntry,\n  PerformanceMark,\n  _PerformanceMark,\n  PerformanceMeasure,\n  _PerformanceMeasure,\n  PerformanceResourceTiming,\n  _PerformanceResourceTiming\n} from \"./_entry.mjs\";\n", "function getGlobal() {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  return {};\n}\nexport default getGlobal();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"../web/performance/index.mjs\";\nimport _global from \"./global-this.mjs\";\n_global.performance = _global.performance || performance;\n_global.Performance = _global.Performance || Performance;\n_global.PerformanceEntry = _global.PerformanceEntry || PerformanceEntry;\n_global.PerformanceMark = _global.PerformanceMark || PerformanceMark;\n_global.PerformanceMeasure = _global.PerformanceMeasure || PerformanceMeasure;\n_global.PerformanceObserver = _global.PerformanceObserver || PerformanceObserver;\n_global.PerformanceObserverEntryList = _global.PerformanceObserverEntryList || PerformanceObserverEntryList;\n_global.PerformanceResourceTiming = _global.PerformanceResourceTiming || PerformanceResourceTiming;\nexport default _global.performance;\n", "import globalVar from \"unenv/runtime/polyfill/performance\";\nglobalThis.performance = globalVar;", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nimport { EventEmitter } from \"node:events\";\nexport class _Readable extends EventEmitter {\n  __unenv__ = true;\n  readableEncoding = null;\n  readableEnded = true;\n  readableFlowing = false;\n  readableHighWaterMark = 0;\n  readableLength = 0;\n  readableObjectMode = false;\n  readableAborted = false;\n  readableDidRead = false;\n  closed = false;\n  errored = null;\n  readable = false;\n  destroyed = false;\n  static from(_iterable, options) {\n    return new _Readable(options);\n  }\n  constructor(_opts) {\n    super();\n  }\n  _read(_size) {\n  }\n  read(_size) {\n  }\n  setEncoding(_encoding) {\n    return this;\n  }\n  pause() {\n    return this;\n  }\n  resume() {\n    return this;\n  }\n  isPaused() {\n    return true;\n  }\n  unpipe(_destination) {\n    return this;\n  }\n  unshift(_chunk, _encoding) {\n  }\n  wrap(_oldStream) {\n    return this;\n  }\n  push(_chunk, _encoding) {\n    return false;\n  }\n  _destroy(_error, _callback) {\n    this.removeAllListeners();\n  }\n  destroy(error) {\n    this.destroyed = true;\n    this._destroy(error);\n    return this;\n  }\n  pipe(_destenition, _options) {\n    return {};\n  }\n  compose(stream, options) {\n    throw new Error(\"[unenv] Method not implemented.\");\n  }\n  [Symbol.asyncDispose]() {\n    this.destroy();\n    return Promise.resolve();\n  }\n  // eslint-disable-next-line require-yield\n  async *[Symbol.asyncIterator]() {\n    throw createNotImplementedError(\"Readable.asyncIterator\");\n  }\n  iterator(options) {\n    throw createNotImplementedError(\"Readable.iterator\");\n  }\n  map(fn, options) {\n    throw createNotImplementedError(\"Readable.map\");\n  }\n  filter(fn, options) {\n    throw createNotImplementedError(\"Readable.filter\");\n  }\n  forEach(fn, options) {\n    throw createNotImplementedError(\"Readable.forEach\");\n  }\n  reduce(fn, initialValue, options) {\n    throw createNotImplementedError(\"Readable.reduce\");\n  }\n  find(fn, options) {\n    throw createNotImplementedError(\"Readable.find\");\n  }\n  findIndex(fn, options) {\n    throw createNotImplementedError(\"Readable.findIndex\");\n  }\n  some(fn, options) {\n    throw createNotImplementedError(\"Readable.some\");\n  }\n  toArray(options) {\n    throw createNotImplementedError(\"Readable.toArray\");\n  }\n  every(fn, options) {\n    throw createNotImplementedError(\"Readable.every\");\n  }\n  flatMap(fn, options) {\n    throw createNotImplementedError(\"Readable.flatMap\");\n  }\n  drop(limit, options) {\n    throw createNotImplementedError(\"Readable.drop\");\n  }\n  take(limit, options) {\n    throw createNotImplementedError(\"Readable.take\");\n  }\n  asIndexedPairs(options) {\n    throw createNotImplementedError(\"Readable.asIndexedPairs\");\n  }\n}\nexport const Readable = globalThis.Readable || _Readable;\n", "import { EventEmitter } from \"node:events\";\nclass _Writable extends EventEmitter {\n  __unenv__ = true;\n  writable = true;\n  writableEnded = false;\n  writableFinished = false;\n  writableHighWaterMark = 0;\n  writableLength = 0;\n  writableObjectMode = false;\n  writableCorked = 0;\n  closed = false;\n  errored = null;\n  writableNeedDrain = false;\n  destroyed = false;\n  _data;\n  _encoding = \"utf-8\";\n  constructor(_opts) {\n    super();\n  }\n  pipe(_destenition, _options) {\n    return {};\n  }\n  _write(chunk, encoding, callback) {\n    if (this.writableEnded) {\n      if (callback) {\n        callback();\n      }\n      return;\n    }\n    if (this._data === void 0) {\n      this._data = chunk;\n    } else {\n      const a = typeof this._data === \"string\" ? Buffer.from(this._data, this._encoding || encoding || \"utf8\") : this._data;\n      const b = typeof chunk === \"string\" ? Buffer.from(chunk, encoding || this._encoding || \"utf8\") : chunk;\n      this._data = Buffer.concat([a, b]);\n    }\n    this._encoding = encoding;\n    if (callback) {\n      callback();\n    }\n  }\n  _writev(_chunks, _callback) {\n  }\n  _destroy(_error, _callback) {\n  }\n  _final(_callback) {\n  }\n  write(chunk, arg2, arg3) {\n    const encoding = typeof arg2 === \"string\" ? this._encoding : \"utf-8\";\n    const cb = typeof arg2 === \"function\" ? arg2 : typeof arg3 === \"function\" ? arg3 : void 0;\n    this._write(chunk, encoding, cb);\n    return true;\n  }\n  setDefaultEncoding(_encoding) {\n    return this;\n  }\n  end(arg1, arg2, arg3) {\n    const callback = typeof arg1 === \"function\" ? arg1 : typeof arg2 === \"function\" ? arg2 : typeof arg3 === \"function\" ? arg3 : void 0;\n    if (this.writableEnded) {\n      if (callback) {\n        callback();\n      }\n      return this;\n    }\n    const data = arg1 === callback ? void 0 : arg1;\n    if (data) {\n      const encoding = arg2 === callback ? void 0 : arg2;\n      this.write(data, encoding, callback);\n    }\n    this.writableEnded = true;\n    this.writableFinished = true;\n    this.emit(\"close\");\n    this.emit(\"finish\");\n    return this;\n  }\n  cork() {\n  }\n  uncork() {\n  }\n  destroy(_error) {\n    this.destroyed = true;\n    delete this._data;\n    this.removeAllListeners();\n    return this;\n  }\n  compose(stream, options) {\n    throw new Error(\"[h3] Method not implemented.\");\n  }\n}\nexport const Writable = globalThis.Writable || _Writable;\n", "import { mergeFns } from \"../../../_internal/utils.mjs\";\nimport { Readable } from \"./readable.mjs\";\nimport { Writable } from \"./writable.mjs\";\nconst __Duplex = class {\n  allowHalfOpen = true;\n  _destroy;\n  constructor(readable = new Readable(), writable = new Writable()) {\n    Object.assign(this, readable);\n    Object.assign(this, writable);\n    this._destroy = mergeFns(readable._destroy, writable._destroy);\n  }\n};\nfunction getDuplex() {\n  Object.assign(__Duplex.prototype, Readable.prototype);\n  Object.assign(__Duplex.prototype, Writable.prototype);\n  return __Duplex;\n}\nexport const _Duplex = /* @__PURE__ */ getDuplex();\nexport const Duplex = globalThis.Duplex || _Duplex;\n", "import { Duplex } from \"../../stream/internal/duplex.mjs\";\nexport class Socket extends Duplex {\n  __unenv__ = true;\n  bufferSize = 0;\n  bytesRead = 0;\n  bytesWritten = 0;\n  connecting = false;\n  destroyed = false;\n  pending = false;\n  localAddress = \"\";\n  localPort = 0;\n  remoteAddress = \"\";\n  remoteFamily = \"\";\n  remotePort = 0;\n  autoSelectFamilyAttemptedAddresses = [];\n  readyState = \"readOnly\";\n  constructor(_options) {\n    super();\n  }\n  write(_buffer, _arg1, _arg2) {\n    return false;\n  }\n  connect(_arg1, _arg2, _arg3) {\n    return this;\n  }\n  end(_arg1, _arg2, _arg3) {\n    return this;\n  }\n  setEncoding(_encoding) {\n    return this;\n  }\n  pause() {\n    return this;\n  }\n  resume() {\n    return this;\n  }\n  setTimeout(_timeout, _callback) {\n    return this;\n  }\n  setNoDelay(_noDelay) {\n    return this;\n  }\n  setKeepAlive(_enable, _initialDelay) {\n    return this;\n  }\n  address() {\n    return {};\n  }\n  unref() {\n    return this;\n  }\n  ref() {\n    return this;\n  }\n  destroySoon() {\n    this.destroy();\n  }\n  resetAndDestroy() {\n    const err = new Error(\"ERR_SOCKET_CLOSED\");\n    err.code = \"ERR_SOCKET_CLOSED\";\n    this.destroy(err);\n    return this;\n  }\n}\nexport class SocketAddress {\n  __unenv__ = true;\n  address;\n  family;\n  port;\n  flowlabel;\n  constructor(options) {\n    this.address = options.address;\n    this.family = options.family;\n    this.port = options.port;\n    this.flowlabel = options.flowlabel;\n  }\n}\n", "import { notImplemented, notImplementedClass } from \"../../_internal/utils.mjs\";\nimport { Socket, SocketAddress } from \"./internal/socket.mjs\";\nimport { Server } from \"./internal/server.mjs\";\nexport { Server } from \"./internal/server.mjs\";\nexport { Socket, SocketAddress, Socket as Stream } from \"./internal/socket.mjs\";\nexport const createServer = notImplemented(\n  \"net.createServer\"\n);\nexport const BlockList = notImplementedClass(\n  \"net.BlockList\"\n);\nexport const connect = notImplemented(\"net.connect\");\nexport const createConnection = notImplemented(\n  \"net.createConnection\"\n);\nexport const getDefaultAutoSelectFamily = notImplemented(\n  \"net.getDefaultAutoSelectFamily\"\n);\nexport const setDefaultAutoSelectFamily = notImplemented(\n  \"net.setDefaultAutoSelectFamily\"\n);\nexport const getDefaultAutoSelectFamilyAttemptTimeout = notImplemented(\n  \"net.getDefaultAutoSelectFamilyAttemptTimeout\"\n);\nexport const setDefaultAutoSelectFamilyAttemptTimeout = notImplemented(\n  \"net.setDefaultAutoSelectFamilyAttemptTimeout\"\n);\nconst IPV4Regex = /^(?:\\d{1,3}\\.){3}\\d{1,3}$/;\nexport const isIPv4 = (host) => IPV4Regex.test(host);\nconst IPV6Regex = /^([\\dA-Fa-f]{1,4}:){7}[\\dA-Fa-f]{1,4}$/;\nexport const isIPv6 = (host) => IPV6Regex.test(host);\nexport const isIP = (host) => {\n  if (isIPv4(host)) {\n    return 4;\n  }\n  if (isIPv6(host)) {\n    return 6;\n  }\n  return 0;\n};\nexport const _createServerHandle = notImplemented(\"net._createServerHandle\");\nexport const _normalizeArgs = notImplemented(\"net._normalizeArgs\");\nexport const _setSimultaneousAccepts = notImplemented(\n  \"net._setSimultaneousAccepts\"\n);\nexport const exports = {\n  Socket,\n  // @ts-expect-error (missing types?)\n  Stream: Socket,\n  Server,\n  BlockList,\n  SocketAddress,\n  createServer,\n  connect,\n  createConnection,\n  isIPv4,\n  isIPv6,\n  isIP,\n  getDefaultAutoSelectFamily,\n  getDefaultAutoSelectFamilyAttemptTimeout,\n  setDefaultAutoSelectFamily,\n  setDefaultAutoSelectFamilyAttemptTimeout,\n  _createServerHandle,\n  _normalizeArgs,\n  _setSimultaneousAccepts\n};\nexport default exports;\n", "import { Socket } from \"../../net/index.mjs\";\nexport class ReadStream extends Socket {\n  fd;\n  constructor(fd) {\n    super();\n    this.fd = fd;\n  }\n  isRaw = false;\n  setRawMode(mode) {\n    this.isRaw = mode;\n    return this;\n  }\n  isTTY = false;\n}\n", "import { Socket } from \"node:net\";\nexport class WriteStream extends Socket {\n  fd;\n  constructor(fd) {\n    super();\n    this.fd = fd;\n  }\n  clearLine(dir, callback) {\n    callback && callback();\n    return false;\n  }\n  clearScreenDown(callback) {\n    callback && callback();\n    return false;\n  }\n  cursorTo(x, y, callback) {\n    callback && typeof callback === \"function\" && callback();\n    return false;\n  }\n  moveCursor(dx, dy, callback) {\n    callback && callback();\n    return false;\n  }\n  getColorDepth(env) {\n    return 1;\n  }\n  hasColors(count, env) {\n    return false;\n  }\n  getWindowSize() {\n    return [this.columns, this.rows];\n  }\n  columns = 80;\n  rows = 24;\n  isTTY = false;\n}\n", "import { ReadStream } from \"./internal/read-stream.mjs\";\nimport { WriteStream } from \"./internal/write-stream.mjs\";\nexport { ReadStream } from \"./internal/read-stream.mjs\";\nexport { WriteStream } from \"./internal/write-stream.mjs\";\nexport const isatty = function() {\n  return false;\n};\nexport default {\n  ReadStream,\n  WriteStream,\n  isatty\n};\n", "export default Object.freeze(\n  Object.create(null, {\n    __unenv__: { get: () => true }\n  })\n);\n", "const _envShim = /* @__PURE__ */ Object.create(null);\nconst _processEnv = globalThis.process?.env;\nconst _getEnv = (useShim) => _processEnv || globalThis.__env__ || (useShim ? _envShim : globalThis);\nexport const env = new Proxy(_envShim, {\n  get(_, prop) {\n    const env2 = _getEnv();\n    return env2[prop] ?? _envShim[prop];\n  },\n  has(_, prop) {\n    const env2 = _getEnv();\n    return prop in env2 || prop in _envShim;\n  },\n  set(_, prop, value) {\n    const env2 = _getEnv(true);\n    env2[prop] = value;\n    return true;\n  },\n  deleteProperty(_, prop) {\n    const env2 = _getEnv(true);\n    delete env2[prop];\n    return true;\n  },\n  ownKeys() {\n    const env2 = _getEnv();\n    return Object.keys(env2);\n  }\n});\n", "export const hrtime = Object.assign(\n  function hrtime2(startTime) {\n    const now = Date.now();\n    const seconds = Math.trunc(now / 1e3);\n    const nanos = now % 1e3 * 1e6;\n    if (startTime) {\n      let diffSeconds = seconds - startTime[0];\n      let diffNanos = nanos - startTime[0];\n      if (diffNanos < 0) {\n        diffSeconds = diffSeconds - 1;\n        diffNanos = 1e9 + diffNanos;\n      }\n      return [diffSeconds, diffNanos];\n    }\n    return [seconds, nanos];\n  },\n  {\n    bigint: function bigint() {\n      return BigInt(Date.now() * 1e6);\n    }\n  }\n);\nexport const nextTick = globalThis.queueMicrotask ? (cb, ...args) => {\n  globalThis.queueMicrotask(cb.bind(void 0, ...args));\n} : _createNextTickWithTimeout();\nfunction _createNextTickWithTimeout() {\n  let queue = [];\n  let draining = false;\n  let currentQueue;\n  let queueIndex = -1;\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n    draining = false;\n    if (currentQueue.length > 0) {\n      queue = [...currentQueue, ...queue];\n    } else {\n      queueIndex = -1;\n    }\n    if (queue.length > 0) {\n      drainQueue();\n    }\n  }\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n    const timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n    let len = queue.length;\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex]();\n        }\n      }\n      queueIndex = -1;\n      len = queue.length;\n    }\n    currentQueue = void 0;\n    draining = false;\n    clearTimeout(timeout);\n  }\n  const nextTick2 = (cb, ...args) => {\n    queue.push(cb.bind(void 0, ...args));\n    if (queue.length === 1 && !draining) {\n      setTimeout(drainQueue);\n    }\n  };\n  return nextTick2;\n}\n", "import { ReadStream, WriteStream } from \"node:tty\";\nimport empty from \"../../../mock/empty.mjs\";\nimport { notImplemented } from \"../../../_internal/utils.mjs\";\nimport { env } from \"./env.mjs\";\nimport { hrtime, nextTick } from \"./time.mjs\";\nexport { hrtime, nextTick } from \"./time.mjs\";\nexport { env } from \"./env.mjs\";\nexport const title = \"unenv\";\nexport const argv = [];\nexport const version = \"\";\nexport const versions = {\n  ares: \"\",\n  http_parser: \"\",\n  icu: \"\",\n  modules: \"\",\n  node: \"\",\n  openssl: \"\",\n  uv: \"\",\n  v8: \"\",\n  zlib: \"\"\n};\nfunction noop() {\n  return process;\n}\nexport const on = noop;\nexport const addListener = noop;\nexport const once = noop;\nexport const off = noop;\nexport const removeListener = noop;\nexport const removeAllListeners = noop;\nexport const emit = function emit2(event) {\n  if (event === \"message\" || event === \"multipleResolves\") {\n    return process;\n  }\n  return false;\n};\nexport const prependListener = noop;\nexport const prependOnceListener = noop;\nexport const listeners = function(name) {\n  return [];\n};\nexport const listenerCount = () => 0;\nexport const binding = function(name) {\n  throw new Error(\"[unenv] process.binding is not supported\");\n};\nlet _cwd = \"/\";\nexport const cwd = function cwd2() {\n  return _cwd;\n};\nexport const chdir = function chdir2(dir) {\n  _cwd = dir;\n};\nexport const umask = function umask2() {\n  return 0;\n};\nexport const getegid = function getegid2() {\n  return 1e3;\n};\nexport const geteuid = function geteuid2() {\n  return 1e3;\n};\nexport const getgid = function getgid2() {\n  return 1e3;\n};\nexport const getuid = function getuid2() {\n  return 1e3;\n};\nexport const getgroups = function getgroups2() {\n  return [];\n};\nexport const getBuiltinModule = (_name) => void 0;\nexport const abort = notImplemented(\"process.abort\");\nexport const allowedNodeEnvironmentFlags = /* @__PURE__ */ new Set();\nexport const arch = \"\";\nexport const argv0 = \"\";\nexport const config = empty;\nconst connected = false;\nexport const constrainedMemory = () => 0;\nexport const availableMemory = () => 0;\nexport const cpuUsage = notImplemented(\"process.cpuUsage\");\nexport const debugPort = 0;\nexport const dlopen = notImplemented(\"process.dlopen\");\nconst disconnect = noop;\nexport const emitWarning = noop;\nexport const eventNames = notImplemented(\"process.eventNames\");\nexport const execArgv = [];\nexport const execPath = \"\";\nexport const exit = notImplemented(\"process.exit\");\nexport const features = /* @__PURE__ */ Object.create({\n  inspector: void 0,\n  debug: void 0,\n  uv: void 0,\n  ipv6: void 0,\n  tls_alpn: void 0,\n  tls_sni: void 0,\n  tls_ocsp: void 0,\n  tls: void 0,\n  cached_builtins: void 0\n});\nexport const getActiveResourcesInfo = () => [];\nexport const getMaxListeners = notImplemented(\n  \"process.getMaxListeners\"\n);\nexport const kill = notImplemented(\"process.kill\");\nexport const memoryUsage = Object.assign(\n  () => ({\n    arrayBuffers: 0,\n    rss: 0,\n    external: 0,\n    heapTotal: 0,\n    heapUsed: 0\n  }),\n  { rss: () => 0 }\n);\nexport const pid = 1e3;\nexport const platform = \"\";\nexport const ppid = 1e3;\nexport const rawListeners = notImplemented(\n  \"process.rawListeners\"\n);\nexport const release = /* @__PURE__ */ Object.create({\n  name: \"\",\n  lts: \"\",\n  sourceUrl: void 0,\n  headersUrl: void 0\n});\nexport const report = /* @__PURE__ */ Object.create({\n  compact: void 0,\n  directory: void 0,\n  filename: void 0,\n  getReport: notImplemented(\"process.report.getReport\"),\n  reportOnFatalError: void 0,\n  reportOnSignal: void 0,\n  reportOnUncaughtException: void 0,\n  signal: void 0,\n  writeReport: notImplemented(\"process.report.writeReport\")\n});\nexport const resourceUsage = notImplemented(\n  \"process.resourceUsage\"\n);\nexport const setegid = notImplemented(\"process.setegid\");\nexport const seteuid = notImplemented(\"process.seteuid\");\nexport const setgid = notImplemented(\"process.setgid\");\nexport const setgroups = notImplemented(\"process.setgroups\");\nexport const setuid = notImplemented(\"process.setuid\");\nexport const setMaxListeners = notImplemented(\n  \"process.setMaxListeners\"\n);\nexport const setSourceMapsEnabled = notImplemented(\"process.setSourceMapsEnabled\");\nexport const stdin = new ReadStream(0);\nexport const stdout = new WriteStream(1);\nexport const stderr = new WriteStream(2);\nconst traceDeprecation = false;\nexport const uptime = () => 0;\nexport const exitCode = 0;\nexport const setUncaughtExceptionCaptureCallback = notImplemented(\"process.setUncaughtExceptionCaptureCallback\");\nexport const hasUncaughtExceptionCaptureCallback = () => false;\nexport const sourceMapsEnabled = false;\nexport const loadEnvFile = notImplemented(\n  \"process.loadEnvFile\"\n);\nconst mainModule = void 0;\nconst permission = {\n  has: () => false\n};\nconst channel = {\n  ref() {\n  },\n  unref() {\n  }\n};\nconst throwDeprecation = false;\nexport const finalization = {\n  register() {\n  },\n  unregister() {\n  },\n  registerBeforeExit() {\n  }\n};\nexport const assert = notImplemented(\"process.assert\");\nexport const openStdin = notImplemented(\"process.openStdin\");\nexport const _debugEnd = notImplemented(\"process._debugEnd\");\nexport const _debugProcess = notImplemented(\"process._debugProcess\");\nexport const _fatalException = notImplemented(\"process._fatalException\");\nexport const _getActiveHandles = notImplemented(\"process._getActiveHandles\");\nexport const _getActiveRequests = notImplemented(\"process._getActiveRequests\");\nexport const _kill = notImplemented(\"process._kill\");\nexport const _preload_modules = [];\nexport const _rawDebug = notImplemented(\"process._rawDebug\");\nexport const _startProfilerIdleNotifier = notImplemented(\n  \"process._startProfilerIdleNotifier\"\n);\nexport const _stopProfilerIdleNotifier = notImplemented(\n  \"process.__stopProfilerIdleNotifier\"\n);\nexport const _tickCallback = notImplemented(\"process._tickCallback\");\nexport const _linkedBinding = notImplemented(\"process._linkedBinding\");\nexport const domain = void 0;\nexport const initgroups = notImplemented(\"process.initgroups\");\nexport const moduleLoadList = [];\nexport const reallyExit = noop;\nexport const _exiting = false;\nexport const _events = [];\nexport const _eventsCount = 0;\nexport const _maxListeners = 0;\nexport const process = {\n  // @ts-expect-error\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  exitCode,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  throwDeprecation,\n  mainModule,\n  permission,\n  channel,\n  arch,\n  argv,\n  argv0,\n  assert,\n  binding,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  openStdin,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions\n};\n", "export {\n  _debugEnd,\n  _debugProcess,\n  _events,\n  _eventsCount,\n  _exiting,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _linkedBinding,\n  _maxListeners,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  assert,\n  availableMemory,\n  binding,\n  chdir,\n  config,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  hrtime,\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  moduleLoadList,\n  off,\n  on,\n  once,\n  openStdin,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  reallyExit,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setUncaughtExceptionCaptureCallback,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  umask,\n  uptime,\n  version,\n  versions\n} from \"./internal/process.mjs\";\nimport {\n  _debugEnd as _debugEnd2,\n  _debugProcess as _debugProcess2,\n  _events as _events2,\n  _eventsCount as _eventsCount2,\n  _exiting as _exiting2,\n  _fatalException as _fatalException2,\n  _getActiveHandles as _getActiveHandles2,\n  _getActiveRequests as _getActiveRequests2,\n  _kill as _kill2,\n  _linkedBinding as _linkedBinding2,\n  _maxListeners as _maxListeners2,\n  _preload_modules as _preload_modules2,\n  _rawDebug as _rawDebug2,\n  _startProfilerIdleNotifier as _startProfilerIdleNotifier2,\n  _stopProfilerIdleNotifier as _stopProfilerIdleNotifier2,\n  _tickCallback as _tickCallback2,\n  abort as abort2,\n  addListener as addListener2,\n  allowedNodeEnvironmentFlags as allowedNodeEnvironmentFlags2,\n  arch as arch2,\n  argv as argv2,\n  argv0 as argv02,\n  assert as assert2,\n  availableMemory as availableMemory2,\n  binding as binding2,\n  chdir as chdir2,\n  config as config2,\n  constrainedMemory as constrainedMemory2,\n  cpuUsage as cpuUsage2,\n  cwd as cwd2,\n  debugPort as debugPort2,\n  dlopen as dlopen2,\n  domain as domain2,\n  emit as emit2,\n  emitWarning as emitWarning2,\n  eventNames as eventNames2,\n  execArgv as execArgv2,\n  execPath as execPath2,\n  exitCode as exitCode2,\n  features as features2,\n  getActiveResourcesInfo as getActiveResourcesInfo2,\n  getMaxListeners as getMaxListeners2,\n  getegid as getegid2,\n  geteuid as geteuid2,\n  getgid as getgid2,\n  getgroups as getgroups2,\n  getuid as getuid2,\n  hasUncaughtExceptionCaptureCallback as hasUncaughtExceptionCaptureCallback2,\n  hrtime as hrtime2,\n  initgroups as initgroups2,\n  kill as kill2,\n  listenerCount as listenerCount2,\n  listeners as listeners2,\n  loadEnvFile as loadEnvFile2,\n  memoryUsage as memoryUsage2,\n  moduleLoadList as moduleLoadList2,\n  off as off2,\n  on as on2,\n  once as once2,\n  openStdin as openStdin2,\n  pid as pid2,\n  ppid as ppid2,\n  prependListener as prependListener2,\n  prependOnceListener as prependOnceListener2,\n  rawListeners as rawListeners2,\n  reallyExit as reallyExit2,\n  release as release2,\n  removeAllListeners as removeAllListeners2,\n  removeListener as removeListener2,\n  report as report2,\n  resourceUsage as resourceUsage2,\n  setMaxListeners as setMaxListeners2,\n  setSourceMapsEnabled as setSourceMapsEnabled2,\n  setUncaughtExceptionCaptureCallback as setUncaughtExceptionCaptureCallback2,\n  setegid as setegid2,\n  seteuid as seteuid2,\n  setgid as setgid2,\n  setgroups as setgroups2,\n  setuid as setuid2,\n  sourceMapsEnabled as sourceMapsEnabled2,\n  stderr as stderr2,\n  stdin as stdin2,\n  stdout as stdout2,\n  title as title2,\n  umask as umask2,\n  uptime as uptime2,\n  version as version2,\n  versions as versions2\n} from \"./internal/process.mjs\";\nconst unpatchedGlobalThisProcess = globalThis[\"process\"];\nexport const getBuiltinModule = unpatchedGlobalThisProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nexport const { env, exit, nextTick, platform } = workerdProcess;\nconst _process = {\n  /**\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\n   */\n  // @ts-expect-error (not typed)\n  _debugEnd: _debugEnd2,\n  _debugProcess: _debugProcess2,\n  _events: _events2,\n  _eventsCount: _eventsCount2,\n  _exiting: _exiting2,\n  _fatalException: _fatalException2,\n  _getActiveHandles: _getActiveHandles2,\n  _getActiveRequests: _getActiveRequests2,\n  _kill: _kill2,\n  _linkedBinding: _linkedBinding2,\n  _maxListeners: _maxListeners2,\n  _preload_modules: _preload_modules2,\n  _rawDebug: _rawDebug2,\n  _startProfilerIdleNotifier: _startProfilerIdleNotifier2,\n  _stopProfilerIdleNotifier: _stopProfilerIdleNotifier2,\n  _tickCallback: _tickCallback2,\n  abort: abort2,\n  addListener: addListener2,\n  allowedNodeEnvironmentFlags: allowedNodeEnvironmentFlags2,\n  arch: arch2,\n  argv: argv2,\n  argv0: argv02,\n  assert: assert2,\n  availableMemory: availableMemory2,\n  binding: binding2,\n  chdir: chdir2,\n  config: config2,\n  constrainedMemory: constrainedMemory2,\n  cpuUsage: cpuUsage2,\n  cwd: cwd2,\n  debugPort: debugPort2,\n  dlopen: dlopen2,\n  domain: domain2,\n  emit: emit2,\n  emitWarning: emitWarning2,\n  eventNames: eventNames2,\n  execArgv: execArgv2,\n  execPath: execPath2,\n  exit,\n  exitCode: exitCode2,\n  features: features2,\n  getActiveResourcesInfo: getActiveResourcesInfo2,\n  getMaxListeners: getMaxListeners2,\n  getegid: getegid2,\n  geteuid: geteuid2,\n  getgid: getgid2,\n  getgroups: getgroups2,\n  getuid: getuid2,\n  hasUncaughtExceptionCaptureCallback: hasUncaughtExceptionCaptureCallback2,\n  hrtime: hrtime2,\n  initgroups: initgroups2,\n  kill: kill2,\n  listenerCount: listenerCount2,\n  listeners: listeners2,\n  loadEnvFile: loadEnvFile2,\n  memoryUsage: memoryUsage2,\n  moduleLoadList: moduleLoadList2,\n  off: off2,\n  on: on2,\n  once: once2,\n  openStdin: openStdin2,\n  pid: pid2,\n  platform,\n  ppid: ppid2,\n  prependListener: prependListener2,\n  prependOnceListener: prependOnceListener2,\n  rawListeners: rawListeners2,\n  reallyExit: reallyExit2,\n  release: release2,\n  removeAllListeners: removeAllListeners2,\n  removeListener: removeListener2,\n  report: report2,\n  resourceUsage: resourceUsage2,\n  setMaxListeners: setMaxListeners2,\n  setSourceMapsEnabled: setSourceMapsEnabled2,\n  setUncaughtExceptionCaptureCallback: setUncaughtExceptionCaptureCallback2,\n  setegid: setegid2,\n  seteuid: seteuid2,\n  setgid: setgid2,\n  setgroups: setgroups2,\n  setuid: setuid2,\n  sourceMapsEnabled: sourceMapsEnabled2,\n  stderr: stderr2,\n  stdin: stdin2,\n  stdout: stdout2,\n  title: title2,\n  umask: umask2,\n  uptime: uptime2,\n  version: version2,\n  versions: versions2,\n  /**\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\n   */\n  env,\n  getBuiltinModule,\n  nextTick\n};\nexport default _process;\n", "import globalVar from \"unenv/runtime/node/process/$cloudflare\";\nglobalThis.process = globalVar;", "/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nexport function assertNever(value: never): never {\n  throw new Error(`Unexpected value should never occur: ${value}`)\n}\n\ntype AllKeys<T> = T extends unknown ? keyof T : never\n\nexport function pick<O, K extends AllKeys<O>>(\n  base: O,\n  keys: readonly K[]\n): Pick<O, K> {\n  const entries = keys.map(key => [key, base?.[key]])\n  return Object.fromEntries(entries)\n}\n\nexport function isObject(o: unknown): o is Record<PropertyKey, unknown> {\n  return typeof o === \"object\" && o !== null\n}\n", "import { assertNever } from \"./utils\"\n\nexport enum LogLevel {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  WARN = \"warn\",\n  ERROR = \"error\",\n}\n\nexport interface Logger {\n  (level: LogLevel, message: string, extraInfo: Record<string, unknown>): void\n}\n\nexport function makeConsoleLogger(name: string): Logger {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo)\n  }\n}\n\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nexport function logLevelSeverity(level: LogLevel): number {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20\n    case LogLevel.INFO:\n      return 40\n    case LogLevel.WARN:\n      return 60\n    case LogLevel.ERROR:\n      return 80\n    default:\n      return assertNever(level)\n  }\n}\n", "import { SupportedResponse } from \"./fetch-types\"\nimport { isObject } from \"./utils\"\nimport { Assert } from \"./type-utils\"\n\n/**\n * Error codes returned in responses from the API.\n */\nexport enum APIErrorCode {\n  Unauthorized = \"unauthorized\",\n  RestrictedResource = \"restricted_resource\",\n  ObjectNotFound = \"object_not_found\",\n  RateLimited = \"rate_limited\",\n  InvalidJSON = \"invalid_json\",\n  InvalidRequestURL = \"invalid_request_url\",\n  InvalidRequest = \"invalid_request\",\n  ValidationError = \"validation_error\",\n  ConflictError = \"conflict_error\",\n  InternalServerError = \"internal_server_error\",\n  ServiceUnavailable = \"service_unavailable\",\n}\n\n/**\n * Error codes generated for client errors.\n */\nexport enum ClientErrorCode {\n  RequestTimeout = \"notionhq_client_request_timeout\",\n  ResponseError = \"notionhq_client_response_error\",\n}\n\n/**\n * Error codes on errors thrown by the `Client`.\n */\nexport type NotionErrorCode = APIErrorCode | ClientErrorCode\n\n/**\n * Base error type.\n */\nabstract class NotionClientErrorBase<\n  Code extends NotionErrorCode\n> extends Error {\n  abstract code: Code\n}\n\n/**\n * Error type that encompasses all the kinds of errors that the Notion client will throw.\n */\nexport type NotionClientError =\n  | RequestTimeoutError\n  | UnknownHTTPResponseError\n  | APIResponseError\n\n// Assert that NotionClientError's `code` property is a narrow type.\n// This prevents us from accidentally regressing to `string`-typed name field.\ntype _assertCodeIsNarrow = Assert<NotionErrorCode, NotionClientError[\"code\"]>\n\n// Assert that the type of `name` in NotionErrorCode is a narrow type.\n// This prevents us from accidentally regressing to `string`-typed name field.\ntype _assertNameIsNarrow = Assert<\n  \"RequestTimeoutError\" | \"UnknownHTTPResponseError\" | \"APIResponseError\",\n  NotionClientError[\"name\"]\n>\n\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nexport function isNotionClientError(\n  error: unknown\n): error is NotionClientError {\n  return isObject(error) && error instanceof NotionClientErrorBase\n}\n\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode<Code extends NotionErrorCode>(\n  error: unknown,\n  codes: { [C in Code]: true }\n): error is NotionClientError & { code: Code } {\n  return isNotionClientError(error) && error.code in codes\n}\n\n/**\n * Error thrown by the client if a request times out.\n */\nexport class RequestTimeoutError extends NotionClientErrorBase<ClientErrorCode.RequestTimeout> {\n  readonly code = ClientErrorCode.RequestTimeout\n  readonly name = \"RequestTimeoutError\"\n\n  constructor(message = \"Request to Notion API has timed out\") {\n    super(message)\n  }\n\n  static isRequestTimeoutError(error: unknown): error is RequestTimeoutError {\n    return isNotionClientErrorWithCode(error, {\n      [ClientErrorCode.RequestTimeout]: true,\n    })\n  }\n\n  static rejectAfterTimeout<T>(\n    promise: Promise<T>,\n    timeoutMS: number\n  ): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new RequestTimeoutError())\n      }, timeoutMS)\n\n      promise\n        .then(resolve)\n        .catch(reject)\n        .then(() => clearTimeout(timeoutId))\n    })\n  }\n}\n\ntype HTTPResponseErrorCode = ClientErrorCode.ResponseError | APIErrorCode\n\nclass HTTPResponseError<\n  Code extends HTTPResponseErrorCode\n> extends NotionClientErrorBase<Code> {\n  readonly name: string = \"HTTPResponseError\"\n  readonly code: Code\n  readonly status: number\n  readonly headers: SupportedResponse[\"headers\"]\n  readonly body: string\n\n  constructor(args: {\n    code: Code\n    status: number\n    message: string\n    headers: SupportedResponse[\"headers\"]\n    rawBodyText: string\n  }) {\n    super(args.message)\n    const { code, status, headers, rawBodyText } = args\n    this.code = code\n    this.status = status\n    this.headers = headers\n    this.body = rawBodyText\n  }\n}\n\nconst httpResponseErrorCodes: { [C in HTTPResponseErrorCode]: true } = {\n  [ClientErrorCode.ResponseError]: true,\n  [APIErrorCode.Unauthorized]: true,\n  [APIErrorCode.RestrictedResource]: true,\n  [APIErrorCode.ObjectNotFound]: true,\n  [APIErrorCode.RateLimited]: true,\n  [APIErrorCode.InvalidJSON]: true,\n  [APIErrorCode.InvalidRequestURL]: true,\n  [APIErrorCode.InvalidRequest]: true,\n  [APIErrorCode.ValidationError]: true,\n  [APIErrorCode.ConflictError]: true,\n  [APIErrorCode.InternalServerError]: true,\n  [APIErrorCode.ServiceUnavailable]: true,\n}\n\nexport function isHTTPResponseError(\n  error: unknown\n): error is UnknownHTTPResponseError | APIResponseError {\n  if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n    return false\n  }\n\n  type _assert = Assert<\n    UnknownHTTPResponseError | APIResponseError,\n    typeof error\n  >\n\n  return true\n}\n\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nexport class UnknownHTTPResponseError extends HTTPResponseError<ClientErrorCode.ResponseError> {\n  readonly name = \"UnknownHTTPResponseError\"\n\n  constructor(args: {\n    status: number\n    message: string | undefined\n    headers: SupportedResponse[\"headers\"]\n    rawBodyText: string\n  }) {\n    super({\n      ...args,\n      code: ClientErrorCode.ResponseError,\n      message:\n        args.message ??\n        `Request to Notion API failed with status: ${args.status}`,\n    })\n  }\n\n  static isUnknownHTTPResponseError(\n    error: unknown\n  ): error is UnknownHTTPResponseError {\n    return isNotionClientErrorWithCode(error, {\n      [ClientErrorCode.ResponseError]: true,\n    })\n  }\n}\n\nconst apiErrorCodes: { [C in APIErrorCode]: true } = {\n  [APIErrorCode.Unauthorized]: true,\n  [APIErrorCode.RestrictedResource]: true,\n  [APIErrorCode.ObjectNotFound]: true,\n  [APIErrorCode.RateLimited]: true,\n  [APIErrorCode.InvalidJSON]: true,\n  [APIErrorCode.InvalidRequestURL]: true,\n  [APIErrorCode.InvalidRequest]: true,\n  [APIErrorCode.ValidationError]: true,\n  [APIErrorCode.ConflictError]: true,\n  [APIErrorCode.InternalServerError]: true,\n  [APIErrorCode.ServiceUnavailable]: true,\n}\n\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nexport class APIResponseError extends HTTPResponseError<APIErrorCode> {\n  readonly name = \"APIResponseError\"\n\n  static isAPIResponseError(error: unknown): error is APIResponseError {\n    return isNotionClientErrorWithCode(error, apiErrorCodes)\n  }\n}\n\nexport function buildRequestError(\n  response: SupportedResponse,\n  bodyText: string\n): APIResponseError | UnknownHTTPResponseError {\n  const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText)\n  if (apiErrorResponseBody !== undefined) {\n    return new APIResponseError({\n      code: apiErrorResponseBody.code,\n      message: apiErrorResponseBody.message,\n      headers: response.headers,\n      status: response.status,\n      rawBodyText: bodyText,\n    })\n  }\n  return new UnknownHTTPResponseError({\n    message: undefined,\n    headers: response.headers,\n    status: response.status,\n    rawBodyText: bodyText,\n  })\n}\n\nfunction parseAPIErrorResponseBody(\n  body: string\n): { code: APIErrorCode; message: string } | undefined {\n  if (typeof body !== \"string\") {\n    return\n  }\n\n  let parsed: unknown\n  try {\n    parsed = JSON.parse(body)\n  } catch (parseError) {\n    return\n  }\n\n  if (\n    !isObject(parsed) ||\n    typeof parsed[\"message\"] !== \"string\" ||\n    !isAPIErrorCode(parsed[\"code\"])\n  ) {\n    return\n  }\n\n  return {\n    ...parsed,\n    code: parsed[\"code\"],\n    message: parsed[\"message\"],\n  }\n}\n\nfunction isAPIErrorCode(code: unknown): code is APIErrorCode {\n  return typeof code === \"string\" && code in apiErrorCodes\n}\n", "// cspell:disable-file\n// Note: This is a generated file.\n\ntype IdRequest = string | string\n\nexport type PersonUserObjectResponse = {\n  type: \"person\"\n  person: { email?: string }\n  name: string | null\n  avatar_url: string | null\n  id: IdRequest\n  object: \"user\"\n}\n\ntype EmptyObject = Record<string, never>\n\nexport type PartialUserObjectResponse = { id: IdRequest; object: \"user\" }\n\nexport type BotUserObjectResponse = {\n  type: \"bot\"\n  bot:\n    | EmptyObject\n    | {\n        owner:\n          | {\n              type: \"user\"\n              user:\n                | {\n                    type: \"person\"\n                    person: { email: string }\n                    name: string | null\n                    avatar_url: string | null\n                    id: IdRequest\n                    object: \"user\"\n                  }\n                | PartialUserObjectResponse\n            }\n          | { type: \"workspace\"; workspace: true }\n        workspace_name: string | null\n      }\n  name: string | null\n  avatar_url: string | null\n  id: IdRequest\n  object: \"user\"\n}\n\nexport type UserObjectResponse =\n  | PersonUserObjectResponse\n  | BotUserObjectResponse\n\ntype SelectColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n\ntype PartialSelectResponse = { id: string; name: string; color: SelectColor }\n\ntype TimeZoneRequest =\n  | \"Africa/Abidjan\"\n  | \"Africa/Accra\"\n  | \"Africa/Addis_Ababa\"\n  | \"Africa/Algiers\"\n  | \"Africa/Asmara\"\n  | \"Africa/Asmera\"\n  | \"Africa/Bamako\"\n  | \"Africa/Bangui\"\n  | \"Africa/Banjul\"\n  | \"Africa/Bissau\"\n  | \"Africa/Blantyre\"\n  | \"Africa/Brazzaville\"\n  | \"Africa/Bujumbura\"\n  | \"Africa/Cairo\"\n  | \"Africa/Casablanca\"\n  | \"Africa/Ceuta\"\n  | \"Africa/Conakry\"\n  | \"Africa/Dakar\"\n  | \"Africa/Dar_es_Salaam\"\n  | \"Africa/Djibouti\"\n  | \"Africa/Douala\"\n  | \"Africa/El_Aaiun\"\n  | \"Africa/Freetown\"\n  | \"Africa/Gaborone\"\n  | \"Africa/Harare\"\n  | \"Africa/Johannesburg\"\n  | \"Africa/Juba\"\n  | \"Africa/Kampala\"\n  | \"Africa/Khartoum\"\n  | \"Africa/Kigali\"\n  | \"Africa/Kinshasa\"\n  | \"Africa/Lagos\"\n  | \"Africa/Libreville\"\n  | \"Africa/Lome\"\n  | \"Africa/Luanda\"\n  | \"Africa/Lubumbashi\"\n  | \"Africa/Lusaka\"\n  | \"Africa/Malabo\"\n  | \"Africa/Maputo\"\n  | \"Africa/Maseru\"\n  | \"Africa/Mbabane\"\n  | \"Africa/Mogadishu\"\n  | \"Africa/Monrovia\"\n  | \"Africa/Nairobi\"\n  | \"Africa/Ndjamena\"\n  | \"Africa/Niamey\"\n  | \"Africa/Nouakchott\"\n  | \"Africa/Ouagadougou\"\n  | \"Africa/Porto-Novo\"\n  | \"Africa/Sao_Tome\"\n  | \"Africa/Timbuktu\"\n  | \"Africa/Tripoli\"\n  | \"Africa/Tunis\"\n  | \"Africa/Windhoek\"\n  | \"America/Adak\"\n  | \"America/Anchorage\"\n  | \"America/Anguilla\"\n  | \"America/Antigua\"\n  | \"America/Araguaina\"\n  | \"America/Argentina/Buenos_Aires\"\n  | \"America/Argentina/Catamarca\"\n  | \"America/Argentina/ComodRivadavia\"\n  | \"America/Argentina/Cordoba\"\n  | \"America/Argentina/Jujuy\"\n  | \"America/Argentina/La_Rioja\"\n  | \"America/Argentina/Mendoza\"\n  | \"America/Argentina/Rio_Gallegos\"\n  | \"America/Argentina/Salta\"\n  | \"America/Argentina/San_Juan\"\n  | \"America/Argentina/San_Luis\"\n  | \"America/Argentina/Tucuman\"\n  | \"America/Argentina/Ushuaia\"\n  | \"America/Aruba\"\n  | \"America/Asuncion\"\n  | \"America/Atikokan\"\n  | \"America/Atka\"\n  | \"America/Bahia\"\n  | \"America/Bahia_Banderas\"\n  | \"America/Barbados\"\n  | \"America/Belem\"\n  | \"America/Belize\"\n  | \"America/Blanc-Sablon\"\n  | \"America/Boa_Vista\"\n  | \"America/Bogota\"\n  | \"America/Boise\"\n  | \"America/Buenos_Aires\"\n  | \"America/Cambridge_Bay\"\n  | \"America/Campo_Grande\"\n  | \"America/Cancun\"\n  | \"America/Caracas\"\n  | \"America/Catamarca\"\n  | \"America/Cayenne\"\n  | \"America/Cayman\"\n  | \"America/Chicago\"\n  | \"America/Chihuahua\"\n  | \"America/Ciudad_Juarez\"\n  | \"America/Coral_Harbour\"\n  | \"America/Cordoba\"\n  | \"America/Costa_Rica\"\n  | \"America/Creston\"\n  | \"America/Cuiaba\"\n  | \"America/Curacao\"\n  | \"America/Danmarkshavn\"\n  | \"America/Dawson\"\n  | \"America/Dawson_Creek\"\n  | \"America/Denver\"\n  | \"America/Detroit\"\n  | \"America/Dominica\"\n  | \"America/Edmonton\"\n  | \"America/Eirunepe\"\n  | \"America/El_Salvador\"\n  | \"America/Ensenada\"\n  | \"America/Fort_Nelson\"\n  | \"America/Fort_Wayne\"\n  | \"America/Fortaleza\"\n  | \"America/Glace_Bay\"\n  | \"America/Godthab\"\n  | \"America/Goose_Bay\"\n  | \"America/Grand_Turk\"\n  | \"America/Grenada\"\n  | \"America/Guadeloupe\"\n  | \"America/Guatemala\"\n  | \"America/Guayaquil\"\n  | \"America/Guyana\"\n  | \"America/Halifax\"\n  | \"America/Havana\"\n  | \"America/Hermosillo\"\n  | \"America/Indiana/Indianapolis\"\n  | \"America/Indiana/Knox\"\n  | \"America/Indiana/Marengo\"\n  | \"America/Indiana/Petersburg\"\n  | \"America/Indiana/Tell_City\"\n  | \"America/Indiana/Vevay\"\n  | \"America/Indiana/Vincennes\"\n  | \"America/Indiana/Winamac\"\n  | \"America/Indianapolis\"\n  | \"America/Inuvik\"\n  | \"America/Iqaluit\"\n  | \"America/Jamaica\"\n  | \"America/Jujuy\"\n  | \"America/Juneau\"\n  | \"America/Kentucky/Louisville\"\n  | \"America/Kentucky/Monticello\"\n  | \"America/Knox_IN\"\n  | \"America/Kralendijk\"\n  | \"America/La_Paz\"\n  | \"America/Lima\"\n  | \"America/Los_Angeles\"\n  | \"America/Louisville\"\n  | \"America/Lower_Princes\"\n  | \"America/Maceio\"\n  | \"America/Managua\"\n  | \"America/Manaus\"\n  | \"America/Marigot\"\n  | \"America/Martinique\"\n  | \"America/Matamoros\"\n  | \"America/Mazatlan\"\n  | \"America/Mendoza\"\n  | \"America/Menominee\"\n  | \"America/Merida\"\n  | \"America/Metlakatla\"\n  | \"America/Mexico_City\"\n  | \"America/Miquelon\"\n  | \"America/Moncton\"\n  | \"America/Monterrey\"\n  | \"America/Montevideo\"\n  | \"America/Montreal\"\n  | \"America/Montserrat\"\n  | \"America/Nassau\"\n  | \"America/New_York\"\n  | \"America/Nipigon\"\n  | \"America/Nome\"\n  | \"America/Noronha\"\n  | \"America/North_Dakota/Beulah\"\n  | \"America/North_Dakota/Center\"\n  | \"America/North_Dakota/New_Salem\"\n  | \"America/Nuuk\"\n  | \"America/Ojinaga\"\n  | \"America/Panama\"\n  | \"America/Pangnirtung\"\n  | \"America/Paramaribo\"\n  | \"America/Phoenix\"\n  | \"America/Port-au-Prince\"\n  | \"America/Port_of_Spain\"\n  | \"America/Porto_Acre\"\n  | \"America/Porto_Velho\"\n  | \"America/Puerto_Rico\"\n  | \"America/Punta_Arenas\"\n  | \"America/Rainy_River\"\n  | \"America/Rankin_Inlet\"\n  | \"America/Recife\"\n  | \"America/Regina\"\n  | \"America/Resolute\"\n  | \"America/Rio_Branco\"\n  | \"America/Rosario\"\n  | \"America/Santa_Isabel\"\n  | \"America/Santarem\"\n  | \"America/Santiago\"\n  | \"America/Santo_Domingo\"\n  | \"America/Sao_Paulo\"\n  | \"America/Scoresbysund\"\n  | \"America/Shiprock\"\n  | \"America/Sitka\"\n  | \"America/St_Barthelemy\"\n  | \"America/St_Johns\"\n  | \"America/St_Kitts\"\n  | \"America/St_Lucia\"\n  | \"America/St_Thomas\"\n  | \"America/St_Vincent\"\n  | \"America/Swift_Current\"\n  | \"America/Tegucigalpa\"\n  | \"America/Thule\"\n  | \"America/Thunder_Bay\"\n  | \"America/Tijuana\"\n  | \"America/Toronto\"\n  | \"America/Tortola\"\n  | \"America/Vancouver\"\n  | \"America/Virgin\"\n  | \"America/Whitehorse\"\n  | \"America/Winnipeg\"\n  | \"America/Yakutat\"\n  | \"America/Yellowknife\"\n  | \"Antarctica/Casey\"\n  | \"Antarctica/Davis\"\n  | \"Antarctica/DumontDUrville\"\n  | \"Antarctica/Macquarie\"\n  | \"Antarctica/Mawson\"\n  | \"Antarctica/McMurdo\"\n  | \"Antarctica/Palmer\"\n  | \"Antarctica/Rothera\"\n  | \"Antarctica/South_Pole\"\n  | \"Antarctica/Syowa\"\n  | \"Antarctica/Troll\"\n  | \"Antarctica/Vostok\"\n  | \"Arctic/Longyearbyen\"\n  | \"Asia/Aden\"\n  | \"Asia/Almaty\"\n  | \"Asia/Amman\"\n  | \"Asia/Anadyr\"\n  | \"Asia/Aqtau\"\n  | \"Asia/Aqtobe\"\n  | \"Asia/Ashgabat\"\n  | \"Asia/Ashkhabad\"\n  | \"Asia/Atyrau\"\n  | \"Asia/Baghdad\"\n  | \"Asia/Bahrain\"\n  | \"Asia/Baku\"\n  | \"Asia/Bangkok\"\n  | \"Asia/Barnaul\"\n  | \"Asia/Beirut\"\n  | \"Asia/Bishkek\"\n  | \"Asia/Brunei\"\n  | \"Asia/Calcutta\"\n  | \"Asia/Chita\"\n  | \"Asia/Choibalsan\"\n  | \"Asia/Chongqing\"\n  | \"Asia/Chungking\"\n  | \"Asia/Colombo\"\n  | \"Asia/Dacca\"\n  | \"Asia/Damascus\"\n  | \"Asia/Dhaka\"\n  | \"Asia/Dili\"\n  | \"Asia/Dubai\"\n  | \"Asia/Dushanbe\"\n  | \"Asia/Famagusta\"\n  | \"Asia/Gaza\"\n  | \"Asia/Harbin\"\n  | \"Asia/Hebron\"\n  | \"Asia/Ho_Chi_Minh\"\n  | \"Asia/Hong_Kong\"\n  | \"Asia/Hovd\"\n  | \"Asia/Irkutsk\"\n  | \"Asia/Istanbul\"\n  | \"Asia/Jakarta\"\n  | \"Asia/Jayapura\"\n  | \"Asia/Jerusalem\"\n  | \"Asia/Kabul\"\n  | \"Asia/Kamchatka\"\n  | \"Asia/Karachi\"\n  | \"Asia/Kashgar\"\n  | \"Asia/Kathmandu\"\n  | \"Asia/Katmandu\"\n  | \"Asia/Khandyga\"\n  | \"Asia/Kolkata\"\n  | \"Asia/Krasnoyarsk\"\n  | \"Asia/Kuala_Lumpur\"\n  | \"Asia/Kuching\"\n  | \"Asia/Kuwait\"\n  | \"Asia/Macao\"\n  | \"Asia/Macau\"\n  | \"Asia/Magadan\"\n  | \"Asia/Makassar\"\n  | \"Asia/Manila\"\n  | \"Asia/Muscat\"\n  | \"Asia/Nicosia\"\n  | \"Asia/Novokuznetsk\"\n  | \"Asia/Novosibirsk\"\n  | \"Asia/Omsk\"\n  | \"Asia/Oral\"\n  | \"Asia/Phnom_Penh\"\n  | \"Asia/Pontianak\"\n  | \"Asia/Pyongyang\"\n  | \"Asia/Qatar\"\n  | \"Asia/Qostanay\"\n  | \"Asia/Qyzylorda\"\n  | \"Asia/Rangoon\"\n  | \"Asia/Riyadh\"\n  | \"Asia/Saigon\"\n  | \"Asia/Sakhalin\"\n  | \"Asia/Samarkand\"\n  | \"Asia/Seoul\"\n  | \"Asia/Shanghai\"\n  | \"Asia/Singapore\"\n  | \"Asia/Srednekolymsk\"\n  | \"Asia/Taipei\"\n  | \"Asia/Tashkent\"\n  | \"Asia/Tbilisi\"\n  | \"Asia/Tehran\"\n  | \"Asia/Tel_Aviv\"\n  | \"Asia/Thimbu\"\n  | \"Asia/Thimphu\"\n  | \"Asia/Tokyo\"\n  | \"Asia/Tomsk\"\n  | \"Asia/Ujung_Pandang\"\n  | \"Asia/Ulaanbaatar\"\n  | \"Asia/Ulan_Bator\"\n  | \"Asia/Urumqi\"\n  | \"Asia/Ust-Nera\"\n  | \"Asia/Vientiane\"\n  | \"Asia/Vladivostok\"\n  | \"Asia/Yakutsk\"\n  | \"Asia/Yangon\"\n  | \"Asia/Yekaterinburg\"\n  | \"Asia/Yerevan\"\n  | \"Atlantic/Azores\"\n  | \"Atlantic/Bermuda\"\n  | \"Atlantic/Canary\"\n  | \"Atlantic/Cape_Verde\"\n  | \"Atlantic/Faeroe\"\n  | \"Atlantic/Faroe\"\n  | \"Atlantic/Jan_Mayen\"\n  | \"Atlantic/Madeira\"\n  | \"Atlantic/Reykjavik\"\n  | \"Atlantic/South_Georgia\"\n  | \"Atlantic/St_Helena\"\n  | \"Atlantic/Stanley\"\n  | \"Australia/ACT\"\n  | \"Australia/Adelaide\"\n  | \"Australia/Brisbane\"\n  | \"Australia/Broken_Hill\"\n  | \"Australia/Canberra\"\n  | \"Australia/Currie\"\n  | \"Australia/Darwin\"\n  | \"Australia/Eucla\"\n  | \"Australia/Hobart\"\n  | \"Australia/LHI\"\n  | \"Australia/Lindeman\"\n  | \"Australia/Lord_Howe\"\n  | \"Australia/Melbourne\"\n  | \"Australia/NSW\"\n  | \"Australia/North\"\n  | \"Australia/Perth\"\n  | \"Australia/Queensland\"\n  | \"Australia/South\"\n  | \"Australia/Sydney\"\n  | \"Australia/Tasmania\"\n  | \"Australia/Victoria\"\n  | \"Australia/West\"\n  | \"Australia/Yancowinna\"\n  | \"Brazil/Acre\"\n  | \"Brazil/DeNoronha\"\n  | \"Brazil/East\"\n  | \"Brazil/West\"\n  | \"CET\"\n  | \"CST6CDT\"\n  | \"Canada/Atlantic\"\n  | \"Canada/Central\"\n  | \"Canada/Eastern\"\n  | \"Canada/Mountain\"\n  | \"Canada/Newfoundland\"\n  | \"Canada/Pacific\"\n  | \"Canada/Saskatchewan\"\n  | \"Canada/Yukon\"\n  | \"Chile/Continental\"\n  | \"Chile/EasterIsland\"\n  | \"Cuba\"\n  | \"EET\"\n  | \"EST\"\n  | \"EST5EDT\"\n  | \"Egypt\"\n  | \"Eire\"\n  | \"Etc/GMT\"\n  | \"Etc/GMT+0\"\n  | \"Etc/GMT+1\"\n  | \"Etc/GMT+10\"\n  | \"Etc/GMT+11\"\n  | \"Etc/GMT+12\"\n  | \"Etc/GMT+2\"\n  | \"Etc/GMT+3\"\n  | \"Etc/GMT+4\"\n  | \"Etc/GMT+5\"\n  | \"Etc/GMT+6\"\n  | \"Etc/GMT+7\"\n  | \"Etc/GMT+8\"\n  | \"Etc/GMT+9\"\n  | \"Etc/GMT-0\"\n  | \"Etc/GMT-1\"\n  | \"Etc/GMT-10\"\n  | \"Etc/GMT-11\"\n  | \"Etc/GMT-12\"\n  | \"Etc/GMT-13\"\n  | \"Etc/GMT-14\"\n  | \"Etc/GMT-2\"\n  | \"Etc/GMT-3\"\n  | \"Etc/GMT-4\"\n  | \"Etc/GMT-5\"\n  | \"Etc/GMT-6\"\n  | \"Etc/GMT-7\"\n  | \"Etc/GMT-8\"\n  | \"Etc/GMT-9\"\n  | \"Etc/GMT0\"\n  | \"Etc/Greenwich\"\n  | \"Etc/UCT\"\n  | \"Etc/UTC\"\n  | \"Etc/Universal\"\n  | \"Etc/Zulu\"\n  | \"Europe/Amsterdam\"\n  | \"Europe/Andorra\"\n  | \"Europe/Astrakhan\"\n  | \"Europe/Athens\"\n  | \"Europe/Belfast\"\n  | \"Europe/Belgrade\"\n  | \"Europe/Berlin\"\n  | \"Europe/Bratislava\"\n  | \"Europe/Brussels\"\n  | \"Europe/Bucharest\"\n  | \"Europe/Budapest\"\n  | \"Europe/Busingen\"\n  | \"Europe/Chisinau\"\n  | \"Europe/Copenhagen\"\n  | \"Europe/Dublin\"\n  | \"Europe/Gibraltar\"\n  | \"Europe/Guernsey\"\n  | \"Europe/Helsinki\"\n  | \"Europe/Isle_of_Man\"\n  | \"Europe/Istanbul\"\n  | \"Europe/Jersey\"\n  | \"Europe/Kaliningrad\"\n  | \"Europe/Kiev\"\n  | \"Europe/Kirov\"\n  | \"Europe/Kyiv\"\n  | \"Europe/Lisbon\"\n  | \"Europe/Ljubljana\"\n  | \"Europe/London\"\n  | \"Europe/Luxembourg\"\n  | \"Europe/Madrid\"\n  | \"Europe/Malta\"\n  | \"Europe/Mariehamn\"\n  | \"Europe/Minsk\"\n  | \"Europe/Monaco\"\n  | \"Europe/Moscow\"\n  | \"Europe/Nicosia\"\n  | \"Europe/Oslo\"\n  | \"Europe/Paris\"\n  | \"Europe/Podgorica\"\n  | \"Europe/Prague\"\n  | \"Europe/Riga\"\n  | \"Europe/Rome\"\n  | \"Europe/Samara\"\n  | \"Europe/San_Marino\"\n  | \"Europe/Sarajevo\"\n  | \"Europe/Saratov\"\n  | \"Europe/Simferopol\"\n  | \"Europe/Skopje\"\n  | \"Europe/Sofia\"\n  | \"Europe/Stockholm\"\n  | \"Europe/Tallinn\"\n  | \"Europe/Tirane\"\n  | \"Europe/Tiraspol\"\n  | \"Europe/Ulyanovsk\"\n  | \"Europe/Uzhgorod\"\n  | \"Europe/Vaduz\"\n  | \"Europe/Vatican\"\n  | \"Europe/Vienna\"\n  | \"Europe/Vilnius\"\n  | \"Europe/Volgograd\"\n  | \"Europe/Warsaw\"\n  | \"Europe/Zagreb\"\n  | \"Europe/Zaporozhye\"\n  | \"Europe/Zurich\"\n  | \"GB\"\n  | \"GB-Eire\"\n  | \"GMT\"\n  | \"GMT+0\"\n  | \"GMT-0\"\n  | \"GMT0\"\n  | \"Greenwich\"\n  | \"HST\"\n  | \"Hongkong\"\n  | \"Iceland\"\n  | \"Indian/Antananarivo\"\n  | \"Indian/Chagos\"\n  | \"Indian/Christmas\"\n  | \"Indian/Cocos\"\n  | \"Indian/Comoro\"\n  | \"Indian/Kerguelen\"\n  | \"Indian/Mahe\"\n  | \"Indian/Maldives\"\n  | \"Indian/Mauritius\"\n  | \"Indian/Mayotte\"\n  | \"Indian/Reunion\"\n  | \"Iran\"\n  | \"Israel\"\n  | \"Jamaica\"\n  | \"Japan\"\n  | \"Kwajalein\"\n  | \"Libya\"\n  | \"MET\"\n  | \"MST\"\n  | \"MST7MDT\"\n  | \"Mexico/BajaNorte\"\n  | \"Mexico/BajaSur\"\n  | \"Mexico/General\"\n  | \"NZ\"\n  | \"NZ-CHAT\"\n  | \"Navajo\"\n  | \"PRC\"\n  | \"PST8PDT\"\n  | \"Pacific/Apia\"\n  | \"Pacific/Auckland\"\n  | \"Pacific/Bougainville\"\n  | \"Pacific/Chatham\"\n  | \"Pacific/Chuuk\"\n  | \"Pacific/Easter\"\n  | \"Pacific/Efate\"\n  | \"Pacific/Enderbury\"\n  | \"Pacific/Fakaofo\"\n  | \"Pacific/Fiji\"\n  | \"Pacific/Funafuti\"\n  | \"Pacific/Galapagos\"\n  | \"Pacific/Gambier\"\n  | \"Pacific/Guadalcanal\"\n  | \"Pacific/Guam\"\n  | \"Pacific/Honolulu\"\n  | \"Pacific/Johnston\"\n  | \"Pacific/Kanton\"\n  | \"Pacific/Kiritimati\"\n  | \"Pacific/Kosrae\"\n  | \"Pacific/Kwajalein\"\n  | \"Pacific/Majuro\"\n  | \"Pacific/Marquesas\"\n  | \"Pacific/Midway\"\n  | \"Pacific/Nauru\"\n  | \"Pacific/Niue\"\n  | \"Pacific/Norfolk\"\n  | \"Pacific/Noumea\"\n  | \"Pacific/Pago_Pago\"\n  | \"Pacific/Palau\"\n  | \"Pacific/Pitcairn\"\n  | \"Pacific/Pohnpei\"\n  | \"Pacific/Ponape\"\n  | \"Pacific/Port_Moresby\"\n  | \"Pacific/Rarotonga\"\n  | \"Pacific/Saipan\"\n  | \"Pacific/Samoa\"\n  | \"Pacific/Tahiti\"\n  | \"Pacific/Tarawa\"\n  | \"Pacific/Tongatapu\"\n  | \"Pacific/Truk\"\n  | \"Pacific/Wake\"\n  | \"Pacific/Wallis\"\n  | \"Pacific/Yap\"\n  | \"Poland\"\n  | \"Portugal\"\n  | \"ROC\"\n  | \"ROK\"\n  | \"Singapore\"\n  | \"Turkey\"\n  | \"UCT\"\n  | \"US/Alaska\"\n  | \"US/Aleutian\"\n  | \"US/Arizona\"\n  | \"US/Central\"\n  | \"US/East-Indiana\"\n  | \"US/Eastern\"\n  | \"US/Hawaii\"\n  | \"US/Indiana-Starke\"\n  | \"US/Michigan\"\n  | \"US/Mountain\"\n  | \"US/Pacific\"\n  | \"US/Pacific-New\"\n  | \"US/Samoa\"\n  | \"UTC\"\n  | \"Universal\"\n  | \"W-SU\"\n  | \"WET\"\n  | \"Zulu\"\n\ntype DateResponse = {\n  start: string\n  end: string | null\n  time_zone: TimeZoneRequest | null\n}\n\ntype StringRequest = string\n\ntype TextRequest = string\n\ntype StringFormulaPropertyResponse = { type: \"string\"; string: string | null }\n\ntype DateFormulaPropertyResponse = { type: \"date\"; date: DateResponse | null }\n\ntype NumberFormulaPropertyResponse = { type: \"number\"; number: number | null }\n\ntype BooleanFormulaPropertyResponse = {\n  type: \"boolean\"\n  boolean: boolean | null\n}\n\ntype FormulaPropertyResponse =\n  | StringFormulaPropertyResponse\n  | DateFormulaPropertyResponse\n  | NumberFormulaPropertyResponse\n  | BooleanFormulaPropertyResponse\n\ntype VerificationPropertyUnverifiedResponse = {\n  state: \"unverified\"\n  date: null\n  verified_by: null\n}\n\ntype VerificationPropertyResponse = {\n  state: \"verified\" | \"expired\"\n  date: DateResponse | null\n  verified_by:\n    | { id: IdRequest }\n    | null\n    | {\n        person: { email?: string }\n        id: IdRequest\n        type?: \"person\"\n        name?: string | null\n        avatar_url?: string | null\n        object?: \"user\"\n      }\n    | null\n    | {\n        bot:\n          | EmptyObject\n          | {\n              owner:\n                | {\n                    type: \"user\"\n                    user:\n                      | {\n                          type: \"person\"\n                          person: { email: string }\n                          name: string | null\n                          avatar_url: string | null\n                          id: IdRequest\n                          object: \"user\"\n                        }\n                      | PartialUserObjectResponse\n                  }\n                | { type: \"workspace\"; workspace: true }\n              workspace_name: string | null\n            }\n        id: IdRequest\n        type?: \"bot\"\n        name?: string | null\n        avatar_url?: string | null\n        object?: \"user\"\n      }\n    | null\n}\n\ntype AnnotationResponse = {\n  bold: boolean\n  italic: boolean\n  strikethrough: boolean\n  underline: boolean\n  code: boolean\n  color:\n    | \"default\"\n    | \"gray\"\n    | \"brown\"\n    | \"orange\"\n    | \"yellow\"\n    | \"green\"\n    | \"blue\"\n    | \"purple\"\n    | \"pink\"\n    | \"red\"\n    | \"gray_background\"\n    | \"brown_background\"\n    | \"orange_background\"\n    | \"yellow_background\"\n    | \"green_background\"\n    | \"blue_background\"\n    | \"purple_background\"\n    | \"pink_background\"\n    | \"red_background\"\n}\n\nexport type TextRichTextItemResponse = {\n  type: \"text\"\n  text: { content: string; link: { url: TextRequest } | null }\n  annotations: AnnotationResponse\n  plain_text: string\n  href: string | null\n}\n\ntype LinkPreviewMentionResponse = { url: TextRequest }\n\ntype TemplateMentionDateTemplateMentionResponse = {\n  type: \"template_mention_date\"\n  template_mention_date: \"today\" | \"now\"\n}\n\ntype TemplateMentionUserTemplateMentionResponse = {\n  type: \"template_mention_user\"\n  template_mention_user: \"me\"\n}\n\ntype TemplateMentionResponse =\n  | TemplateMentionDateTemplateMentionResponse\n  | TemplateMentionUserTemplateMentionResponse\n\nexport type MentionRichTextItemResponse = {\n  type: \"mention\"\n  mention:\n    | { type: \"user\"; user: PartialUserObjectResponse | UserObjectResponse }\n    | { type: \"date\"; date: DateResponse }\n    | { type: \"link_preview\"; link_preview: LinkPreviewMentionResponse }\n    | { type: \"template_mention\"; template_mention: TemplateMentionResponse }\n    | { type: \"page\"; page: { id: IdRequest } }\n    | { type: \"database\"; database: { id: IdRequest } }\n  annotations: AnnotationResponse\n  plain_text: string\n  href: string | null\n}\n\nexport type EquationRichTextItemResponse = {\n  type: \"equation\"\n  equation: { expression: TextRequest }\n  annotations: AnnotationResponse\n  plain_text: string\n  href: string | null\n}\n\nexport type RichTextItemResponse =\n  | TextRichTextItemResponse\n  | MentionRichTextItemResponse\n  | EquationRichTextItemResponse\n\ntype RollupFunction =\n  | \"count\"\n  | \"count_values\"\n  | \"empty\"\n  | \"not_empty\"\n  | \"unique\"\n  | \"show_unique\"\n  | \"percent_empty\"\n  | \"percent_not_empty\"\n  | \"sum\"\n  | \"average\"\n  | \"median\"\n  | \"min\"\n  | \"max\"\n  | \"range\"\n  | \"earliest_date\"\n  | \"latest_date\"\n  | \"date_range\"\n  | \"checked\"\n  | \"unchecked\"\n  | \"percent_checked\"\n  | \"percent_unchecked\"\n  | \"count_per_group\"\n  | \"percent_per_group\"\n  | \"show_original\"\n\ntype EmojiRequest =\n  | \"😀\"\n  | \"😃\"\n  | \"😄\"\n  | \"😁\"\n  | \"😆\"\n  | \"😅\"\n  | \"🤣\"\n  | \"😂\"\n  | \"🙂\"\n  | \"🙃\"\n  | \"🫠\"\n  | \"😉\"\n  | \"😊\"\n  | \"😇\"\n  | \"🥰\"\n  | \"😍\"\n  | \"🤩\"\n  | \"😘\"\n  | \"😗\"\n  | \"☺️\"\n  | \"☺\"\n  | \"😚\"\n  | \"😙\"\n  | \"🥲\"\n  | \"😋\"\n  | \"😛\"\n  | \"😜\"\n  | \"🤪\"\n  | \"😝\"\n  | \"🤑\"\n  | \"🤗\"\n  | \"🤭\"\n  | \"🫢\"\n  | \"🫣\"\n  | \"🤫\"\n  | \"🤔\"\n  | \"🫡\"\n  | \"🤐\"\n  | \"🤨\"\n  | \"😐\"\n  | \"😑\"\n  | \"😶\"\n  | \"🫥\"\n  | \"😶‍🌫️\"\n  | \"😶‍🌫\"\n  | \"😏\"\n  | \"😒\"\n  | \"🙄\"\n  | \"😬\"\n  | \"😮‍💨\"\n  | \"🤥\"\n  | \"😌\"\n  | \"😔\"\n  | \"😪\"\n  | \"🤤\"\n  | \"😴\"\n  | \"😷\"\n  | \"🤒\"\n  | \"🤕\"\n  | \"🤢\"\n  | \"🤮\"\n  | \"🤧\"\n  | \"🥵\"\n  | \"🥶\"\n  | \"🥴\"\n  | \"😵\"\n  | \"😵‍💫\"\n  | \"🤯\"\n  | \"🤠\"\n  | \"🥳\"\n  | \"🥸\"\n  | \"😎\"\n  | \"🤓\"\n  | \"🧐\"\n  | \"😕\"\n  | \"🫤\"\n  | \"😟\"\n  | \"🙁\"\n  | \"☹️\"\n  | \"☹\"\n  | \"😮\"\n  | \"😯\"\n  | \"😲\"\n  | \"😳\"\n  | \"🥺\"\n  | \"🥹\"\n  | \"😦\"\n  | \"😧\"\n  | \"😨\"\n  | \"😰\"\n  | \"😥\"\n  | \"😢\"\n  | \"😭\"\n  | \"😱\"\n  | \"😖\"\n  | \"😣\"\n  | \"😞\"\n  | \"😓\"\n  | \"😩\"\n  | \"😫\"\n  | \"🥱\"\n  | \"😤\"\n  | \"😡\"\n  | \"😠\"\n  | \"🤬\"\n  | \"😈\"\n  | \"👿\"\n  | \"💀\"\n  | \"☠️\"\n  | \"☠\"\n  | \"💩\"\n  | \"🤡\"\n  | \"👹\"\n  | \"👺\"\n  | \"👻\"\n  | \"👽\"\n  | \"👾\"\n  | \"🤖\"\n  | \"😺\"\n  | \"😸\"\n  | \"😹\"\n  | \"😻\"\n  | \"😼\"\n  | \"😽\"\n  | \"🙀\"\n  | \"😿\"\n  | \"😾\"\n  | \"🙈\"\n  | \"🙉\"\n  | \"🙊\"\n  | \"💋\"\n  | \"💌\"\n  | \"💘\"\n  | \"💝\"\n  | \"💖\"\n  | \"💗\"\n  | \"💓\"\n  | \"💞\"\n  | \"💕\"\n  | \"💟\"\n  | \"❣️\"\n  | \"❣\"\n  | \"💔\"\n  | \"❤️‍🔥\"\n  | \"❤‍🔥\"\n  | \"❤️‍🩹\"\n  | \"❤‍🩹\"\n  | \"❤️\"\n  | \"❤\"\n  | \"🧡\"\n  | \"💛\"\n  | \"💚\"\n  | \"💙\"\n  | \"💜\"\n  | \"🤎\"\n  | \"🖤\"\n  | \"🤍\"\n  | \"💯\"\n  | \"💢\"\n  | \"💥\"\n  | \"💫\"\n  | \"💦\"\n  | \"💨\"\n  | \"🕳️\"\n  | \"🕳\"\n  | \"💣\"\n  | \"💬\"\n  | \"👁️‍🗨️\"\n  | \"🗨️\"\n  | \"🗨\"\n  | \"🗯️\"\n  | \"🗯\"\n  | \"💭\"\n  | \"💤\"\n  | \"👋🏻\"\n  | \"👋🏼\"\n  | \"👋🏽\"\n  | \"👋🏾\"\n  | \"👋🏿\"\n  | \"👋\"\n  | \"🤚🏻\"\n  | \"🤚🏼\"\n  | \"🤚🏽\"\n  | \"🤚🏾\"\n  | \"🤚🏿\"\n  | \"🤚\"\n  | \"🖐🏻\"\n  | \"🖐🏼\"\n  | \"🖐🏽\"\n  | \"🖐🏾\"\n  | \"🖐🏿\"\n  | \"🖐️\"\n  | \"🖐\"\n  | \"✋🏻\"\n  | \"✋🏼\"\n  | \"✋🏽\"\n  | \"✋🏾\"\n  | \"✋🏿\"\n  | \"✋\"\n  | \"🖖🏻\"\n  | \"🖖🏼\"\n  | \"🖖🏽\"\n  | \"🖖🏾\"\n  | \"🖖🏿\"\n  | \"🖖\"\n  | \"🫱🏻\"\n  | \"🫱🏼\"\n  | \"🫱🏽\"\n  | \"🫱🏾\"\n  | \"🫱🏿\"\n  | \"🫱\"\n  | \"🫲🏻\"\n  | \"🫲🏼\"\n  | \"🫲🏽\"\n  | \"🫲🏾\"\n  | \"🫲🏿\"\n  | \"🫲\"\n  | \"🫳🏻\"\n  | \"🫳🏼\"\n  | \"🫳🏽\"\n  | \"🫳🏾\"\n  | \"🫳🏿\"\n  | \"🫳\"\n  | \"🫴🏻\"\n  | \"🫴🏼\"\n  | \"🫴🏽\"\n  | \"🫴🏾\"\n  | \"🫴🏿\"\n  | \"🫴\"\n  | \"👌🏻\"\n  | \"👌🏼\"\n  | \"👌🏽\"\n  | \"👌🏾\"\n  | \"👌🏿\"\n  | \"👌\"\n  | \"🤌🏻\"\n  | \"🤌🏼\"\n  | \"🤌🏽\"\n  | \"🤌🏾\"\n  | \"🤌🏿\"\n  | \"🤌\"\n  | \"🤏🏻\"\n  | \"🤏🏼\"\n  | \"🤏🏽\"\n  | \"🤏🏾\"\n  | \"🤏🏿\"\n  | \"🤏\"\n  | \"✌🏻\"\n  | \"✌🏼\"\n  | \"✌🏽\"\n  | \"✌🏾\"\n  | \"✌🏿\"\n  | \"✌️\"\n  | \"✌\"\n  | \"🤞🏻\"\n  | \"🤞🏼\"\n  | \"🤞🏽\"\n  | \"🤞🏾\"\n  | \"🤞🏿\"\n  | \"🤞\"\n  | \"🫰🏻\"\n  | \"🫰🏼\"\n  | \"🫰🏽\"\n  | \"🫰🏾\"\n  | \"🫰🏿\"\n  | \"🫰\"\n  | \"🤟🏻\"\n  | \"🤟🏼\"\n  | \"🤟🏽\"\n  | \"🤟🏾\"\n  | \"🤟🏿\"\n  | \"🤟\"\n  | \"🤘🏻\"\n  | \"🤘🏼\"\n  | \"🤘🏽\"\n  | \"🤘🏾\"\n  | \"🤘🏿\"\n  | \"🤘\"\n  | \"🤙🏻\"\n  | \"🤙🏼\"\n  | \"🤙🏽\"\n  | \"🤙🏾\"\n  | \"🤙🏿\"\n  | \"🤙\"\n  | \"👈🏻\"\n  | \"👈🏼\"\n  | \"👈🏽\"\n  | \"👈🏾\"\n  | \"👈🏿\"\n  | \"👈\"\n  | \"👉🏻\"\n  | \"👉🏼\"\n  | \"👉🏽\"\n  | \"👉🏾\"\n  | \"👉🏿\"\n  | \"👉\"\n  | \"👆🏻\"\n  | \"👆🏼\"\n  | \"👆🏽\"\n  | \"👆🏾\"\n  | \"👆🏿\"\n  | \"👆\"\n  | \"🖕🏻\"\n  | \"🖕🏼\"\n  | \"🖕🏽\"\n  | \"🖕🏾\"\n  | \"🖕🏿\"\n  | \"🖕\"\n  | \"👇🏻\"\n  | \"👇🏼\"\n  | \"👇🏽\"\n  | \"👇🏾\"\n  | \"👇🏿\"\n  | \"👇\"\n  | \"☝🏻\"\n  | \"☝🏼\"\n  | \"☝🏽\"\n  | \"☝🏾\"\n  | \"☝🏿\"\n  | \"☝️\"\n  | \"☝\"\n  | \"🫵🏻\"\n  | \"🫵🏼\"\n  | \"🫵🏽\"\n  | \"🫵🏾\"\n  | \"🫵🏿\"\n  | \"🫵\"\n  | \"👍🏻\"\n  | \"👍🏼\"\n  | \"👍🏽\"\n  | \"👍🏾\"\n  | \"👍🏿\"\n  | \"👍\"\n  | \"👎🏻\"\n  | \"👎🏼\"\n  | \"👎🏽\"\n  | \"👎🏾\"\n  | \"👎🏿\"\n  | \"👎\"\n  | \"✊🏻\"\n  | \"✊🏼\"\n  | \"✊🏽\"\n  | \"✊🏾\"\n  | \"✊🏿\"\n  | \"✊\"\n  | \"👊🏻\"\n  | \"👊🏼\"\n  | \"👊🏽\"\n  | \"👊🏾\"\n  | \"👊🏿\"\n  | \"👊\"\n  | \"🤛🏻\"\n  | \"🤛🏼\"\n  | \"🤛🏽\"\n  | \"🤛🏾\"\n  | \"🤛🏿\"\n  | \"🤛\"\n  | \"🤜🏻\"\n  | \"🤜🏼\"\n  | \"🤜🏽\"\n  | \"🤜🏾\"\n  | \"🤜🏿\"\n  | \"🤜\"\n  | \"👏🏻\"\n  | \"👏🏼\"\n  | \"👏🏽\"\n  | \"👏🏾\"\n  | \"👏🏿\"\n  | \"👏\"\n  | \"🙌🏻\"\n  | \"🙌🏼\"\n  | \"🙌🏽\"\n  | \"🙌🏾\"\n  | \"🙌🏿\"\n  | \"🙌\"\n  | \"🫶🏻\"\n  | \"🫶🏼\"\n  | \"🫶🏽\"\n  | \"🫶🏾\"\n  | \"🫶🏿\"\n  | \"🫶\"\n  | \"👐🏻\"\n  | \"👐🏼\"\n  | \"👐🏽\"\n  | \"👐🏾\"\n  | \"👐🏿\"\n  | \"👐\"\n  | \"🤲🏻\"\n  | \"🤲🏼\"\n  | \"🤲🏽\"\n  | \"🤲🏾\"\n  | \"🤲🏿\"\n  | \"🤲\"\n  | \"🤝🏻\"\n  | \"🤝🏼\"\n  | \"🤝🏽\"\n  | \"🤝🏾\"\n  | \"🤝🏿\"\n  | \"🫱🏻‍🫲🏼\"\n  | \"🫱🏻‍🫲🏽\"\n  | \"🫱🏻‍🫲🏾\"\n  | \"🫱🏻‍🫲🏿\"\n  | \"🫱🏼‍🫲🏻\"\n  | \"🫱🏼‍🫲🏽\"\n  | \"🫱🏼‍🫲🏾\"\n  | \"🫱🏼‍🫲🏿\"\n  | \"🫱🏽‍🫲🏻\"\n  | \"🫱🏽‍🫲🏼\"\n  | \"🫱🏽‍🫲🏾\"\n  | \"🫱🏽‍🫲🏿\"\n  | \"🫱🏾‍🫲🏻\"\n  | \"🫱🏾‍🫲🏼\"\n  | \"🫱🏾‍🫲🏽\"\n  | \"🫱🏾‍🫲🏿\"\n  | \"🫱🏿‍🫲🏻\"\n  | \"🫱🏿‍🫲🏼\"\n  | \"🫱🏿‍🫲🏽\"\n  | \"🫱🏿‍🫲🏾\"\n  | \"🤝\"\n  | \"🙏🏻\"\n  | \"🙏🏼\"\n  | \"🙏🏽\"\n  | \"🙏🏾\"\n  | \"🙏🏿\"\n  | \"🙏\"\n  | \"✍🏻\"\n  | \"✍🏼\"\n  | \"✍🏽\"\n  | \"✍🏾\"\n  | \"✍🏿\"\n  | \"✍️\"\n  | \"✍\"\n  | \"💅🏻\"\n  | \"💅🏼\"\n  | \"💅🏽\"\n  | \"💅🏾\"\n  | \"💅🏿\"\n  | \"💅\"\n  | \"🤳🏻\"\n  | \"🤳🏼\"\n  | \"🤳🏽\"\n  | \"🤳🏾\"\n  | \"🤳🏿\"\n  | \"🤳\"\n  | \"💪🏻\"\n  | \"💪🏼\"\n  | \"💪🏽\"\n  | \"💪🏾\"\n  | \"💪🏿\"\n  | \"💪\"\n  | \"🦾\"\n  | \"🦿\"\n  | \"🦵🏻\"\n  | \"🦵🏼\"\n  | \"🦵🏽\"\n  | \"🦵🏾\"\n  | \"🦵🏿\"\n  | \"🦵\"\n  | \"🦶🏻\"\n  | \"🦶🏼\"\n  | \"🦶🏽\"\n  | \"🦶🏾\"\n  | \"🦶🏿\"\n  | \"🦶\"\n  | \"👂🏻\"\n  | \"👂🏼\"\n  | \"👂🏽\"\n  | \"👂🏾\"\n  | \"👂🏿\"\n  | \"👂\"\n  | \"🦻🏻\"\n  | \"🦻🏼\"\n  | \"🦻🏽\"\n  | \"🦻🏾\"\n  | \"🦻🏿\"\n  | \"🦻\"\n  | \"👃🏻\"\n  | \"👃🏼\"\n  | \"👃🏽\"\n  | \"👃🏾\"\n  | \"👃🏿\"\n  | \"👃\"\n  | \"🧠\"\n  | \"🫀\"\n  | \"🫁\"\n  | \"🦷\"\n  | \"🦴\"\n  | \"👀\"\n  | \"👁️\"\n  | \"👁\"\n  | \"👅\"\n  | \"👄\"\n  | \"🫦\"\n  | \"👶🏻\"\n  | \"👶🏼\"\n  | \"👶🏽\"\n  | \"👶🏾\"\n  | \"👶🏿\"\n  | \"👶\"\n  | \"🧒🏻\"\n  | \"🧒🏼\"\n  | \"🧒🏽\"\n  | \"🧒🏾\"\n  | \"🧒🏿\"\n  | \"🧒\"\n  | \"👦🏻\"\n  | \"👦🏼\"\n  | \"👦🏽\"\n  | \"👦🏾\"\n  | \"👦🏿\"\n  | \"👦\"\n  | \"👧🏻\"\n  | \"👧🏼\"\n  | \"👧🏽\"\n  | \"👧🏾\"\n  | \"👧🏿\"\n  | \"👧\"\n  | \"🧑🏻\"\n  | \"🧑🏼\"\n  | \"🧑🏽\"\n  | \"🧑🏾\"\n  | \"🧑🏿\"\n  | \"🧑\"\n  | \"👱🏻\"\n  | \"👱🏼\"\n  | \"👱🏽\"\n  | \"👱🏾\"\n  | \"👱🏿\"\n  | \"👱\"\n  | \"👨🏻\"\n  | \"👨🏼\"\n  | \"👨🏽\"\n  | \"👨🏾\"\n  | \"👨🏿\"\n  | \"👨\"\n  | \"🧔🏻\"\n  | \"🧔🏼\"\n  | \"🧔🏽\"\n  | \"🧔🏾\"\n  | \"🧔🏿\"\n  | \"🧔\"\n  | \"🧔🏻‍♂️\"\n  | \"🧔🏼‍♂️\"\n  | \"🧔🏽‍♂️\"\n  | \"🧔🏾‍♂️\"\n  | \"🧔🏿‍♂️\"\n  | \"🧔‍♂️\"\n  | \"🧔‍♂\"\n  | \"🧔🏻‍♀️\"\n  | \"🧔🏼‍♀️\"\n  | \"🧔🏽‍♀️\"\n  | \"🧔🏾‍♀️\"\n  | \"🧔🏿‍♀️\"\n  | \"🧔‍♀️\"\n  | \"🧔‍♀\"\n  | \"👨🏻‍🦰\"\n  | \"👨🏼‍🦰\"\n  | \"👨🏽‍🦰\"\n  | \"👨🏾‍🦰\"\n  | \"👨🏿‍🦰\"\n  | \"👨‍🦰\"\n  | \"👨🏻‍🦱\"\n  | \"👨🏼‍🦱\"\n  | \"👨🏽‍🦱\"\n  | \"👨🏾‍🦱\"\n  | \"👨🏿‍🦱\"\n  | \"👨‍🦱\"\n  | \"👨🏻‍🦳\"\n  | \"👨🏼‍🦳\"\n  | \"👨🏽‍🦳\"\n  | \"👨🏾‍🦳\"\n  | \"👨🏿‍🦳\"\n  | \"👨‍🦳\"\n  | \"👨🏻‍🦲\"\n  | \"👨🏼‍🦲\"\n  | \"👨🏽‍🦲\"\n  | \"👨🏾‍🦲\"\n  | \"👨🏿‍🦲\"\n  | \"👨‍🦲\"\n  | \"👩🏻\"\n  | \"👩🏼\"\n  | \"👩🏽\"\n  | \"👩🏾\"\n  | \"👩🏿\"\n  | \"👩\"\n  | \"👩🏻‍🦰\"\n  | \"👩🏼‍🦰\"\n  | \"👩🏽‍🦰\"\n  | \"👩🏾‍🦰\"\n  | \"👩🏿‍🦰\"\n  | \"👩‍🦰\"\n  | \"🧑🏻‍🦰\"\n  | \"🧑🏼‍🦰\"\n  | \"🧑🏽‍🦰\"\n  | \"🧑🏾‍🦰\"\n  | \"🧑🏿‍🦰\"\n  | \"🧑‍🦰\"\n  | \"👩🏻‍🦱\"\n  | \"👩🏼‍🦱\"\n  | \"👩🏽‍🦱\"\n  | \"👩🏾‍🦱\"\n  | \"👩🏿‍🦱\"\n  | \"👩‍🦱\"\n  | \"🧑🏻‍🦱\"\n  | \"🧑🏼‍🦱\"\n  | \"🧑🏽‍🦱\"\n  | \"🧑🏾‍🦱\"\n  | \"🧑🏿‍🦱\"\n  | \"🧑‍🦱\"\n  | \"👩🏻‍🦳\"\n  | \"👩🏼‍🦳\"\n  | \"👩🏽‍🦳\"\n  | \"👩🏾‍🦳\"\n  | \"👩🏿‍🦳\"\n  | \"👩‍🦳\"\n  | \"🧑🏻‍🦳\"\n  | \"🧑🏼‍🦳\"\n  | \"🧑🏽‍🦳\"\n  | \"🧑🏾‍🦳\"\n  | \"🧑🏿‍🦳\"\n  | \"🧑‍🦳\"\n  | \"👩🏻‍🦲\"\n  | \"👩🏼‍🦲\"\n  | \"👩🏽‍🦲\"\n  | \"👩🏾‍🦲\"\n  | \"👩🏿‍🦲\"\n  | \"👩‍🦲\"\n  | \"🧑🏻‍🦲\"\n  | \"🧑🏼‍🦲\"\n  | \"🧑🏽‍🦲\"\n  | \"🧑🏾‍🦲\"\n  | \"🧑🏿‍🦲\"\n  | \"🧑‍🦲\"\n  | \"👱🏻‍♀️\"\n  | \"👱🏼‍♀️\"\n  | \"👱🏽‍♀️\"\n  | \"👱🏾‍♀️\"\n  | \"👱🏿‍♀️\"\n  | \"👱‍♀️\"\n  | \"👱‍♀\"\n  | \"👱🏻‍♂️\"\n  | \"👱🏼‍♂️\"\n  | \"👱🏽‍♂️\"\n  | \"👱🏾‍♂️\"\n  | \"👱🏿‍♂️\"\n  | \"👱‍♂️\"\n  | \"👱‍♂\"\n  | \"🧓🏻\"\n  | \"🧓🏼\"\n  | \"🧓🏽\"\n  | \"🧓🏾\"\n  | \"🧓🏿\"\n  | \"🧓\"\n  | \"👴🏻\"\n  | \"👴🏼\"\n  | \"👴🏽\"\n  | \"👴🏾\"\n  | \"👴🏿\"\n  | \"👴\"\n  | \"👵🏻\"\n  | \"👵🏼\"\n  | \"👵🏽\"\n  | \"👵🏾\"\n  | \"👵🏿\"\n  | \"👵\"\n  | \"🙍🏻\"\n  | \"🙍🏼\"\n  | \"🙍🏽\"\n  | \"🙍🏾\"\n  | \"🙍🏿\"\n  | \"🙍\"\n  | \"🙍🏻‍♂️\"\n  | \"🙍🏼‍♂️\"\n  | \"🙍🏽‍♂️\"\n  | \"🙍🏾‍♂️\"\n  | \"🙍🏿‍♂️\"\n  | \"🙍‍♂️\"\n  | \"🙍‍♂\"\n  | \"🙍🏻‍♀️\"\n  | \"🙍🏼‍♀️\"\n  | \"🙍🏽‍♀️\"\n  | \"🙍🏾‍♀️\"\n  | \"🙍🏿‍♀️\"\n  | \"🙍‍♀️\"\n  | \"🙍‍♀\"\n  | \"🙎🏻\"\n  | \"🙎🏼\"\n  | \"🙎🏽\"\n  | \"🙎🏾\"\n  | \"🙎🏿\"\n  | \"🙎\"\n  | \"🙎🏻‍♂️\"\n  | \"🙎🏼‍♂️\"\n  | \"🙎🏽‍♂️\"\n  | \"🙎🏾‍♂️\"\n  | \"🙎🏿‍♂️\"\n  | \"🙎‍♂️\"\n  | \"🙎‍♂\"\n  | \"🙎🏻‍♀️\"\n  | \"🙎🏼‍♀️\"\n  | \"🙎🏽‍♀️\"\n  | \"🙎🏾‍♀️\"\n  | \"🙎🏿‍♀️\"\n  | \"🙎‍♀️\"\n  | \"🙎‍♀\"\n  | \"🙅🏻\"\n  | \"🙅🏼\"\n  | \"🙅🏽\"\n  | \"🙅🏾\"\n  | \"🙅🏿\"\n  | \"🙅\"\n  | \"🙅🏻‍♂️\"\n  | \"🙅🏼‍♂️\"\n  | \"🙅🏽‍♂️\"\n  | \"🙅🏾‍♂️\"\n  | \"🙅🏿‍♂️\"\n  | \"🙅‍♂️\"\n  | \"🙅‍♂\"\n  | \"🙅🏻‍♀️\"\n  | \"🙅🏼‍♀️\"\n  | \"🙅🏽‍♀️\"\n  | \"🙅🏾‍♀️\"\n  | \"🙅🏿‍♀️\"\n  | \"🙅‍♀️\"\n  | \"🙅‍♀\"\n  | \"🙆🏻\"\n  | \"🙆🏼\"\n  | \"🙆🏽\"\n  | \"🙆🏾\"\n  | \"🙆🏿\"\n  | \"🙆\"\n  | \"🙆🏻‍♂️\"\n  | \"🙆🏼‍♂️\"\n  | \"🙆🏽‍♂️\"\n  | \"🙆🏾‍♂️\"\n  | \"🙆🏿‍♂️\"\n  | \"🙆‍♂️\"\n  | \"🙆‍♂\"\n  | \"🙆🏻‍♀️\"\n  | \"🙆🏼‍♀️\"\n  | \"🙆🏽‍♀️\"\n  | \"🙆🏾‍♀️\"\n  | \"🙆🏿‍♀️\"\n  | \"🙆‍♀️\"\n  | \"🙆‍♀\"\n  | \"💁🏻\"\n  | \"💁🏼\"\n  | \"💁🏽\"\n  | \"💁🏾\"\n  | \"💁🏿\"\n  | \"💁\"\n  | \"💁🏻‍♂️\"\n  | \"💁🏼‍♂️\"\n  | \"💁🏽‍♂️\"\n  | \"💁🏾‍♂️\"\n  | \"💁🏿‍♂️\"\n  | \"💁‍♂️\"\n  | \"💁‍♂\"\n  | \"💁🏻‍♀️\"\n  | \"💁🏼‍♀️\"\n  | \"💁🏽‍♀️\"\n  | \"💁🏾‍♀️\"\n  | \"💁🏿‍♀️\"\n  | \"💁‍♀️\"\n  | \"💁‍♀\"\n  | \"🙋🏻\"\n  | \"🙋🏼\"\n  | \"🙋🏽\"\n  | \"🙋🏾\"\n  | \"🙋🏿\"\n  | \"🙋\"\n  | \"🙋🏻‍♂️\"\n  | \"🙋🏼‍♂️\"\n  | \"🙋🏽‍♂️\"\n  | \"🙋🏾‍♂️\"\n  | \"🙋🏿‍♂️\"\n  | \"🙋‍♂️\"\n  | \"🙋‍♂\"\n  | \"🙋🏻‍♀️\"\n  | \"🙋🏼‍♀️\"\n  | \"🙋🏽‍♀️\"\n  | \"🙋🏾‍♀️\"\n  | \"🙋🏿‍♀️\"\n  | \"🙋‍♀️\"\n  | \"🙋‍♀\"\n  | \"🧏🏻\"\n  | \"🧏🏼\"\n  | \"🧏🏽\"\n  | \"🧏🏾\"\n  | \"🧏🏿\"\n  | \"🧏\"\n  | \"🧏🏻‍♂️\"\n  | \"🧏🏼‍♂️\"\n  | \"🧏🏽‍♂️\"\n  | \"🧏🏾‍♂️\"\n  | \"🧏🏿‍♂️\"\n  | \"🧏‍♂️\"\n  | \"🧏‍♂\"\n  | \"🧏🏻‍♀️\"\n  | \"🧏🏼‍♀️\"\n  | \"🧏🏽‍♀️\"\n  | \"🧏🏾‍♀️\"\n  | \"🧏🏿‍♀️\"\n  | \"🧏‍♀️\"\n  | \"🧏‍♀\"\n  | \"🙇🏻\"\n  | \"🙇🏼\"\n  | \"🙇🏽\"\n  | \"🙇🏾\"\n  | \"🙇🏿\"\n  | \"🙇\"\n  | \"🙇🏻‍♂️\"\n  | \"🙇🏼‍♂️\"\n  | \"🙇🏽‍♂️\"\n  | \"🙇🏾‍♂️\"\n  | \"🙇🏿‍♂️\"\n  | \"🙇‍♂️\"\n  | \"🙇‍♂\"\n  | \"🙇🏻‍♀️\"\n  | \"🙇🏼‍♀️\"\n  | \"🙇🏽‍♀️\"\n  | \"🙇🏾‍♀️\"\n  | \"🙇🏿‍♀️\"\n  | \"🙇‍♀️\"\n  | \"🙇‍♀\"\n  | \"🤦🏻\"\n  | \"🤦🏼\"\n  | \"🤦🏽\"\n  | \"🤦🏾\"\n  | \"🤦🏿\"\n  | \"🤦\"\n  | \"🤦🏻‍♂️\"\n  | \"🤦🏼‍♂️\"\n  | \"🤦🏽‍♂️\"\n  | \"🤦🏾‍♂️\"\n  | \"🤦🏿‍♂️\"\n  | \"🤦‍♂️\"\n  | \"🤦‍♂\"\n  | \"🤦🏻‍♀️\"\n  | \"🤦🏼‍♀️\"\n  | \"🤦🏽‍♀️\"\n  | \"🤦🏾‍♀️\"\n  | \"🤦🏿‍♀️\"\n  | \"🤦‍♀️\"\n  | \"🤦‍♀\"\n  | \"🤷🏻\"\n  | \"🤷🏼\"\n  | \"🤷🏽\"\n  | \"🤷🏾\"\n  | \"🤷🏿\"\n  | \"🤷\"\n  | \"🤷🏻‍♂️\"\n  | \"🤷🏼‍♂️\"\n  | \"🤷🏽‍♂️\"\n  | \"🤷🏾‍♂️\"\n  | \"🤷🏿‍♂️\"\n  | \"🤷‍♂️\"\n  | \"🤷‍♂\"\n  | \"🤷🏻‍♀️\"\n  | \"🤷🏼‍♀️\"\n  | \"🤷🏽‍♀️\"\n  | \"🤷🏾‍♀️\"\n  | \"🤷🏿‍♀️\"\n  | \"🤷‍♀️\"\n  | \"🤷‍♀\"\n  | \"🧑🏻‍⚕️\"\n  | \"🧑🏼‍⚕️\"\n  | \"🧑🏽‍⚕️\"\n  | \"🧑🏾‍⚕️\"\n  | \"🧑🏿‍⚕️\"\n  | \"🧑‍⚕️\"\n  | \"🧑‍⚕\"\n  | \"👨🏻‍⚕️\"\n  | \"👨🏼‍⚕️\"\n  | \"👨🏽‍⚕️\"\n  | \"👨🏾‍⚕️\"\n  | \"👨🏿‍⚕️\"\n  | \"👨‍⚕️\"\n  | \"👨‍⚕\"\n  | \"👩🏻‍⚕️\"\n  | \"👩🏼‍⚕️\"\n  | \"👩🏽‍⚕️\"\n  | \"👩🏾‍⚕️\"\n  | \"👩🏿‍⚕️\"\n  | \"👩‍⚕️\"\n  | \"👩‍⚕\"\n  | \"🧑🏻‍🎓\"\n  | \"🧑🏼‍🎓\"\n  | \"🧑🏽‍🎓\"\n  | \"🧑🏾‍🎓\"\n  | \"🧑🏿‍🎓\"\n  | \"🧑‍🎓\"\n  | \"👨🏻‍🎓\"\n  | \"👨🏼‍🎓\"\n  | \"👨🏽‍🎓\"\n  | \"👨🏾‍🎓\"\n  | \"👨🏿‍🎓\"\n  | \"👨‍🎓\"\n  | \"👩🏻‍🎓\"\n  | \"👩🏼‍🎓\"\n  | \"👩🏽‍🎓\"\n  | \"👩🏾‍🎓\"\n  | \"👩🏿‍🎓\"\n  | \"👩‍🎓\"\n  | \"🧑🏻‍🏫\"\n  | \"🧑🏼‍🏫\"\n  | \"🧑🏽‍🏫\"\n  | \"🧑🏾‍🏫\"\n  | \"🧑🏿‍🏫\"\n  | \"🧑‍🏫\"\n  | \"👨🏻‍🏫\"\n  | \"👨🏼‍🏫\"\n  | \"👨🏽‍🏫\"\n  | \"👨🏾‍🏫\"\n  | \"👨🏿‍🏫\"\n  | \"👨‍🏫\"\n  | \"👩🏻‍🏫\"\n  | \"👩🏼‍🏫\"\n  | \"👩🏽‍🏫\"\n  | \"👩🏾‍🏫\"\n  | \"👩🏿‍🏫\"\n  | \"👩‍🏫\"\n  | \"🧑🏻‍⚖️\"\n  | \"🧑🏼‍⚖️\"\n  | \"🧑🏽‍⚖️\"\n  | \"🧑🏾‍⚖️\"\n  | \"🧑🏿‍⚖️\"\n  | \"🧑‍⚖️\"\n  | \"🧑‍⚖\"\n  | \"👨🏻‍⚖️\"\n  | \"👨🏼‍⚖️\"\n  | \"👨🏽‍⚖️\"\n  | \"👨🏾‍⚖️\"\n  | \"👨🏿‍⚖️\"\n  | \"👨‍⚖️\"\n  | \"👨‍⚖\"\n  | \"👩🏻‍⚖️\"\n  | \"👩🏼‍⚖️\"\n  | \"👩🏽‍⚖️\"\n  | \"👩🏾‍⚖️\"\n  | \"👩🏿‍⚖️\"\n  | \"👩‍⚖️\"\n  | \"👩‍⚖\"\n  | \"🧑🏻‍🌾\"\n  | \"🧑🏼‍🌾\"\n  | \"🧑🏽‍🌾\"\n  | \"🧑🏾‍🌾\"\n  | \"🧑🏿‍🌾\"\n  | \"🧑‍🌾\"\n  | \"👨🏻‍🌾\"\n  | \"👨🏼‍🌾\"\n  | \"👨🏽‍🌾\"\n  | \"👨🏾‍🌾\"\n  | \"👨🏿‍🌾\"\n  | \"👨‍🌾\"\n  | \"👩🏻‍🌾\"\n  | \"👩🏼‍🌾\"\n  | \"👩🏽‍🌾\"\n  | \"👩🏾‍🌾\"\n  | \"👩🏿‍🌾\"\n  | \"👩‍🌾\"\n  | \"🧑🏻‍🍳\"\n  | \"🧑🏼‍🍳\"\n  | \"🧑🏽‍🍳\"\n  | \"🧑🏾‍🍳\"\n  | \"🧑🏿‍🍳\"\n  | \"🧑‍🍳\"\n  | \"👨🏻‍🍳\"\n  | \"👨🏼‍🍳\"\n  | \"👨🏽‍🍳\"\n  | \"👨🏾‍🍳\"\n  | \"👨🏿‍🍳\"\n  | \"👨‍🍳\"\n  | \"👩🏻‍🍳\"\n  | \"👩🏼‍🍳\"\n  | \"👩🏽‍🍳\"\n  | \"👩🏾‍🍳\"\n  | \"👩🏿‍🍳\"\n  | \"👩‍🍳\"\n  | \"🧑🏻‍🔧\"\n  | \"🧑🏼‍🔧\"\n  | \"🧑🏽‍🔧\"\n  | \"🧑🏾‍🔧\"\n  | \"🧑🏿‍🔧\"\n  | \"🧑‍🔧\"\n  | \"👨🏻‍🔧\"\n  | \"👨🏼‍🔧\"\n  | \"👨🏽‍🔧\"\n  | \"👨🏾‍🔧\"\n  | \"👨🏿‍🔧\"\n  | \"👨‍🔧\"\n  | \"👩🏻‍🔧\"\n  | \"👩🏼‍🔧\"\n  | \"👩🏽‍🔧\"\n  | \"👩🏾‍🔧\"\n  | \"👩🏿‍🔧\"\n  | \"👩‍🔧\"\n  | \"🧑🏻‍🏭\"\n  | \"🧑🏼‍🏭\"\n  | \"🧑🏽‍🏭\"\n  | \"🧑🏾‍🏭\"\n  | \"🧑🏿‍🏭\"\n  | \"🧑‍🏭\"\n  | \"👨🏻‍🏭\"\n  | \"👨🏼‍🏭\"\n  | \"👨🏽‍🏭\"\n  | \"👨🏾‍🏭\"\n  | \"👨🏿‍🏭\"\n  | \"👨‍🏭\"\n  | \"👩🏻‍🏭\"\n  | \"👩🏼‍🏭\"\n  | \"👩🏽‍🏭\"\n  | \"👩🏾‍🏭\"\n  | \"👩🏿‍🏭\"\n  | \"👩‍🏭\"\n  | \"🧑🏻‍💼\"\n  | \"🧑🏼‍💼\"\n  | \"🧑🏽‍💼\"\n  | \"🧑🏾‍💼\"\n  | \"🧑🏿‍💼\"\n  | \"🧑‍💼\"\n  | \"👨🏻‍💼\"\n  | \"👨🏼‍💼\"\n  | \"👨🏽‍💼\"\n  | \"👨🏾‍💼\"\n  | \"👨🏿‍💼\"\n  | \"👨‍💼\"\n  | \"👩🏻‍💼\"\n  | \"👩🏼‍💼\"\n  | \"👩🏽‍💼\"\n  | \"👩🏾‍💼\"\n  | \"👩🏿‍💼\"\n  | \"👩‍💼\"\n  | \"🧑🏻‍🔬\"\n  | \"🧑🏼‍🔬\"\n  | \"🧑🏽‍🔬\"\n  | \"🧑🏾‍🔬\"\n  | \"🧑🏿‍🔬\"\n  | \"🧑‍🔬\"\n  | \"👨🏻‍🔬\"\n  | \"👨🏼‍🔬\"\n  | \"👨🏽‍🔬\"\n  | \"👨🏾‍🔬\"\n  | \"👨🏿‍🔬\"\n  | \"👨‍🔬\"\n  | \"👩🏻‍🔬\"\n  | \"👩🏼‍🔬\"\n  | \"👩🏽‍🔬\"\n  | \"👩🏾‍🔬\"\n  | \"👩🏿‍🔬\"\n  | \"👩‍🔬\"\n  | \"🧑🏻‍💻\"\n  | \"🧑🏼‍💻\"\n  | \"🧑🏽‍💻\"\n  | \"🧑🏾‍💻\"\n  | \"🧑🏿‍💻\"\n  | \"🧑‍💻\"\n  | \"👨🏻‍💻\"\n  | \"👨🏼‍💻\"\n  | \"👨🏽‍💻\"\n  | \"👨🏾‍💻\"\n  | \"👨🏿‍💻\"\n  | \"👨‍💻\"\n  | \"👩🏻‍💻\"\n  | \"👩🏼‍💻\"\n  | \"👩🏽‍💻\"\n  | \"👩🏾‍💻\"\n  | \"👩🏿‍💻\"\n  | \"👩‍💻\"\n  | \"🧑🏻‍🎤\"\n  | \"🧑🏼‍🎤\"\n  | \"🧑🏽‍🎤\"\n  | \"🧑🏾‍🎤\"\n  | \"🧑🏿‍🎤\"\n  | \"🧑‍🎤\"\n  | \"👨🏻‍🎤\"\n  | \"👨🏼‍🎤\"\n  | \"👨🏽‍🎤\"\n  | \"👨🏾‍🎤\"\n  | \"👨🏿‍🎤\"\n  | \"👨‍🎤\"\n  | \"👩🏻‍🎤\"\n  | \"👩🏼‍🎤\"\n  | \"👩🏽‍🎤\"\n  | \"👩🏾‍🎤\"\n  | \"👩🏿‍🎤\"\n  | \"👩‍🎤\"\n  | \"🧑🏻‍🎨\"\n  | \"🧑🏼‍🎨\"\n  | \"🧑🏽‍🎨\"\n  | \"🧑🏾‍🎨\"\n  | \"🧑🏿‍🎨\"\n  | \"🧑‍🎨\"\n  | \"👨🏻‍🎨\"\n  | \"👨🏼‍🎨\"\n  | \"👨🏽‍🎨\"\n  | \"👨🏾‍🎨\"\n  | \"👨🏿‍🎨\"\n  | \"👨‍🎨\"\n  | \"👩🏻‍🎨\"\n  | \"👩🏼‍🎨\"\n  | \"👩🏽‍🎨\"\n  | \"👩🏾‍🎨\"\n  | \"👩🏿‍🎨\"\n  | \"👩‍🎨\"\n  | \"🧑🏻‍✈️\"\n  | \"🧑🏼‍✈️\"\n  | \"🧑🏽‍✈️\"\n  | \"🧑🏾‍✈️\"\n  | \"🧑🏿‍✈️\"\n  | \"🧑‍✈️\"\n  | \"🧑‍✈\"\n  | \"👨🏻‍✈️\"\n  | \"👨🏼‍✈️\"\n  | \"👨🏽‍✈️\"\n  | \"👨🏾‍✈️\"\n  | \"👨🏿‍✈️\"\n  | \"👨‍✈️\"\n  | \"👨‍✈\"\n  | \"👩🏻‍✈️\"\n  | \"👩🏼‍✈️\"\n  | \"👩🏽‍✈️\"\n  | \"👩🏾‍✈️\"\n  | \"👩🏿‍✈️\"\n  | \"👩‍✈️\"\n  | \"👩‍✈\"\n  | \"🧑🏻‍🚀\"\n  | \"🧑🏼‍🚀\"\n  | \"🧑🏽‍🚀\"\n  | \"🧑🏾‍🚀\"\n  | \"🧑🏿‍🚀\"\n  | \"🧑‍🚀\"\n  | \"👨🏻‍🚀\"\n  | \"👨🏼‍🚀\"\n  | \"👨🏽‍🚀\"\n  | \"👨🏾‍🚀\"\n  | \"👨🏿‍🚀\"\n  | \"👨‍🚀\"\n  | \"👩🏻‍🚀\"\n  | \"👩🏼‍🚀\"\n  | \"👩🏽‍🚀\"\n  | \"👩🏾‍🚀\"\n  | \"👩🏿‍🚀\"\n  | \"👩‍🚀\"\n  | \"🧑🏻‍🚒\"\n  | \"🧑🏼‍🚒\"\n  | \"🧑🏽‍🚒\"\n  | \"🧑🏾‍🚒\"\n  | \"🧑🏿‍🚒\"\n  | \"🧑‍🚒\"\n  | \"👨🏻‍🚒\"\n  | \"👨🏼‍🚒\"\n  | \"👨🏽‍🚒\"\n  | \"👨🏾‍🚒\"\n  | \"👨🏿‍🚒\"\n  | \"👨‍🚒\"\n  | \"👩🏻‍🚒\"\n  | \"👩🏼‍🚒\"\n  | \"👩🏽‍🚒\"\n  | \"👩🏾‍🚒\"\n  | \"👩🏿‍🚒\"\n  | \"👩‍🚒\"\n  | \"👮🏻\"\n  | \"👮🏼\"\n  | \"👮🏽\"\n  | \"👮🏾\"\n  | \"👮🏿\"\n  | \"👮\"\n  | \"👮🏻‍♂️\"\n  | \"👮🏼‍♂️\"\n  | \"👮🏽‍♂️\"\n  | \"👮🏾‍♂️\"\n  | \"👮🏿‍♂️\"\n  | \"👮‍♂️\"\n  | \"👮‍♂\"\n  | \"👮🏻‍♀️\"\n  | \"👮🏼‍♀️\"\n  | \"👮🏽‍♀️\"\n  | \"👮🏾‍♀️\"\n  | \"👮🏿‍♀️\"\n  | \"👮‍♀️\"\n  | \"👮‍♀\"\n  | \"🕵🏻\"\n  | \"🕵🏼\"\n  | \"🕵🏽\"\n  | \"🕵🏾\"\n  | \"🕵🏿\"\n  | \"🕵️\"\n  | \"🕵\"\n  | \"🕵🏻‍♂️\"\n  | \"🕵🏼‍♂️\"\n  | \"🕵🏽‍♂️\"\n  | \"🕵🏾‍♂️\"\n  | \"🕵🏿‍♂️\"\n  | \"🕵️‍♂️\"\n  | \"🕵🏻‍♀️\"\n  | \"🕵🏼‍♀️\"\n  | \"🕵🏽‍♀️\"\n  | \"🕵🏾‍♀️\"\n  | \"🕵🏿‍♀️\"\n  | \"🕵️‍♀️\"\n  | \"💂🏻\"\n  | \"💂🏼\"\n  | \"💂🏽\"\n  | \"💂🏾\"\n  | \"💂🏿\"\n  | \"💂\"\n  | \"💂🏻‍♂️\"\n  | \"💂🏼‍♂️\"\n  | \"💂🏽‍♂️\"\n  | \"💂🏾‍♂️\"\n  | \"💂🏿‍♂️\"\n  | \"💂‍♂️\"\n  | \"💂‍♂\"\n  | \"💂🏻‍♀️\"\n  | \"💂🏼‍♀️\"\n  | \"💂🏽‍♀️\"\n  | \"💂🏾‍♀️\"\n  | \"💂🏿‍♀️\"\n  | \"💂‍♀️\"\n  | \"💂‍♀\"\n  | \"🥷🏻\"\n  | \"🥷🏼\"\n  | \"🥷🏽\"\n  | \"🥷🏾\"\n  | \"🥷🏿\"\n  | \"🥷\"\n  | \"👷🏻\"\n  | \"👷🏼\"\n  | \"👷🏽\"\n  | \"👷🏾\"\n  | \"👷🏿\"\n  | \"👷\"\n  | \"👷🏻‍♂️\"\n  | \"👷🏼‍♂️\"\n  | \"👷🏽‍♂️\"\n  | \"👷🏾‍♂️\"\n  | \"👷🏿‍♂️\"\n  | \"👷‍♂️\"\n  | \"👷‍♂\"\n  | \"👷🏻‍♀️\"\n  | \"👷🏼‍♀️\"\n  | \"👷🏽‍♀️\"\n  | \"👷🏾‍♀️\"\n  | \"👷🏿‍♀️\"\n  | \"👷‍♀️\"\n  | \"👷‍♀\"\n  | \"🫅🏻\"\n  | \"🫅🏼\"\n  | \"🫅🏽\"\n  | \"🫅🏾\"\n  | \"🫅🏿\"\n  | \"🫅\"\n  | \"🤴🏻\"\n  | \"🤴🏼\"\n  | \"🤴🏽\"\n  | \"🤴🏾\"\n  | \"🤴🏿\"\n  | \"🤴\"\n  | \"👸🏻\"\n  | \"👸🏼\"\n  | \"👸🏽\"\n  | \"👸🏾\"\n  | \"👸🏿\"\n  | \"👸\"\n  | \"👳🏻\"\n  | \"👳🏼\"\n  | \"👳🏽\"\n  | \"👳🏾\"\n  | \"👳🏿\"\n  | \"👳\"\n  | \"👳🏻‍♂️\"\n  | \"👳🏼‍♂️\"\n  | \"👳🏽‍♂️\"\n  | \"👳🏾‍♂️\"\n  | \"👳🏿‍♂️\"\n  | \"👳‍♂️\"\n  | \"👳‍♂\"\n  | \"👳🏻‍♀️\"\n  | \"👳🏼‍♀️\"\n  | \"👳🏽‍♀️\"\n  | \"👳🏾‍♀️\"\n  | \"👳🏿‍♀️\"\n  | \"👳‍♀️\"\n  | \"👳‍♀\"\n  | \"👲🏻\"\n  | \"👲🏼\"\n  | \"👲🏽\"\n  | \"👲🏾\"\n  | \"👲🏿\"\n  | \"👲\"\n  | \"🧕🏻\"\n  | \"🧕🏼\"\n  | \"🧕🏽\"\n  | \"🧕🏾\"\n  | \"🧕🏿\"\n  | \"🧕\"\n  | \"🤵🏻\"\n  | \"🤵🏼\"\n  | \"🤵🏽\"\n  | \"🤵🏾\"\n  | \"🤵🏿\"\n  | \"🤵\"\n  | \"🤵🏻‍♂️\"\n  | \"🤵🏼‍♂️\"\n  | \"🤵🏽‍♂️\"\n  | \"🤵🏾‍♂️\"\n  | \"🤵🏿‍♂️\"\n  | \"🤵‍♂️\"\n  | \"🤵‍♂\"\n  | \"🤵🏻‍♀️\"\n  | \"🤵🏼‍♀️\"\n  | \"🤵🏽‍♀️\"\n  | \"🤵🏾‍♀️\"\n  | \"🤵🏿‍♀️\"\n  | \"🤵‍♀️\"\n  | \"🤵‍♀\"\n  | \"👰🏻\"\n  | \"👰🏼\"\n  | \"👰🏽\"\n  | \"👰🏾\"\n  | \"👰🏿\"\n  | \"👰\"\n  | \"👰🏻‍♂️\"\n  | \"👰🏼‍♂️\"\n  | \"👰🏽‍♂️\"\n  | \"👰🏾‍♂️\"\n  | \"👰🏿‍♂️\"\n  | \"👰‍♂️\"\n  | \"👰‍♂\"\n  | \"👰🏻‍♀️\"\n  | \"👰🏼‍♀️\"\n  | \"👰🏽‍♀️\"\n  | \"👰🏾‍♀️\"\n  | \"👰🏿‍♀️\"\n  | \"👰‍♀️\"\n  | \"👰‍♀\"\n  | \"🤰🏻\"\n  | \"🤰🏼\"\n  | \"🤰🏽\"\n  | \"🤰🏾\"\n  | \"🤰🏿\"\n  | \"🤰\"\n  | \"🫃🏻\"\n  | \"🫃🏼\"\n  | \"🫃🏽\"\n  | \"🫃🏾\"\n  | \"🫃🏿\"\n  | \"🫃\"\n  | \"🫄🏻\"\n  | \"🫄🏼\"\n  | \"🫄🏽\"\n  | \"🫄🏾\"\n  | \"🫄🏿\"\n  | \"🫄\"\n  | \"🤱🏻\"\n  | \"🤱🏼\"\n  | \"🤱🏽\"\n  | \"🤱🏾\"\n  | \"🤱🏿\"\n  | \"🤱\"\n  | \"👩🏻‍🍼\"\n  | \"👩🏼‍🍼\"\n  | \"👩🏽‍🍼\"\n  | \"👩🏾‍🍼\"\n  | \"👩🏿‍🍼\"\n  | \"👩‍🍼\"\n  | \"👨🏻‍🍼\"\n  | \"👨🏼‍🍼\"\n  | \"👨🏽‍🍼\"\n  | \"👨🏾‍🍼\"\n  | \"👨🏿‍🍼\"\n  | \"👨‍🍼\"\n  | \"🧑🏻‍🍼\"\n  | \"🧑🏼‍🍼\"\n  | \"🧑🏽‍🍼\"\n  | \"🧑🏾‍🍼\"\n  | \"🧑🏿‍🍼\"\n  | \"🧑‍🍼\"\n  | \"👼🏻\"\n  | \"👼🏼\"\n  | \"👼🏽\"\n  | \"👼🏾\"\n  | \"👼🏿\"\n  | \"👼\"\n  | \"🎅🏻\"\n  | \"🎅🏼\"\n  | \"🎅🏽\"\n  | \"🎅🏾\"\n  | \"🎅🏿\"\n  | \"🎅\"\n  | \"🤶🏻\"\n  | \"🤶🏼\"\n  | \"🤶🏽\"\n  | \"🤶🏾\"\n  | \"🤶🏿\"\n  | \"🤶\"\n  | \"🧑🏻‍🎄\"\n  | \"🧑🏼‍🎄\"\n  | \"🧑🏽‍🎄\"\n  | \"🧑🏾‍🎄\"\n  | \"🧑🏿‍🎄\"\n  | \"🧑‍🎄\"\n  | \"🦸🏻\"\n  | \"🦸🏼\"\n  | \"🦸🏽\"\n  | \"🦸🏾\"\n  | \"🦸🏿\"\n  | \"🦸\"\n  | \"🦸🏻‍♂️\"\n  | \"🦸🏼‍♂️\"\n  | \"🦸🏽‍♂️\"\n  | \"🦸🏾‍♂️\"\n  | \"🦸🏿‍♂️\"\n  | \"🦸‍♂️\"\n  | \"🦸‍♂\"\n  | \"🦸🏻‍♀️\"\n  | \"🦸🏼‍♀️\"\n  | \"🦸🏽‍♀️\"\n  | \"🦸🏾‍♀️\"\n  | \"🦸🏿‍♀️\"\n  | \"🦸‍♀️\"\n  | \"🦸‍♀\"\n  | \"🦹🏻\"\n  | \"🦹🏼\"\n  | \"🦹🏽\"\n  | \"🦹🏾\"\n  | \"🦹🏿\"\n  | \"🦹\"\n  | \"🦹🏻‍♂️\"\n  | \"🦹🏼‍♂️\"\n  | \"🦹🏽‍♂️\"\n  | \"🦹🏾‍♂️\"\n  | \"🦹🏿‍♂️\"\n  | \"🦹‍♂️\"\n  | \"🦹‍♂\"\n  | \"🦹🏻‍♀️\"\n  | \"🦹🏼‍♀️\"\n  | \"🦹🏽‍♀️\"\n  | \"🦹🏾‍♀️\"\n  | \"🦹🏿‍♀️\"\n  | \"🦹‍♀️\"\n  | \"🦹‍♀\"\n  | \"🧙🏻\"\n  | \"🧙🏼\"\n  | \"🧙🏽\"\n  | \"🧙🏾\"\n  | \"🧙🏿\"\n  | \"🧙\"\n  | \"🧙🏻‍♂️\"\n  | \"🧙🏼‍♂️\"\n  | \"🧙🏽‍♂️\"\n  | \"🧙🏾‍♂️\"\n  | \"🧙🏿‍♂️\"\n  | \"🧙‍♂️\"\n  | \"🧙‍♂\"\n  | \"🧙🏻‍♀️\"\n  | \"🧙🏼‍♀️\"\n  | \"🧙🏽‍♀️\"\n  | \"🧙🏾‍♀️\"\n  | \"🧙🏿‍♀️\"\n  | \"🧙‍♀️\"\n  | \"🧙‍♀\"\n  | \"🧚🏻\"\n  | \"🧚🏼\"\n  | \"🧚🏽\"\n  | \"🧚🏾\"\n  | \"🧚🏿\"\n  | \"🧚\"\n  | \"🧚🏻‍♂️\"\n  | \"🧚🏼‍♂️\"\n  | \"🧚🏽‍♂️\"\n  | \"🧚🏾‍♂️\"\n  | \"🧚🏿‍♂️\"\n  | \"🧚‍♂️\"\n  | \"🧚‍♂\"\n  | \"🧚🏻‍♀️\"\n  | \"🧚🏼‍♀️\"\n  | \"🧚🏽‍♀️\"\n  | \"🧚🏾‍♀️\"\n  | \"🧚🏿‍♀️\"\n  | \"🧚‍♀️\"\n  | \"🧚‍♀\"\n  | \"🧛🏻\"\n  | \"🧛🏼\"\n  | \"🧛🏽\"\n  | \"🧛🏾\"\n  | \"🧛🏿\"\n  | \"🧛\"\n  | \"🧛🏻‍♂️\"\n  | \"🧛🏼‍♂️\"\n  | \"🧛🏽‍♂️\"\n  | \"🧛🏾‍♂️\"\n  | \"🧛🏿‍♂️\"\n  | \"🧛‍♂️\"\n  | \"🧛‍♂\"\n  | \"🧛🏻‍♀️\"\n  | \"🧛🏼‍♀️\"\n  | \"🧛🏽‍♀️\"\n  | \"🧛🏾‍♀️\"\n  | \"🧛🏿‍♀️\"\n  | \"🧛‍♀️\"\n  | \"🧛‍♀\"\n  | \"🧜🏻\"\n  | \"🧜🏼\"\n  | \"🧜🏽\"\n  | \"🧜🏾\"\n  | \"🧜🏿\"\n  | \"🧜\"\n  | \"🧜🏻‍♂️\"\n  | \"🧜🏼‍♂️\"\n  | \"🧜🏽‍♂️\"\n  | \"🧜🏾‍♂️\"\n  | \"🧜🏿‍♂️\"\n  | \"🧜‍♂️\"\n  | \"🧜‍♂\"\n  | \"🧜🏻‍♀️\"\n  | \"🧜🏼‍♀️\"\n  | \"🧜🏽‍♀️\"\n  | \"🧜🏾‍♀️\"\n  | \"🧜🏿‍♀️\"\n  | \"🧜‍♀️\"\n  | \"🧜‍♀\"\n  | \"🧝🏻\"\n  | \"🧝🏼\"\n  | \"🧝🏽\"\n  | \"🧝🏾\"\n  | \"🧝🏿\"\n  | \"🧝\"\n  | \"🧝🏻‍♂️\"\n  | \"🧝🏼‍♂️\"\n  | \"🧝🏽‍♂️\"\n  | \"🧝🏾‍♂️\"\n  | \"🧝🏿‍♂️\"\n  | \"🧝‍♂️\"\n  | \"🧝‍♂\"\n  | \"🧝🏻‍♀️\"\n  | \"🧝🏼‍♀️\"\n  | \"🧝🏽‍♀️\"\n  | \"🧝🏾‍♀️\"\n  | \"🧝🏿‍♀️\"\n  | \"🧝‍♀️\"\n  | \"🧝‍♀\"\n  | \"🧞\"\n  | \"🧞‍♂️\"\n  | \"🧞‍♂\"\n  | \"🧞‍♀️\"\n  | \"🧞‍♀\"\n  | \"🧟\"\n  | \"🧟‍♂️\"\n  | \"🧟‍♂\"\n  | \"🧟‍♀️\"\n  | \"🧟‍♀\"\n  | \"🧌\"\n  | \"💆🏻\"\n  | \"💆🏼\"\n  | \"💆🏽\"\n  | \"💆🏾\"\n  | \"💆🏿\"\n  | \"💆\"\n  | \"💆🏻‍♂️\"\n  | \"💆🏼‍♂️\"\n  | \"💆🏽‍♂️\"\n  | \"💆🏾‍♂️\"\n  | \"💆🏿‍♂️\"\n  | \"💆‍♂️\"\n  | \"💆‍♂\"\n  | \"💆🏻‍♀️\"\n  | \"💆🏼‍♀️\"\n  | \"💆🏽‍♀️\"\n  | \"💆🏾‍♀️\"\n  | \"💆🏿‍♀️\"\n  | \"💆‍♀️\"\n  | \"💆‍♀\"\n  | \"💇🏻\"\n  | \"💇🏼\"\n  | \"💇🏽\"\n  | \"💇🏾\"\n  | \"💇🏿\"\n  | \"💇\"\n  | \"💇🏻‍♂️\"\n  | \"💇🏼‍♂️\"\n  | \"💇🏽‍♂️\"\n  | \"💇🏾‍♂️\"\n  | \"💇🏿‍♂️\"\n  | \"💇‍♂️\"\n  | \"💇‍♂\"\n  | \"💇🏻‍♀️\"\n  | \"💇🏼‍♀️\"\n  | \"💇🏽‍♀️\"\n  | \"💇🏾‍♀️\"\n  | \"💇🏿‍♀️\"\n  | \"💇‍♀️\"\n  | \"💇‍♀\"\n  | \"🚶🏻\"\n  | \"🚶🏼\"\n  | \"🚶🏽\"\n  | \"🚶🏾\"\n  | \"🚶🏿\"\n  | \"🚶\"\n  | \"🚶🏻‍♂️\"\n  | \"🚶🏼‍♂️\"\n  | \"🚶🏽‍♂️\"\n  | \"🚶🏾‍♂️\"\n  | \"🚶🏿‍♂️\"\n  | \"🚶‍♂️\"\n  | \"🚶‍♂\"\n  | \"🚶🏻‍♀️\"\n  | \"🚶🏼‍♀️\"\n  | \"🚶🏽‍♀️\"\n  | \"🚶🏾‍♀️\"\n  | \"🚶🏿‍♀️\"\n  | \"🚶‍♀️\"\n  | \"🚶‍♀\"\n  | \"🧍🏻\"\n  | \"🧍🏼\"\n  | \"🧍🏽\"\n  | \"🧍🏾\"\n  | \"🧍🏿\"\n  | \"🧍\"\n  | \"🧍🏻‍♂️\"\n  | \"🧍🏼‍♂️\"\n  | \"🧍🏽‍♂️\"\n  | \"🧍🏾‍♂️\"\n  | \"🧍🏿‍♂️\"\n  | \"🧍‍♂️\"\n  | \"🧍‍♂\"\n  | \"🧍🏻‍♀️\"\n  | \"🧍🏼‍♀️\"\n  | \"🧍🏽‍♀️\"\n  | \"🧍🏾‍♀️\"\n  | \"🧍🏿‍♀️\"\n  | \"🧍‍♀️\"\n  | \"🧍‍♀\"\n  | \"🧎🏻\"\n  | \"🧎🏼\"\n  | \"🧎🏽\"\n  | \"🧎🏾\"\n  | \"🧎🏿\"\n  | \"🧎\"\n  | \"🧎🏻‍♂️\"\n  | \"🧎🏼‍♂️\"\n  | \"🧎🏽‍♂️\"\n  | \"🧎🏾‍♂️\"\n  | \"🧎🏿‍♂️\"\n  | \"🧎‍♂️\"\n  | \"🧎‍♂\"\n  | \"🧎🏻‍♀️\"\n  | \"🧎🏼‍♀️\"\n  | \"🧎🏽‍♀️\"\n  | \"🧎🏾‍♀️\"\n  | \"🧎🏿‍♀️\"\n  | \"🧎‍♀️\"\n  | \"🧎‍♀\"\n  | \"🧑🏻‍🦯\"\n  | \"🧑🏼‍🦯\"\n  | \"🧑🏽‍🦯\"\n  | \"🧑🏾‍🦯\"\n  | \"🧑🏿‍🦯\"\n  | \"🧑‍🦯\"\n  | \"👨🏻‍🦯\"\n  | \"👨🏼‍🦯\"\n  | \"👨🏽‍🦯\"\n  | \"👨🏾‍🦯\"\n  | \"👨🏿‍🦯\"\n  | \"👨‍🦯\"\n  | \"👩🏻‍🦯\"\n  | \"👩🏼‍🦯\"\n  | \"👩🏽‍🦯\"\n  | \"👩🏾‍🦯\"\n  | \"👩🏿‍🦯\"\n  | \"👩‍🦯\"\n  | \"🧑🏻‍🦼\"\n  | \"🧑🏼‍🦼\"\n  | \"🧑🏽‍🦼\"\n  | \"🧑🏾‍🦼\"\n  | \"🧑🏿‍🦼\"\n  | \"🧑‍🦼\"\n  | \"👨🏻‍🦼\"\n  | \"👨🏼‍🦼\"\n  | \"👨🏽‍🦼\"\n  | \"👨🏾‍🦼\"\n  | \"👨🏿‍🦼\"\n  | \"👨‍🦼\"\n  | \"👩🏻‍🦼\"\n  | \"👩🏼‍🦼\"\n  | \"👩🏽‍🦼\"\n  | \"👩🏾‍🦼\"\n  | \"👩🏿‍🦼\"\n  | \"👩‍🦼\"\n  | \"🧑🏻‍🦽\"\n  | \"🧑🏼‍🦽\"\n  | \"🧑🏽‍🦽\"\n  | \"🧑🏾‍🦽\"\n  | \"🧑🏿‍🦽\"\n  | \"🧑‍🦽\"\n  | \"👨🏻‍🦽\"\n  | \"👨🏼‍🦽\"\n  | \"👨🏽‍🦽\"\n  | \"👨🏾‍🦽\"\n  | \"👨🏿‍🦽\"\n  | \"👨‍🦽\"\n  | \"👩🏻‍🦽\"\n  | \"👩🏼‍🦽\"\n  | \"👩🏽‍🦽\"\n  | \"👩🏾‍🦽\"\n  | \"👩🏿‍🦽\"\n  | \"👩‍🦽\"\n  | \"🏃🏻\"\n  | \"🏃🏼\"\n  | \"🏃🏽\"\n  | \"🏃🏾\"\n  | \"🏃🏿\"\n  | \"🏃\"\n  | \"🏃🏻‍♂️\"\n  | \"🏃🏼‍♂️\"\n  | \"🏃🏽‍♂️\"\n  | \"🏃🏾‍♂️\"\n  | \"🏃🏿‍♂️\"\n  | \"🏃‍♂️\"\n  | \"🏃‍♂\"\n  | \"🏃🏻‍♀️\"\n  | \"🏃🏼‍♀️\"\n  | \"🏃🏽‍♀️\"\n  | \"🏃🏾‍♀️\"\n  | \"🏃🏿‍♀️\"\n  | \"🏃‍♀️\"\n  | \"🏃‍♀\"\n  | \"💃🏻\"\n  | \"💃🏼\"\n  | \"💃🏽\"\n  | \"💃🏾\"\n  | \"💃🏿\"\n  | \"💃\"\n  | \"🕺🏻\"\n  | \"🕺🏼\"\n  | \"🕺🏽\"\n  | \"🕺🏾\"\n  | \"🕺🏿\"\n  | \"🕺\"\n  | \"🕴🏻\"\n  | \"🕴🏼\"\n  | \"🕴🏽\"\n  | \"🕴🏾\"\n  | \"🕴🏿\"\n  | \"🕴️\"\n  | \"🕴\"\n  | \"👯\"\n  | \"👯‍♂️\"\n  | \"👯‍♂\"\n  | \"👯‍♀️\"\n  | \"👯‍♀\"\n  | \"🧖🏻\"\n  | \"🧖🏼\"\n  | \"🧖🏽\"\n  | \"🧖🏾\"\n  | \"🧖🏿\"\n  | \"🧖\"\n  | \"🧖🏻‍♂️\"\n  | \"🧖🏼‍♂️\"\n  | \"🧖🏽‍♂️\"\n  | \"🧖🏾‍♂️\"\n  | \"🧖🏿‍♂️\"\n  | \"🧖‍♂️\"\n  | \"🧖‍♂\"\n  | \"🧖🏻‍♀️\"\n  | \"🧖🏼‍♀️\"\n  | \"🧖🏽‍♀️\"\n  | \"🧖🏾‍♀️\"\n  | \"🧖🏿‍♀️\"\n  | \"🧖‍♀️\"\n  | \"🧖‍♀\"\n  | \"🧗🏻\"\n  | \"🧗🏼\"\n  | \"🧗🏽\"\n  | \"🧗🏾\"\n  | \"🧗🏿\"\n  | \"🧗\"\n  | \"🧗🏻‍♂️\"\n  | \"🧗🏼‍♂️\"\n  | \"🧗🏽‍♂️\"\n  | \"🧗🏾‍♂️\"\n  | \"🧗🏿‍♂️\"\n  | \"🧗‍♂️\"\n  | \"🧗‍♂\"\n  | \"🧗🏻‍♀️\"\n  | \"🧗🏼‍♀️\"\n  | \"🧗🏽‍♀️\"\n  | \"🧗🏾‍♀️\"\n  | \"🧗🏿‍♀️\"\n  | \"🧗‍♀️\"\n  | \"🧗‍♀\"\n  | \"🤺\"\n  | \"🏇🏻\"\n  | \"🏇🏼\"\n  | \"🏇🏽\"\n  | \"🏇🏾\"\n  | \"🏇🏿\"\n  | \"🏇\"\n  | \"⛷️\"\n  | \"⛷\"\n  | \"🏂🏻\"\n  | \"🏂🏼\"\n  | \"🏂🏽\"\n  | \"🏂🏾\"\n  | \"🏂🏿\"\n  | \"🏂\"\n  | \"🏌🏻\"\n  | \"🏌🏼\"\n  | \"🏌🏽\"\n  | \"🏌🏾\"\n  | \"🏌🏿\"\n  | \"🏌️\"\n  | \"🏌\"\n  | \"🏌🏻‍♂️\"\n  | \"🏌🏼‍♂️\"\n  | \"🏌🏽‍♂️\"\n  | \"🏌🏾‍♂️\"\n  | \"🏌🏿‍♂️\"\n  | \"🏌️‍♂️\"\n  | \"🏌🏻‍♀️\"\n  | \"🏌🏼‍♀️\"\n  | \"🏌🏽‍♀️\"\n  | \"🏌🏾‍♀️\"\n  | \"🏌🏿‍♀️\"\n  | \"🏌️‍♀️\"\n  | \"🏄🏻\"\n  | \"🏄🏼\"\n  | \"🏄🏽\"\n  | \"🏄🏾\"\n  | \"🏄🏿\"\n  | \"🏄\"\n  | \"🏄🏻‍♂️\"\n  | \"🏄🏼‍♂️\"\n  | \"🏄🏽‍♂️\"\n  | \"🏄🏾‍♂️\"\n  | \"🏄🏿‍♂️\"\n  | \"🏄‍♂️\"\n  | \"🏄‍♂\"\n  | \"🏄🏻‍♀️\"\n  | \"🏄🏼‍♀️\"\n  | \"🏄🏽‍♀️\"\n  | \"🏄🏾‍♀️\"\n  | \"🏄🏿‍♀️\"\n  | \"🏄‍♀️\"\n  | \"🏄‍♀\"\n  | \"🚣🏻\"\n  | \"🚣🏼\"\n  | \"🚣🏽\"\n  | \"🚣🏾\"\n  | \"🚣🏿\"\n  | \"🚣\"\n  | \"🚣🏻‍♂️\"\n  | \"🚣🏼‍♂️\"\n  | \"🚣🏽‍♂️\"\n  | \"🚣🏾‍♂️\"\n  | \"🚣🏿‍♂️\"\n  | \"🚣‍♂️\"\n  | \"🚣‍♂\"\n  | \"🚣🏻‍♀️\"\n  | \"🚣🏼‍♀️\"\n  | \"🚣🏽‍♀️\"\n  | \"🚣🏾‍♀️\"\n  | \"🚣🏿‍♀️\"\n  | \"🚣‍♀️\"\n  | \"🚣‍♀\"\n  | \"🏊🏻\"\n  | \"🏊🏼\"\n  | \"🏊🏽\"\n  | \"🏊🏾\"\n  | \"🏊🏿\"\n  | \"🏊\"\n  | \"🏊🏻‍♂️\"\n  | \"🏊🏼‍♂️\"\n  | \"🏊🏽‍♂️\"\n  | \"🏊🏾‍♂️\"\n  | \"🏊🏿‍♂️\"\n  | \"🏊‍♂️\"\n  | \"🏊‍♂\"\n  | \"🏊🏻‍♀️\"\n  | \"🏊🏼‍♀️\"\n  | \"🏊🏽‍♀️\"\n  | \"🏊🏾‍♀️\"\n  | \"🏊🏿‍♀️\"\n  | \"🏊‍♀️\"\n  | \"🏊‍♀\"\n  | \"⛹🏻\"\n  | \"⛹🏼\"\n  | \"⛹🏽\"\n  | \"⛹🏾\"\n  | \"⛹🏿\"\n  | \"⛹️\"\n  | \"⛹\"\n  | \"⛹🏻‍♂️\"\n  | \"⛹🏼‍♂️\"\n  | \"⛹🏽‍♂️\"\n  | \"⛹🏾‍♂️\"\n  | \"⛹🏿‍♂️\"\n  | \"⛹️‍♂️\"\n  | \"⛹🏻‍♀️\"\n  | \"⛹🏼‍♀️\"\n  | \"⛹🏽‍♀️\"\n  | \"⛹🏾‍♀️\"\n  | \"⛹🏿‍♀️\"\n  | \"⛹️‍♀️\"\n  | \"🏋🏻\"\n  | \"🏋🏼\"\n  | \"🏋🏽\"\n  | \"🏋🏾\"\n  | \"🏋🏿\"\n  | \"🏋️\"\n  | \"🏋\"\n  | \"🏋🏻‍♂️\"\n  | \"🏋🏼‍♂️\"\n  | \"🏋🏽‍♂️\"\n  | \"🏋🏾‍♂️\"\n  | \"🏋🏿‍♂️\"\n  | \"🏋️‍♂️\"\n  | \"🏋🏻‍♀️\"\n  | \"🏋🏼‍♀️\"\n  | \"🏋🏽‍♀️\"\n  | \"🏋🏾‍♀️\"\n  | \"🏋🏿‍♀️\"\n  | \"🏋️‍♀️\"\n  | \"🚴🏻\"\n  | \"🚴🏼\"\n  | \"🚴🏽\"\n  | \"🚴🏾\"\n  | \"🚴🏿\"\n  | \"🚴\"\n  | \"🚴🏻‍♂️\"\n  | \"🚴🏼‍♂️\"\n  | \"🚴🏽‍♂️\"\n  | \"🚴🏾‍♂️\"\n  | \"🚴🏿‍♂️\"\n  | \"🚴‍♂️\"\n  | \"🚴‍♂\"\n  | \"🚴🏻‍♀️\"\n  | \"🚴🏼‍♀️\"\n  | \"🚴🏽‍♀️\"\n  | \"🚴🏾‍♀️\"\n  | \"🚴🏿‍♀️\"\n  | \"🚴‍♀️\"\n  | \"🚴‍♀\"\n  | \"🚵🏻\"\n  | \"🚵🏼\"\n  | \"🚵🏽\"\n  | \"🚵🏾\"\n  | \"🚵🏿\"\n  | \"🚵\"\n  | \"🚵🏻‍♂️\"\n  | \"🚵🏼‍♂️\"\n  | \"🚵🏽‍♂️\"\n  | \"🚵🏾‍♂️\"\n  | \"🚵🏿‍♂️\"\n  | \"🚵‍♂️\"\n  | \"🚵‍♂\"\n  | \"🚵🏻‍♀️\"\n  | \"🚵🏼‍♀️\"\n  | \"🚵🏽‍♀️\"\n  | \"🚵🏾‍♀️\"\n  | \"🚵🏿‍♀️\"\n  | \"🚵‍♀️\"\n  | \"🚵‍♀\"\n  | \"🤸🏻\"\n  | \"🤸🏼\"\n  | \"🤸🏽\"\n  | \"🤸🏾\"\n  | \"🤸🏿\"\n  | \"🤸\"\n  | \"🤸🏻‍♂️\"\n  | \"🤸🏼‍♂️\"\n  | \"🤸🏽‍♂️\"\n  | \"🤸🏾‍♂️\"\n  | \"🤸🏿‍♂️\"\n  | \"🤸‍♂️\"\n  | \"🤸‍♂\"\n  | \"🤸🏻‍♀️\"\n  | \"🤸🏼‍♀️\"\n  | \"🤸🏽‍♀️\"\n  | \"🤸🏾‍♀️\"\n  | \"🤸🏿‍♀️\"\n  | \"🤸‍♀️\"\n  | \"🤸‍♀\"\n  | \"🤼\"\n  | \"🤼‍♂️\"\n  | \"🤼‍♂\"\n  | \"🤼‍♀️\"\n  | \"🤼‍♀\"\n  | \"🤽🏻\"\n  | \"🤽🏼\"\n  | \"🤽🏽\"\n  | \"🤽🏾\"\n  | \"🤽🏿\"\n  | \"🤽\"\n  | \"🤽🏻‍♂️\"\n  | \"🤽🏼‍♂️\"\n  | \"🤽🏽‍♂️\"\n  | \"🤽🏾‍♂️\"\n  | \"🤽🏿‍♂️\"\n  | \"🤽‍♂️\"\n  | \"🤽‍♂\"\n  | \"🤽🏻‍♀️\"\n  | \"🤽🏼‍♀️\"\n  | \"🤽🏽‍♀️\"\n  | \"🤽🏾‍♀️\"\n  | \"🤽🏿‍♀️\"\n  | \"🤽‍♀️\"\n  | \"🤽‍♀\"\n  | \"🤾🏻\"\n  | \"🤾🏼\"\n  | \"🤾🏽\"\n  | \"🤾🏾\"\n  | \"🤾🏿\"\n  | \"🤾\"\n  | \"🤾🏻‍♂️\"\n  | \"🤾🏼‍♂️\"\n  | \"🤾🏽‍♂️\"\n  | \"🤾🏾‍♂️\"\n  | \"🤾🏿‍♂️\"\n  | \"🤾‍♂️\"\n  | \"🤾‍♂\"\n  | \"🤾🏻‍♀️\"\n  | \"🤾🏼‍♀️\"\n  | \"🤾🏽‍♀️\"\n  | \"🤾🏾‍♀️\"\n  | \"🤾🏿‍♀️\"\n  | \"🤾‍♀️\"\n  | \"🤾‍♀\"\n  | \"🤹🏻\"\n  | \"🤹🏼\"\n  | \"🤹🏽\"\n  | \"🤹🏾\"\n  | \"🤹🏿\"\n  | \"🤹\"\n  | \"🤹🏻‍♂️\"\n  | \"🤹🏼‍♂️\"\n  | \"🤹🏽‍♂️\"\n  | \"🤹🏾‍♂️\"\n  | \"🤹🏿‍♂️\"\n  | \"🤹‍♂️\"\n  | \"🤹‍♂\"\n  | \"🤹🏻‍♀️\"\n  | \"🤹🏼‍♀️\"\n  | \"🤹🏽‍♀️\"\n  | \"🤹🏾‍♀️\"\n  | \"🤹🏿‍♀️\"\n  | \"🤹‍♀️\"\n  | \"🤹‍♀\"\n  | \"🧘🏻\"\n  | \"🧘🏼\"\n  | \"🧘🏽\"\n  | \"🧘🏾\"\n  | \"🧘🏿\"\n  | \"🧘\"\n  | \"🧘🏻‍♂️\"\n  | \"🧘🏼‍♂️\"\n  | \"🧘🏽‍♂️\"\n  | \"🧘🏾‍♂️\"\n  | \"🧘🏿‍♂️\"\n  | \"🧘‍♂️\"\n  | \"🧘‍♂\"\n  | \"🧘🏻‍♀️\"\n  | \"🧘🏼‍♀️\"\n  | \"🧘🏽‍♀️\"\n  | \"🧘🏾‍♀️\"\n  | \"🧘🏿‍♀️\"\n  | \"🧘‍♀️\"\n  | \"🧘‍♀\"\n  | \"🛀🏻\"\n  | \"🛀🏼\"\n  | \"🛀🏽\"\n  | \"🛀🏾\"\n  | \"🛀🏿\"\n  | \"🛀\"\n  | \"🛌🏻\"\n  | \"🛌🏼\"\n  | \"🛌🏽\"\n  | \"🛌🏾\"\n  | \"🛌🏿\"\n  | \"🛌\"\n  | \"🧑🏻‍🤝‍🧑🏻\"\n  | \"🧑🏻‍🤝‍🧑🏼\"\n  | \"🧑🏻‍🤝‍🧑🏽\"\n  | \"🧑🏻‍🤝‍🧑🏾\"\n  | \"🧑🏻‍🤝‍🧑🏿\"\n  | \"🧑🏼‍🤝‍🧑🏻\"\n  | \"🧑🏼‍🤝‍🧑🏼\"\n  | \"🧑🏼‍🤝‍🧑🏽\"\n  | \"🧑🏼‍🤝‍🧑🏾\"\n  | \"🧑🏼‍🤝‍🧑🏿\"\n  | \"🧑🏽‍🤝‍🧑🏻\"\n  | \"🧑🏽‍🤝‍🧑🏼\"\n  | \"🧑🏽‍🤝‍🧑🏽\"\n  | \"🧑🏽‍🤝‍🧑🏾\"\n  | \"🧑🏽‍🤝‍🧑🏿\"\n  | \"🧑🏾‍🤝‍🧑🏻\"\n  | \"🧑🏾‍🤝‍🧑🏼\"\n  | \"🧑🏾‍🤝‍🧑🏽\"\n  | \"🧑🏾‍🤝‍🧑🏾\"\n  | \"🧑🏾‍🤝‍🧑🏿\"\n  | \"🧑🏿‍🤝‍🧑🏻\"\n  | \"🧑🏿‍🤝‍🧑🏼\"\n  | \"🧑🏿‍🤝‍🧑🏽\"\n  | \"🧑🏿‍🤝‍🧑🏾\"\n  | \"🧑🏿‍🤝‍🧑🏿\"\n  | \"🧑‍🤝‍🧑\"\n  | \"👭\"\n  | \"👫\"\n  | \"👬\"\n  | \"💏\"\n  | \"💑\"\n  | \"👪\"\n  | \"👨‍👩‍👦\"\n  | \"👨‍👩‍👧\"\n  | \"👨‍👩‍👧‍👦\"\n  | \"👨‍👩‍👦‍👦\"\n  | \"👨‍👩‍👧‍👧\"\n  | \"👨‍👨‍👦\"\n  | \"👨‍👨‍👧\"\n  | \"👨‍👨‍👧‍👦\"\n  | \"👨‍👨‍👦‍👦\"\n  | \"👨‍👨‍👧‍👧\"\n  | \"👩‍👩‍👦\"\n  | \"👩‍👩‍👧\"\n  | \"👩‍👩‍👧‍👦\"\n  | \"👩‍👩‍👦‍👦\"\n  | \"👩‍👩‍👧‍👧\"\n  | \"👨‍👦\"\n  | \"👨‍👦‍👦\"\n  | \"👨‍👧\"\n  | \"👨‍👧‍👦\"\n  | \"👨‍👧‍👧\"\n  | \"👩‍👦\"\n  | \"👩‍👦‍👦\"\n  | \"👩‍👧\"\n  | \"👩‍👧‍👦\"\n  | \"👩‍👧‍👧\"\n  | \"🗣️\"\n  | \"🗣\"\n  | \"👤\"\n  | \"👥\"\n  | \"🫂\"\n  | \"👣\"\n  | \"🐵\"\n  | \"🐒\"\n  | \"🦍\"\n  | \"🦧\"\n  | \"🐶\"\n  | \"🐕\"\n  | \"🦮\"\n  | \"🐕‍🦺\"\n  | \"🐩\"\n  | \"🐺\"\n  | \"🦊\"\n  | \"🦝\"\n  | \"🐱\"\n  | \"🐈\"\n  | \"🐈‍⬛\"\n  | \"🦁\"\n  | \"🐯\"\n  | \"🐅\"\n  | \"🐆\"\n  | \"🐴\"\n  | \"🐎\"\n  | \"🦄\"\n  | \"🦓\"\n  | \"🦌\"\n  | \"🦬\"\n  | \"🐮\"\n  | \"🐂\"\n  | \"🐃\"\n  | \"🐄\"\n  | \"🐷\"\n  | \"🐖\"\n  | \"🐗\"\n  | \"🐽\"\n  | \"🐏\"\n  | \"🐑\"\n  | \"🐐\"\n  | \"🐪\"\n  | \"🐫\"\n  | \"🦙\"\n  | \"🦒\"\n  | \"🐘\"\n  | \"🦣\"\n  | \"🦏\"\n  | \"🦛\"\n  | \"🐭\"\n  | \"🐁\"\n  | \"🐀\"\n  | \"🐹\"\n  | \"🐰\"\n  | \"🐇\"\n  | \"🐿️\"\n  | \"🐿\"\n  | \"🦫\"\n  | \"🦔\"\n  | \"🦇\"\n  | \"🐻\"\n  | \"🐻‍❄️\"\n  | \"🐻‍❄\"\n  | \"🐨\"\n  | \"🐼\"\n  | \"🦥\"\n  | \"🦦\"\n  | \"🦨\"\n  | \"🦘\"\n  | \"🦡\"\n  | \"🐾\"\n  | \"🦃\"\n  | \"🐔\"\n  | \"🐓\"\n  | \"🐣\"\n  | \"🐤\"\n  | \"🐥\"\n  | \"🐦\"\n  | \"🐧\"\n  | \"🕊️\"\n  | \"🕊\"\n  | \"🦅\"\n  | \"🦆\"\n  | \"🦢\"\n  | \"🦉\"\n  | \"🦤\"\n  | \"🪶\"\n  | \"🦩\"\n  | \"🦚\"\n  | \"🦜\"\n  | \"🐸\"\n  | \"🐊\"\n  | \"🐢\"\n  | \"🦎\"\n  | \"🐍\"\n  | \"🐲\"\n  | \"🐉\"\n  | \"🦕\"\n  | \"🦖\"\n  | \"🐳\"\n  | \"🐋\"\n  | \"🐬\"\n  | \"🦭\"\n  | \"🐟\"\n  | \"🐠\"\n  | \"🐡\"\n  | \"🦈\"\n  | \"🐙\"\n  | \"🐚\"\n  | \"🪸\"\n  | \"🐌\"\n  | \"🦋\"\n  | \"🐛\"\n  | \"🐜\"\n  | \"🐝\"\n  | \"🪲\"\n  | \"🐞\"\n  | \"🦗\"\n  | \"🪳\"\n  | \"🕷️\"\n  | \"🕷\"\n  | \"🕸️\"\n  | \"🕸\"\n  | \"🦂\"\n  | \"🦟\"\n  | \"🪰\"\n  | \"🪱\"\n  | \"🦠\"\n  | \"💐\"\n  | \"🌸\"\n  | \"💮\"\n  | \"🪷\"\n  | \"🏵️\"\n  | \"🏵\"\n  | \"🌹\"\n  | \"🥀\"\n  | \"🌺\"\n  | \"🌻\"\n  | \"🌼\"\n  | \"🌷\"\n  | \"🌱\"\n  | \"🪴\"\n  | \"🌲\"\n  | \"🌳\"\n  | \"🌴\"\n  | \"🌵\"\n  | \"🌾\"\n  | \"🌿\"\n  | \"☘️\"\n  | \"☘\"\n  | \"🍀\"\n  | \"🍁\"\n  | \"🍂\"\n  | \"🍃\"\n  | \"🪹\"\n  | \"🪺\"\n  | \"🍇\"\n  | \"🍈\"\n  | \"🍉\"\n  | \"🍊\"\n  | \"🍋\"\n  | \"🍌\"\n  | \"🍍\"\n  | \"🥭\"\n  | \"🍎\"\n  | \"🍏\"\n  | \"🍐\"\n  | \"🍑\"\n  | \"🍒\"\n  | \"🍓\"\n  | \"🫐\"\n  | \"🥝\"\n  | \"🍅\"\n  | \"🫒\"\n  | \"🥥\"\n  | \"🥑\"\n  | \"🍆\"\n  | \"🥔\"\n  | \"🥕\"\n  | \"🌽\"\n  | \"🌶️\"\n  | \"🌶\"\n  | \"🫑\"\n  | \"🥒\"\n  | \"🥬\"\n  | \"🥦\"\n  | \"🧄\"\n  | \"🧅\"\n  | \"🍄\"\n  | \"🥜\"\n  | \"🫘\"\n  | \"🌰\"\n  | \"🍞\"\n  | \"🥐\"\n  | \"🥖\"\n  | \"🫓\"\n  | \"🥨\"\n  | \"🥯\"\n  | \"🥞\"\n  | \"🧇\"\n  | \"🧀\"\n  | \"🍖\"\n  | \"🍗\"\n  | \"🥩\"\n  | \"🥓\"\n  | \"🍔\"\n  | \"🍟\"\n  | \"🍕\"\n  | \"🌭\"\n  | \"🥪\"\n  | \"🌮\"\n  | \"🌯\"\n  | \"🫔\"\n  | \"🥙\"\n  | \"🧆\"\n  | \"🥚\"\n  | \"🍳\"\n  | \"🥘\"\n  | \"🍲\"\n  | \"🫕\"\n  | \"🥣\"\n  | \"🥗\"\n  | \"🍿\"\n  | \"🧈\"\n  | \"🧂\"\n  | \"🥫\"\n  | \"🍱\"\n  | \"🍘\"\n  | \"🍙\"\n  | \"🍚\"\n  | \"🍛\"\n  | \"🍜\"\n  | \"🍝\"\n  | \"🍠\"\n  | \"🍢\"\n  | \"🍣\"\n  | \"🍤\"\n  | \"🍥\"\n  | \"🥮\"\n  | \"🍡\"\n  | \"🥟\"\n  | \"🥠\"\n  | \"🥡\"\n  | \"🦀\"\n  | \"🦞\"\n  | \"🦐\"\n  | \"🦑\"\n  | \"🦪\"\n  | \"🍦\"\n  | \"🍧\"\n  | \"🍨\"\n  | \"🍩\"\n  | \"🍪\"\n  | \"🎂\"\n  | \"🍰\"\n  | \"🧁\"\n  | \"🥧\"\n  | \"🍫\"\n  | \"🍬\"\n  | \"🍭\"\n  | \"🍮\"\n  | \"🍯\"\n  | \"🍼\"\n  | \"🥛\"\n  | \"☕\"\n  | \"🫖\"\n  | \"🍵\"\n  | \"🍶\"\n  | \"🍾\"\n  | \"🍷\"\n  | \"🍸\"\n  | \"🍹\"\n  | \"🍺\"\n  | \"🍻\"\n  | \"🥂\"\n  | \"🥃\"\n  | \"🫗\"\n  | \"🥤\"\n  | \"🧋\"\n  | \"🧃\"\n  | \"🧉\"\n  | \"🧊\"\n  | \"🥢\"\n  | \"🍽️\"\n  | \"🍽\"\n  | \"🍴\"\n  | \"🥄\"\n  | \"🔪\"\n  | \"🫙\"\n  | \"🏺\"\n  | \"🌍\"\n  | \"🌎\"\n  | \"🌏\"\n  | \"🌐\"\n  | \"🗺️\"\n  | \"🗺\"\n  | \"🗾\"\n  | \"🧭\"\n  | \"🏔️\"\n  | \"🏔\"\n  | \"⛰️\"\n  | \"⛰\"\n  | \"🌋\"\n  | \"🗻\"\n  | \"🏕️\"\n  | \"🏕\"\n  | \"🏖️\"\n  | \"🏖\"\n  | \"🏜️\"\n  | \"🏜\"\n  | \"🏝️\"\n  | \"🏝\"\n  | \"🏞️\"\n  | \"🏞\"\n  | \"🏟️\"\n  | \"🏟\"\n  | \"🏛️\"\n  | \"🏛\"\n  | \"🏗️\"\n  | \"🏗\"\n  | \"🧱\"\n  | \"🪨\"\n  | \"🪵\"\n  | \"🛖\"\n  | \"🏘️\"\n  | \"🏘\"\n  | \"🏚️\"\n  | \"🏚\"\n  | \"🏠\"\n  | \"🏡\"\n  | \"🏢\"\n  | \"🏣\"\n  | \"🏤\"\n  | \"🏥\"\n  | \"🏦\"\n  | \"🏨\"\n  | \"🏩\"\n  | \"🏪\"\n  | \"🏫\"\n  | \"🏬\"\n  | \"🏭\"\n  | \"🏯\"\n  | \"🏰\"\n  | \"💒\"\n  | \"🗼\"\n  | \"🗽\"\n  | \"⛪\"\n  | \"🕌\"\n  | \"🛕\"\n  | \"🕍\"\n  | \"⛩️\"\n  | \"⛩\"\n  | \"🕋\"\n  | \"⛲\"\n  | \"⛺\"\n  | \"🌁\"\n  | \"🌃\"\n  | \"🏙️\"\n  | \"🏙\"\n  | \"🌄\"\n  | \"🌅\"\n  | \"🌆\"\n  | \"🌇\"\n  | \"🌉\"\n  | \"♨️\"\n  | \"♨\"\n  | \"🎠\"\n  | \"🛝\"\n  | \"🎡\"\n  | \"🎢\"\n  | \"💈\"\n  | \"🎪\"\n  | \"🚂\"\n  | \"🚃\"\n  | \"🚄\"\n  | \"🚅\"\n  | \"🚆\"\n  | \"🚇\"\n  | \"🚈\"\n  | \"🚉\"\n  | \"🚊\"\n  | \"🚝\"\n  | \"🚞\"\n  | \"🚋\"\n  | \"🚌\"\n  | \"🚍\"\n  | \"🚎\"\n  | \"🚐\"\n  | \"🚑\"\n  | \"🚒\"\n  | \"🚓\"\n  | \"🚔\"\n  | \"🚕\"\n  | \"🚖\"\n  | \"🚗\"\n  | \"🚘\"\n  | \"🚙\"\n  | \"🛻\"\n  | \"🚚\"\n  | \"🚛\"\n  | \"🚜\"\n  | \"🏎️\"\n  | \"🏎\"\n  | \"🏍️\"\n  | \"🏍\"\n  | \"🛵\"\n  | \"🦽\"\n  | \"🦼\"\n  | \"🛺\"\n  | \"🚲\"\n  | \"🛴\"\n  | \"🛹\"\n  | \"🛼\"\n  | \"🚏\"\n  | \"🛣️\"\n  | \"🛣\"\n  | \"🛤️\"\n  | \"🛤\"\n  | \"🛢️\"\n  | \"🛢\"\n  | \"⛽\"\n  | \"🛞\"\n  | \"🚨\"\n  | \"🚥\"\n  | \"🚦\"\n  | \"🛑\"\n  | \"🚧\"\n  | \"⚓\"\n  | \"🛟\"\n  | \"⛵\"\n  | \"🛶\"\n  | \"🚤\"\n  | \"🛳️\"\n  | \"🛳\"\n  | \"⛴️\"\n  | \"⛴\"\n  | \"🛥️\"\n  | \"🛥\"\n  | \"🚢\"\n  | \"✈️\"\n  | \"✈\"\n  | \"🛩️\"\n  | \"🛩\"\n  | \"🛫\"\n  | \"🛬\"\n  | \"🪂\"\n  | \"💺\"\n  | \"🚁\"\n  | \"🚟\"\n  | \"🚠\"\n  | \"🚡\"\n  | \"🛰️\"\n  | \"🛰\"\n  | \"🚀\"\n  | \"🛸\"\n  | \"🛎️\"\n  | \"🛎\"\n  | \"🧳\"\n  | \"⌛\"\n  | \"⏳\"\n  | \"⌚\"\n  | \"⏰\"\n  | \"⏱️\"\n  | \"⏱\"\n  | \"⏲️\"\n  | \"⏲\"\n  | \"🕰️\"\n  | \"🕰\"\n  | \"🕛\"\n  | \"🕧\"\n  | \"🕐\"\n  | \"🕜\"\n  | \"🕑\"\n  | \"🕝\"\n  | \"🕒\"\n  | \"🕞\"\n  | \"🕓\"\n  | \"🕟\"\n  | \"🕔\"\n  | \"🕠\"\n  | \"🕕\"\n  | \"🕡\"\n  | \"🕖\"\n  | \"🕢\"\n  | \"🕗\"\n  | \"🕣\"\n  | \"🕘\"\n  | \"🕤\"\n  | \"🕙\"\n  | \"🕥\"\n  | \"🕚\"\n  | \"🕦\"\n  | \"🌑\"\n  | \"🌒\"\n  | \"🌓\"\n  | \"🌔\"\n  | \"🌕\"\n  | \"🌖\"\n  | \"🌗\"\n  | \"🌘\"\n  | \"🌙\"\n  | \"🌚\"\n  | \"🌛\"\n  | \"🌜\"\n  | \"🌡️\"\n  | \"🌡\"\n  | \"☀️\"\n  | \"☀\"\n  | \"🌝\"\n  | \"🌞\"\n  | \"🪐\"\n  | \"⭐\"\n  | \"🌟\"\n  | \"🌠\"\n  | \"🌌\"\n  | \"☁️\"\n  | \"☁\"\n  | \"⛅\"\n  | \"⛈️\"\n  | \"⛈\"\n  | \"🌤️\"\n  | \"🌤\"\n  | \"🌥️\"\n  | \"🌥\"\n  | \"🌦️\"\n  | \"🌦\"\n  | \"🌧️\"\n  | \"🌧\"\n  | \"🌨️\"\n  | \"🌨\"\n  | \"🌩️\"\n  | \"🌩\"\n  | \"🌪️\"\n  | \"🌪\"\n  | \"🌫️\"\n  | \"🌫\"\n  | \"🌬️\"\n  | \"🌬\"\n  | \"🌀\"\n  | \"🌈\"\n  | \"🌂\"\n  | \"☂️\"\n  | \"☂\"\n  | \"☔\"\n  | \"⛱️\"\n  | \"⛱\"\n  | \"⚡\"\n  | \"❄️\"\n  | \"❄\"\n  | \"☃️\"\n  | \"☃\"\n  | \"⛄\"\n  | \"☄️\"\n  | \"☄\"\n  | \"🔥\"\n  | \"💧\"\n  | \"🌊\"\n  | \"🎃\"\n  | \"🎄\"\n  | \"🎆\"\n  | \"🎇\"\n  | \"🧨\"\n  | \"✨\"\n  | \"🎈\"\n  | \"🎉\"\n  | \"🎊\"\n  | \"🎋\"\n  | \"🎍\"\n  | \"🎎\"\n  | \"🎏\"\n  | \"🎐\"\n  | \"🎑\"\n  | \"🧧\"\n  | \"🎀\"\n  | \"🎁\"\n  | \"🎗️\"\n  | \"🎗\"\n  | \"🎟️\"\n  | \"🎟\"\n  | \"🎫\"\n  | \"🎖️\"\n  | \"🎖\"\n  | \"🏆\"\n  | \"🏅\"\n  | \"🥇\"\n  | \"🥈\"\n  | \"🥉\"\n  | \"⚽\"\n  | \"⚾\"\n  | \"🥎\"\n  | \"🏀\"\n  | \"🏐\"\n  | \"🏈\"\n  | \"🏉\"\n  | \"🎾\"\n  | \"🥏\"\n  | \"🎳\"\n  | \"🏏\"\n  | \"🏑\"\n  | \"🏒\"\n  | \"🥍\"\n  | \"🏓\"\n  | \"🏸\"\n  | \"🥊\"\n  | \"🥋\"\n  | \"🥅\"\n  | \"⛳\"\n  | \"⛸️\"\n  | \"⛸\"\n  | \"🎣\"\n  | \"🤿\"\n  | \"🎽\"\n  | \"🎿\"\n  | \"🛷\"\n  | \"🥌\"\n  | \"🎯\"\n  | \"🪀\"\n  | \"🪁\"\n  | \"🎱\"\n  | \"🔮\"\n  | \"🪄\"\n  | \"🧿\"\n  | \"🪬\"\n  | \"🎮\"\n  | \"🕹️\"\n  | \"🕹\"\n  | \"🎰\"\n  | \"🎲\"\n  | \"🧩\"\n  | \"🧸\"\n  | \"🪅\"\n  | \"🪩\"\n  | \"🪆\"\n  | \"♠️\"\n  | \"♠\"\n  | \"♥️\"\n  | \"♥\"\n  | \"♦️\"\n  | \"♦\"\n  | \"♣️\"\n  | \"♣\"\n  | \"♟️\"\n  | \"♟\"\n  | \"🃏\"\n  | \"🀄\"\n  | \"🎴\"\n  | \"🎭\"\n  | \"🖼️\"\n  | \"🖼\"\n  | \"🎨\"\n  | \"🧵\"\n  | \"🪡\"\n  | \"🧶\"\n  | \"🪢\"\n  | \"👓\"\n  | \"🕶️\"\n  | \"🕶\"\n  | \"🥽\"\n  | \"🥼\"\n  | \"🦺\"\n  | \"👔\"\n  | \"👕\"\n  | \"👖\"\n  | \"🧣\"\n  | \"🧤\"\n  | \"🧥\"\n  | \"🧦\"\n  | \"👗\"\n  | \"👘\"\n  | \"🥻\"\n  | \"🩱\"\n  | \"🩲\"\n  | \"🩳\"\n  | \"👙\"\n  | \"👚\"\n  | \"👛\"\n  | \"👜\"\n  | \"👝\"\n  | \"🛍️\"\n  | \"🛍\"\n  | \"🎒\"\n  | \"🩴\"\n  | \"👞\"\n  | \"👟\"\n  | \"🥾\"\n  | \"🥿\"\n  | \"👠\"\n  | \"👡\"\n  | \"🩰\"\n  | \"👢\"\n  | \"👑\"\n  | \"👒\"\n  | \"🎩\"\n  | \"🎓\"\n  | \"🧢\"\n  | \"🪖\"\n  | \"⛑️\"\n  | \"⛑\"\n  | \"📿\"\n  | \"💄\"\n  | \"💍\"\n  | \"💎\"\n  | \"🔇\"\n  | \"🔈\"\n  | \"🔉\"\n  | \"🔊\"\n  | \"📢\"\n  | \"📣\"\n  | \"📯\"\n  | \"🔔\"\n  | \"🔕\"\n  | \"🎼\"\n  | \"🎵\"\n  | \"🎶\"\n  | \"🎙️\"\n  | \"🎙\"\n  | \"🎚️\"\n  | \"🎚\"\n  | \"🎛️\"\n  | \"🎛\"\n  | \"🎤\"\n  | \"🎧\"\n  | \"📻\"\n  | \"🎷\"\n  | \"🪗\"\n  | \"🎸\"\n  | \"🎹\"\n  | \"🎺\"\n  | \"🎻\"\n  | \"🪕\"\n  | \"🥁\"\n  | \"🪘\"\n  | \"📱\"\n  | \"📲\"\n  | \"☎️\"\n  | \"☎\"\n  | \"📞\"\n  | \"📟\"\n  | \"📠\"\n  | \"🔋\"\n  | \"🪫\"\n  | \"🔌\"\n  | \"💻\"\n  | \"🖥️\"\n  | \"🖥\"\n  | \"🖨️\"\n  | \"🖨\"\n  | \"⌨️\"\n  | \"⌨\"\n  | \"🖱️\"\n  | \"🖱\"\n  | \"🖲️\"\n  | \"🖲\"\n  | \"💽\"\n  | \"💾\"\n  | \"💿\"\n  | \"📀\"\n  | \"🧮\"\n  | \"🎥\"\n  | \"🎞️\"\n  | \"🎞\"\n  | \"📽️\"\n  | \"📽\"\n  | \"🎬\"\n  | \"📺\"\n  | \"📷\"\n  | \"📸\"\n  | \"📹\"\n  | \"📼\"\n  | \"🔍\"\n  | \"🔎\"\n  | \"🕯️\"\n  | \"🕯\"\n  | \"💡\"\n  | \"🔦\"\n  | \"🏮\"\n  | \"🪔\"\n  | \"📔\"\n  | \"📕\"\n  | \"📖\"\n  | \"📗\"\n  | \"📘\"\n  | \"📙\"\n  | \"📚\"\n  | \"📓\"\n  | \"📒\"\n  | \"📃\"\n  | \"📜\"\n  | \"📄\"\n  | \"📰\"\n  | \"🗞️\"\n  | \"🗞\"\n  | \"📑\"\n  | \"🔖\"\n  | \"🏷️\"\n  | \"🏷\"\n  | \"💰\"\n  | \"🪙\"\n  | \"💴\"\n  | \"💵\"\n  | \"💶\"\n  | \"💷\"\n  | \"💸\"\n  | \"💳\"\n  | \"🧾\"\n  | \"💹\"\n  | \"✉️\"\n  | \"✉\"\n  | \"📧\"\n  | \"📨\"\n  | \"📩\"\n  | \"📤\"\n  | \"📥\"\n  | \"📦\"\n  | \"📫\"\n  | \"📪\"\n  | \"📬\"\n  | \"📭\"\n  | \"📮\"\n  | \"🗳️\"\n  | \"🗳\"\n  | \"✏️\"\n  | \"✏\"\n  | \"✒️\"\n  | \"✒\"\n  | \"🖋️\"\n  | \"🖋\"\n  | \"🖊️\"\n  | \"🖊\"\n  | \"🖌️\"\n  | \"🖌\"\n  | \"🖍️\"\n  | \"🖍\"\n  | \"📝\"\n  | \"💼\"\n  | \"📁\"\n  | \"📂\"\n  | \"🗂️\"\n  | \"🗂\"\n  | \"📅\"\n  | \"📆\"\n  | \"🗒️\"\n  | \"🗒\"\n  | \"🗓️\"\n  | \"🗓\"\n  | \"📇\"\n  | \"📈\"\n  | \"📉\"\n  | \"📊\"\n  | \"📋\"\n  | \"📌\"\n  | \"📍\"\n  | \"📎\"\n  | \"🖇️\"\n  | \"🖇\"\n  | \"📏\"\n  | \"📐\"\n  | \"✂️\"\n  | \"✂\"\n  | \"🗃️\"\n  | \"🗃\"\n  | \"🗄️\"\n  | \"🗄\"\n  | \"🗑️\"\n  | \"🗑\"\n  | \"🔒\"\n  | \"🔓\"\n  | \"🔏\"\n  | \"🔐\"\n  | \"🔑\"\n  | \"🗝️\"\n  | \"🗝\"\n  | \"🔨\"\n  | \"🪓\"\n  | \"⛏️\"\n  | \"⛏\"\n  | \"⚒️\"\n  | \"⚒\"\n  | \"🛠️\"\n  | \"🛠\"\n  | \"🗡️\"\n  | \"🗡\"\n  | \"⚔️\"\n  | \"⚔\"\n  | \"🔫\"\n  | \"🪃\"\n  | \"🏹\"\n  | \"🛡️\"\n  | \"🛡\"\n  | \"🪚\"\n  | \"🔧\"\n  | \"🪛\"\n  | \"🔩\"\n  | \"⚙️\"\n  | \"⚙\"\n  | \"🗜️\"\n  | \"🗜\"\n  | \"⚖️\"\n  | \"⚖\"\n  | \"🦯\"\n  | \"🔗\"\n  | \"⛓️\"\n  | \"⛓\"\n  | \"🪝\"\n  | \"🧰\"\n  | \"🧲\"\n  | \"🪜\"\n  | \"⚗️\"\n  | \"⚗\"\n  | \"🧪\"\n  | \"🧫\"\n  | \"🧬\"\n  | \"🔬\"\n  | \"🔭\"\n  | \"📡\"\n  | \"💉\"\n  | \"🩸\"\n  | \"💊\"\n  | \"🩹\"\n  | \"🩼\"\n  | \"🩺\"\n  | \"🩻\"\n  | \"🚪\"\n  | \"🛗\"\n  | \"🪞\"\n  | \"🪟\"\n  | \"🛏️\"\n  | \"🛏\"\n  | \"🛋️\"\n  | \"🛋\"\n  | \"🪑\"\n  | \"🚽\"\n  | \"🪠\"\n  | \"🚿\"\n  | \"🛁\"\n  | \"🪤\"\n  | \"🪒\"\n  | \"🧴\"\n  | \"🧷\"\n  | \"🧹\"\n  | \"🧺\"\n  | \"🧻\"\n  | \"🪣\"\n  | \"🧼\"\n  | \"🫧\"\n  | \"🪥\"\n  | \"🧽\"\n  | \"🧯\"\n  | \"🛒\"\n  | \"🚬\"\n  | \"⚰️\"\n  | \"⚰\"\n  | \"🪦\"\n  | \"⚱️\"\n  | \"⚱\"\n  | \"🗿\"\n  | \"🪧\"\n  | \"🪪\"\n  | \"🏧\"\n  | \"🚮\"\n  | \"🚰\"\n  | \"♿\"\n  | \"🚹\"\n  | \"🚺\"\n  | \"🚻\"\n  | \"🚼\"\n  | \"🚾\"\n  | \"🛂\"\n  | \"🛃\"\n  | \"🛄\"\n  | \"🛅\"\n  | \"⚠️\"\n  | \"⚠\"\n  | \"🚸\"\n  | \"⛔\"\n  | \"🚫\"\n  | \"🚳\"\n  | \"🚭\"\n  | \"🚯\"\n  | \"🚱\"\n  | \"🚷\"\n  | \"📵\"\n  | \"🔞\"\n  | \"☢️\"\n  | \"☢\"\n  | \"☣️\"\n  | \"☣\"\n  | \"⬆️\"\n  | \"⬆\"\n  | \"↗️\"\n  | \"↗\"\n  | \"➡️\"\n  | \"➡\"\n  | \"↘️\"\n  | \"↘\"\n  | \"⬇️\"\n  | \"⬇\"\n  | \"↙️\"\n  | \"↙\"\n  | \"⬅️\"\n  | \"⬅\"\n  | \"↖️\"\n  | \"↖\"\n  | \"↕️\"\n  | \"↕\"\n  | \"↔️\"\n  | \"↩️\"\n  | \"↩\"\n  | \"↪️\"\n  | \"↪\"\n  | \"⤴️\"\n  | \"⤴\"\n  | \"⤵️\"\n  | \"⤵\"\n  | \"🔃\"\n  | \"🔄\"\n  | \"🔙\"\n  | \"🔚\"\n  | \"🔛\"\n  | \"🔜\"\n  | \"🔝\"\n  | \"🛐\"\n  | \"⚛️\"\n  | \"⚛\"\n  | \"🕉️\"\n  | \"🕉\"\n  | \"✡️\"\n  | \"✡\"\n  | \"☸️\"\n  | \"☸\"\n  | \"☯️\"\n  | \"☯\"\n  | \"✝️\"\n  | \"✝\"\n  | \"☦️\"\n  | \"☦\"\n  | \"☪️\"\n  | \"☪\"\n  | \"☮️\"\n  | \"☮\"\n  | \"🕎\"\n  | \"🔯\"\n  | \"♈\"\n  | \"♉\"\n  | \"♊\"\n  | \"♋\"\n  | \"♌\"\n  | \"♍\"\n  | \"♎\"\n  | \"♏\"\n  | \"♐\"\n  | \"♑\"\n  | \"♒\"\n  | \"♓\"\n  | \"⛎\"\n  | \"🔀\"\n  | \"🔁\"\n  | \"🔂\"\n  | \"▶️\"\n  | \"⏩\"\n  | \"⏭️\"\n  | \"⏭\"\n  | \"⏯️\"\n  | \"⏯\"\n  | \"◀️\"\n  | \"⏪\"\n  | \"⏮️\"\n  | \"⏮\"\n  | \"🔼\"\n  | \"⏫\"\n  | \"🔽\"\n  | \"⏬\"\n  | \"⏸️\"\n  | \"⏸\"\n  | \"⏹️\"\n  | \"⏹\"\n  | \"⏺️\"\n  | \"⏺\"\n  | \"⏏️\"\n  | \"⏏\"\n  | \"🎦\"\n  | \"🔅\"\n  | \"🔆\"\n  | \"📶\"\n  | \"📳\"\n  | \"📴\"\n  | \"♀️\"\n  | \"♀\"\n  | \"♂️\"\n  | \"♂\"\n  | \"⚧️\"\n  | \"⚧\"\n  | \"✖️\"\n  | \"✖\"\n  | \"➕\"\n  | \"➖\"\n  | \"➗\"\n  | \"🟰\"\n  | \"♾️\"\n  | \"♾\"\n  | \"‼️\"\n  | \"‼\"\n  | \"⁉️\"\n  | \"⁉\"\n  | \"❓\"\n  | \"❔\"\n  | \"❕\"\n  | \"❗\"\n  | \"〰️\"\n  | \"〰\"\n  | \"💱\"\n  | \"💲\"\n  | \"⚕️\"\n  | \"⚕\"\n  | \"♻️\"\n  | \"♻\"\n  | \"⚜️\"\n  | \"⚜\"\n  | \"🔱\"\n  | \"📛\"\n  | \"🔰\"\n  | \"⭕\"\n  | \"✅\"\n  | \"☑️\"\n  | \"☑\"\n  | \"✔️\"\n  | \"✔\"\n  | \"❌\"\n  | \"❎\"\n  | \"➰\"\n  | \"➿\"\n  | \"〽️\"\n  | \"〽\"\n  | \"✳️\"\n  | \"✳\"\n  | \"✴️\"\n  | \"✴\"\n  | \"❇️\"\n  | \"❇\"\n  | \"©️\"\n  | \"©\"\n  | \"®️\"\n  | \"®\"\n  | \"™️\"\n  | \"#️⃣\"\n  | \"#⃣\"\n  | \"*️⃣\"\n  | \"*⃣\"\n  | \"0️⃣\"\n  | \"0⃣\"\n  | \"1️⃣\"\n  | \"1⃣\"\n  | \"2️⃣\"\n  | \"2⃣\"\n  | \"3️⃣\"\n  | \"3⃣\"\n  | \"4️⃣\"\n  | \"4⃣\"\n  | \"5️⃣\"\n  | \"5⃣\"\n  | \"6️⃣\"\n  | \"6⃣\"\n  | \"7️⃣\"\n  | \"7⃣\"\n  | \"8️⃣\"\n  | \"8⃣\"\n  | \"9️⃣\"\n  | \"9⃣\"\n  | \"🔟\"\n  | \"🔠\"\n  | \"🔡\"\n  | \"🔢\"\n  | \"🔣\"\n  | \"🔤\"\n  | \"🅰️\"\n  | \"🅰\"\n  | \"🆎\"\n  | \"🅱️\"\n  | \"🅱\"\n  | \"🆑\"\n  | \"🆒\"\n  | \"🆓\"\n  | \"ℹ️\"\n  | \"ℹ\"\n  | \"🆔\"\n  | \"Ⓜ️\"\n  | \"Ⓜ\"\n  | \"🆕\"\n  | \"🆖\"\n  | \"🅾️\"\n  | \"🅾\"\n  | \"🆗\"\n  | \"🅿️\"\n  | \"🅿\"\n  | \"🆘\"\n  | \"🆙\"\n  | \"🆚\"\n  | \"🈁\"\n  | \"🈂️\"\n  | \"🈂\"\n  | \"🈷️\"\n  | \"🈷\"\n  | \"🈶\"\n  | \"🈯\"\n  | \"🉐\"\n  | \"🈹\"\n  | \"🈚\"\n  | \"🈲\"\n  | \"🉑\"\n  | \"🈸\"\n  | \"🈴\"\n  | \"🈳\"\n  | \"㊗️\"\n  | \"㊗\"\n  | \"㊙️\"\n  | \"㊙\"\n  | \"🈺\"\n  | \"🈵\"\n  | \"🔴\"\n  | \"🟠\"\n  | \"🟡\"\n  | \"🟢\"\n  | \"🔵\"\n  | \"🟣\"\n  | \"🟤\"\n  | \"⚫\"\n  | \"⚪\"\n  | \"🟥\"\n  | \"🟧\"\n  | \"🟨\"\n  | \"🟩\"\n  | \"🟦\"\n  | \"🟪\"\n  | \"🟫\"\n  | \"⬛\"\n  | \"⬜\"\n  | \"◼️\"\n  | \"◼\"\n  | \"◻️\"\n  | \"◻\"\n  | \"◾\"\n  | \"◽\"\n  | \"▪️\"\n  | \"▪\"\n  | \"▫️\"\n  | \"▫\"\n  | \"🔶\"\n  | \"🔷\"\n  | \"🔸\"\n  | \"🔹\"\n  | \"🔺\"\n  | \"🔻\"\n  | \"💠\"\n  | \"🔘\"\n  | \"🔳\"\n  | \"🔲\"\n  | \"🏁\"\n  | \"🚩\"\n  | \"🎌\"\n  | \"🏴\"\n  | \"🏳️\"\n  | \"🏳\"\n  | \"🏳️‍🌈\"\n  | \"🏳‍🌈\"\n  | \"🏳️‍⚧️\"\n  | \"🏴‍☠️\"\n  | \"🏴‍☠\"\n  | \"🇦🇨\"\n  | \"🇦🇩\"\n  | \"🇦🇪\"\n  | \"🇦🇫\"\n  | \"🇦🇬\"\n  | \"🇦🇮\"\n  | \"🇦🇱\"\n  | \"🇦🇲\"\n  | \"🇦🇴\"\n  | \"🇦🇶\"\n  | \"🇦🇷\"\n  | \"🇦🇸\"\n  | \"🇦🇹\"\n  | \"🇦🇺\"\n  | \"🇦🇼\"\n  | \"🇦🇽\"\n  | \"🇦🇿\"\n  | \"🇧🇦\"\n  | \"🇧🇧\"\n  | \"🇧🇩\"\n  | \"🇧🇪\"\n  | \"🇧🇫\"\n  | \"🇧🇬\"\n  | \"🇧🇭\"\n  | \"🇧🇮\"\n  | \"🇧🇯\"\n  | \"🇧🇱\"\n  | \"🇧🇲\"\n  | \"🇧🇳\"\n  | \"🇧🇴\"\n  | \"🇧🇶\"\n  | \"🇧🇷\"\n  | \"🇧🇸\"\n  | \"🇧🇹\"\n  | \"🇧🇻\"\n  | \"🇧🇼\"\n  | \"🇧🇾\"\n  | \"🇧🇿\"\n  | \"🇨🇦\"\n  | \"🇨🇨\"\n  | \"🇨🇩\"\n  | \"🇨🇫\"\n  | \"🇨🇬\"\n  | \"🇨🇭\"\n  | \"🇨🇮\"\n  | \"🇨🇰\"\n  | \"🇨🇱\"\n  | \"🇨🇲\"\n  | \"🇨🇳\"\n  | \"🇨🇴\"\n  | \"🇨🇵\"\n  | \"🇨🇷\"\n  | \"🇨🇺\"\n  | \"🇨🇻\"\n  | \"🇨🇼\"\n  | \"🇨🇽\"\n  | \"🇨🇾\"\n  | \"🇨🇿\"\n  | \"🇩🇪\"\n  | \"🇩🇬\"\n  | \"🇩🇯\"\n  | \"🇩🇰\"\n  | \"🇩🇲\"\n  | \"🇩🇴\"\n  | \"🇩🇿\"\n  | \"🇪🇦\"\n  | \"🇪🇨\"\n  | \"🇪🇪\"\n  | \"🇪🇬\"\n  | \"🇪🇭\"\n  | \"🇪🇷\"\n  | \"🇪🇸\"\n  | \"🇪🇹\"\n  | \"🇪🇺\"\n  | \"🇫🇮\"\n  | \"🇫🇯\"\n  | \"🇫🇰\"\n  | \"🇫🇲\"\n  | \"🇫🇴\"\n  | \"🇫🇷\"\n  | \"🇬🇦\"\n  | \"🇬🇧\"\n  | \"🇬🇩\"\n  | \"🇬🇪\"\n  | \"🇬🇫\"\n  | \"🇬🇬\"\n  | \"🇬🇭\"\n  | \"🇬🇮\"\n  | \"🇬🇱\"\n  | \"🇬🇲\"\n  | \"🇬🇳\"\n  | \"🇬🇵\"\n  | \"🇬🇶\"\n  | \"🇬🇷\"\n  | \"🇬🇸\"\n  | \"🇬🇹\"\n  | \"🇬🇺\"\n  | \"🇬🇼\"\n  | \"🇬🇾\"\n  | \"🇭🇰\"\n  | \"🇭🇲\"\n  | \"🇭🇳\"\n  | \"🇭🇷\"\n  | \"🇭🇹\"\n  | \"🇭🇺\"\n  | \"🇮🇨\"\n  | \"🇮🇩\"\n  | \"🇮🇪\"\n  | \"🇮🇱\"\n  | \"🇮🇲\"\n  | \"🇮🇳\"\n  | \"🇮🇴\"\n  | \"🇮🇶\"\n  | \"🇮🇷\"\n  | \"🇮🇸\"\n  | \"🇮🇹\"\n  | \"🇯🇪\"\n  | \"🇯🇲\"\n  | \"🇯🇴\"\n  | \"🇯🇵\"\n  | \"🇰🇪\"\n  | \"🇰🇬\"\n  | \"🇰🇭\"\n  | \"🇰🇮\"\n  | \"🇰🇲\"\n  | \"🇰🇳\"\n  | \"🇰🇵\"\n  | \"🇰🇷\"\n  | \"🇰🇼\"\n  | \"🇰🇾\"\n  | \"🇰🇿\"\n  | \"🇱🇦\"\n  | \"🇱🇧\"\n  | \"🇱🇨\"\n  | \"🇱🇮\"\n  | \"🇱🇰\"\n  | \"🇱🇷\"\n  | \"🇱🇸\"\n  | \"🇱🇹\"\n  | \"🇱🇺\"\n  | \"🇱🇻\"\n  | \"🇱🇾\"\n  | \"🇲🇦\"\n  | \"🇲🇨\"\n  | \"🇲🇩\"\n  | \"🇲🇪\"\n  | \"🇲🇫\"\n  | \"🇲🇬\"\n  | \"🇲🇭\"\n  | \"🇲🇰\"\n  | \"🇲🇱\"\n  | \"🇲🇲\"\n  | \"🇲🇳\"\n  | \"🇲🇴\"\n  | \"🇲🇵\"\n  | \"🇲🇶\"\n  | \"🇲🇷\"\n  | \"🇲🇸\"\n  | \"🇲🇹\"\n  | \"🇲🇺\"\n  | \"🇲🇻\"\n  | \"🇲🇼\"\n  | \"🇲🇽\"\n  | \"🇲🇾\"\n  | \"🇲🇿\"\n  | \"🇳🇦\"\n  | \"🇳🇨\"\n  | \"🇳🇪\"\n  | \"🇳🇫\"\n  | \"🇳🇬\"\n  | \"🇳🇮\"\n  | \"🇳🇱\"\n  | \"🇳🇴\"\n  | \"🇳🇵\"\n  | \"🇳🇷\"\n  | \"🇳🇺\"\n  | \"🇳🇿\"\n  | \"🇴🇲\"\n  | \"🇵🇦\"\n  | \"🇵🇪\"\n  | \"🇵🇫\"\n  | \"🇵🇬\"\n  | \"🇵🇭\"\n  | \"🇵🇰\"\n  | \"🇵🇱\"\n  | \"🇵🇲\"\n  | \"🇵🇳\"\n  | \"🇵🇷\"\n  | \"🇵🇸\"\n  | \"🇵🇹\"\n  | \"🇵🇼\"\n  | \"🇵🇾\"\n  | \"🇶🇦\"\n  | \"🇷🇪\"\n  | \"🇷🇴\"\n  | \"🇷🇸\"\n  | \"🇷🇺\"\n  | \"🇷🇼\"\n  | \"🇸🇦\"\n  | \"🇸🇧\"\n  | \"🇸🇨\"\n  | \"🇸🇩\"\n  | \"🇸🇪\"\n  | \"🇸🇬\"\n  | \"🇸🇭\"\n  | \"🇸🇮\"\n  | \"🇸🇯\"\n  | \"🇸🇰\"\n  | \"🇸🇱\"\n  | \"🇸🇲\"\n  | \"🇸🇳\"\n  | \"🇸🇴\"\n  | \"🇸🇷\"\n  | \"🇸🇸\"\n  | \"🇸🇹\"\n  | \"🇸🇻\"\n  | \"🇸🇽\"\n  | \"🇸🇾\"\n  | \"🇸🇿\"\n  | \"🇹🇦\"\n  | \"🇹🇨\"\n  | \"🇹🇩\"\n  | \"🇹🇫\"\n  | \"🇹🇬\"\n  | \"🇹🇭\"\n  | \"🇹🇯\"\n  | \"🇹🇰\"\n  | \"🇹🇱\"\n  | \"🇹🇲\"\n  | \"🇹🇳\"\n  | \"🇹🇴\"\n  | \"🇹🇷\"\n  | \"🇹🇹\"\n  | \"🇹🇻\"\n  | \"🇹🇼\"\n  | \"🇹🇿\"\n  | \"🇺🇦\"\n  | \"🇺🇬\"\n  | \"🇺🇲\"\n  | \"🇺🇳\"\n  | \"🇺🇸\"\n  | \"🇺🇾\"\n  | \"🇺🇿\"\n  | \"🇻🇦\"\n  | \"🇻🇨\"\n  | \"🇻🇪\"\n  | \"🇻🇬\"\n  | \"🇻🇮\"\n  | \"🇻🇳\"\n  | \"🇻🇺\"\n  | \"🇼🇫\"\n  | \"🇼🇸\"\n  | \"🇽🇰\"\n  | \"🇾🇪\"\n  | \"🇾🇹\"\n  | \"🇿🇦\"\n  | \"🇿🇲\"\n  | \"🇿🇼\"\n  | \"🏴󠁧󠁢󠁥󠁮󠁧󠁿\"\n  | \"🏴󠁧󠁢󠁳󠁣󠁴󠁿\"\n  | \"🏴󠁧󠁢󠁷󠁬󠁳󠁿\"\n\nexport type PageObjectResponse = {\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  properties: Record<\n    string,\n    | { type: \"number\"; number: number | null; id: string }\n    | { type: \"url\"; url: string | null; id: string }\n    | { type: \"select\"; select: PartialSelectResponse | null; id: string }\n    | {\n        type: \"multi_select\"\n        multi_select: Array<PartialSelectResponse>\n        id: string\n      }\n    | { type: \"status\"; status: PartialSelectResponse | null; id: string }\n    | { type: \"date\"; date: DateResponse | null; id: string }\n    | { type: \"email\"; email: string | null; id: string }\n    | { type: \"phone_number\"; phone_number: string | null; id: string }\n    | { type: \"checkbox\"; checkbox: boolean; id: string }\n    | {\n        type: \"files\"\n        files: Array<\n          | {\n              file: { url: string; expiry_time: string }\n              name: StringRequest\n              type?: \"file\"\n            }\n          | {\n              external: { url: TextRequest }\n              name: StringRequest\n              type?: \"external\"\n            }\n        >\n        id: string\n      }\n    | {\n        type: \"created_by\"\n        created_by: PartialUserObjectResponse | UserObjectResponse\n        id: string\n      }\n    | { type: \"created_time\"; created_time: string; id: string }\n    | {\n        type: \"last_edited_by\"\n        last_edited_by: PartialUserObjectResponse | UserObjectResponse\n        id: string\n      }\n    | { type: \"last_edited_time\"; last_edited_time: string; id: string }\n    | { type: \"formula\"; formula: FormulaPropertyResponse; id: string }\n    | { type: \"button\"; button: Record<string, never>; id: string }\n    | {\n        type: \"unique_id\"\n        unique_id: { prefix: string | null; number: number | null }\n        id: string\n      }\n    | {\n        type: \"verification\"\n        verification:\n          | VerificationPropertyUnverifiedResponse\n          | null\n          | VerificationPropertyResponse\n          | null\n        id: string\n      }\n    | { type: \"title\"; title: Array<RichTextItemResponse>; id: string }\n    | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse>; id: string }\n    | {\n        type: \"people\"\n        people: Array<PartialUserObjectResponse | UserObjectResponse>\n        id: string\n      }\n    | { type: \"relation\"; relation: Array<{ id: string }>; id: string }\n    | {\n        type: \"rollup\"\n        rollup:\n          | { type: \"number\"; number: number | null; function: RollupFunction }\n          | {\n              type: \"date\"\n              date: DateResponse | null\n              function: RollupFunction\n            }\n          | {\n              type: \"array\"\n              array: Array<\n                | { type: \"number\"; number: number | null }\n                | { type: \"url\"; url: string | null }\n                | { type: \"select\"; select: PartialSelectResponse | null }\n                | {\n                    type: \"multi_select\"\n                    multi_select: Array<PartialSelectResponse>\n                  }\n                | { type: \"status\"; status: PartialSelectResponse | null }\n                | { type: \"date\"; date: DateResponse | null }\n                | { type: \"email\"; email: string | null }\n                | { type: \"phone_number\"; phone_number: string | null }\n                | { type: \"checkbox\"; checkbox: boolean }\n                | {\n                    type: \"files\"\n                    files: Array<\n                      | {\n                          file: { url: string; expiry_time: string }\n                          name: StringRequest\n                          type?: \"file\"\n                        }\n                      | {\n                          external: { url: TextRequest }\n                          name: StringRequest\n                          type?: \"external\"\n                        }\n                    >\n                  }\n                | {\n                    type: \"created_by\"\n                    created_by: PartialUserObjectResponse | UserObjectResponse\n                  }\n                | { type: \"created_time\"; created_time: string }\n                | {\n                    type: \"last_edited_by\"\n                    last_edited_by:\n                      | PartialUserObjectResponse\n                      | UserObjectResponse\n                  }\n                | { type: \"last_edited_time\"; last_edited_time: string }\n                | { type: \"formula\"; formula: FormulaPropertyResponse }\n                | { type: \"button\"; button: Record<string, never> }\n                | {\n                    type: \"unique_id\"\n                    unique_id: { prefix: string | null; number: number | null }\n                  }\n                | {\n                    type: \"verification\"\n                    verification:\n                      | VerificationPropertyUnverifiedResponse\n                      | null\n                      | VerificationPropertyResponse\n                      | null\n                  }\n                | { type: \"title\"; title: Array<RichTextItemResponse> }\n                | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n                | {\n                    type: \"people\"\n                    people: Array<\n                      PartialUserObjectResponse | UserObjectResponse\n                    >\n                  }\n                | { type: \"relation\"; relation: Array<{ id: string }> }\n              >\n              function: RollupFunction\n            }\n        id: string\n      }\n  >\n  icon:\n    | { type: \"emoji\"; emoji: EmojiRequest }\n    | null\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  cover:\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  created_by: PartialUserObjectResponse\n  last_edited_by: PartialUserObjectResponse\n  object: \"page\"\n  id: string\n  created_time: string\n  last_edited_time: string\n  archived: boolean\n  in_trash: boolean\n  url: string\n  public_url: string | null\n}\n\nexport type PartialPageObjectResponse = { object: \"page\"; id: string }\n\ntype NumberFormat =\n  | \"number\"\n  | \"number_with_commas\"\n  | \"percent\"\n  | \"dollar\"\n  | \"australian_dollar\"\n  | \"canadian_dollar\"\n  | \"singapore_dollar\"\n  | \"euro\"\n  | \"pound\"\n  | \"yen\"\n  | \"ruble\"\n  | \"rupee\"\n  | \"won\"\n  | \"yuan\"\n  | \"real\"\n  | \"lira\"\n  | \"rupiah\"\n  | \"franc\"\n  | \"hong_kong_dollar\"\n  | \"new_zealand_dollar\"\n  | \"krona\"\n  | \"norwegian_krone\"\n  | \"mexican_peso\"\n  | \"rand\"\n  | \"new_taiwan_dollar\"\n  | \"danish_krone\"\n  | \"zloty\"\n  | \"baht\"\n  | \"forint\"\n  | \"koruna\"\n  | \"shekel\"\n  | \"chilean_peso\"\n  | \"philippine_peso\"\n  | \"dirham\"\n  | \"colombian_peso\"\n  | \"riyal\"\n  | \"ringgit\"\n  | \"leu\"\n  | \"argentine_peso\"\n  | \"uruguayan_peso\"\n  | \"peruvian_sol\"\n\ntype PropertyDescriptionRequest = string\n\ntype NumberDatabasePropertyConfigResponse = {\n  type: \"number\"\n  number: { format: NumberFormat }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype FormulaDatabasePropertyConfigResponse = {\n  type: \"formula\"\n  formula: { expression: string }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype SelectPropertyResponse = {\n  id: StringRequest\n  name: StringRequest\n  color: SelectColor\n  description: StringRequest | null\n}\n\ntype SelectDatabasePropertyConfigResponse = {\n  type: \"select\"\n  select: { options: Array<SelectPropertyResponse> }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype MultiSelectDatabasePropertyConfigResponse = {\n  type: \"multi_select\"\n  multi_select: { options: Array<SelectPropertyResponse> }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype StatusPropertyResponse = {\n  id: StringRequest\n  name: StringRequest\n  color: SelectColor\n  description: StringRequest | null\n}\n\ntype StatusDatabasePropertyConfigResponse = {\n  type: \"status\"\n  status: {\n    options: Array<StatusPropertyResponse>\n    groups: Array<{\n      id: StringRequest\n      name: StringRequest\n      color: SelectColor\n      option_ids: Array<string>\n    }>\n  }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype SinglePropertyDatabasePropertyRelationConfigResponse = {\n  type: \"single_property\"\n  single_property: EmptyObject\n  database_id: IdRequest\n}\n\ntype DualPropertyDatabasePropertyRelationConfigResponse = {\n  type: \"dual_property\"\n  dual_property: {\n    synced_property_id: StringRequest\n    synced_property_name: StringRequest\n  }\n  database_id: IdRequest\n}\n\ntype DatabasePropertyRelationConfigResponse =\n  | SinglePropertyDatabasePropertyRelationConfigResponse\n  | DualPropertyDatabasePropertyRelationConfigResponse\n\ntype RelationDatabasePropertyConfigResponse = {\n  type: \"relation\"\n  relation: DatabasePropertyRelationConfigResponse\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype RollupDatabasePropertyConfigResponse = {\n  type: \"rollup\"\n  rollup: {\n    rollup_property_name: string\n    relation_property_name: string\n    rollup_property_id: string\n    relation_property_id: string\n    function: RollupFunction\n  }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype UniqueIdDatabasePropertyConfigResponse = {\n  type: \"unique_id\"\n  unique_id: { prefix: string | null }\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype TitleDatabasePropertyConfigResponse = {\n  type: \"title\"\n  title: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype RichTextDatabasePropertyConfigResponse = {\n  type: \"rich_text\"\n  rich_text: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype UrlDatabasePropertyConfigResponse = {\n  type: \"url\"\n  url: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype PeopleDatabasePropertyConfigResponse = {\n  type: \"people\"\n  people: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype FilesDatabasePropertyConfigResponse = {\n  type: \"files\"\n  files: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype EmailDatabasePropertyConfigResponse = {\n  type: \"email\"\n  email: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype PhoneNumberDatabasePropertyConfigResponse = {\n  type: \"phone_number\"\n  phone_number: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype DateDatabasePropertyConfigResponse = {\n  type: \"date\"\n  date: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype CheckboxDatabasePropertyConfigResponse = {\n  type: \"checkbox\"\n  checkbox: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype CreatedByDatabasePropertyConfigResponse = {\n  type: \"created_by\"\n  created_by: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype CreatedTimeDatabasePropertyConfigResponse = {\n  type: \"created_time\"\n  created_time: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype LastEditedByDatabasePropertyConfigResponse = {\n  type: \"last_edited_by\"\n  last_edited_by: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype LastEditedTimeDatabasePropertyConfigResponse = {\n  type: \"last_edited_time\"\n  last_edited_time: EmptyObject\n  id: string\n  name: string\n  description: PropertyDescriptionRequest | null\n}\n\ntype DatabasePropertyConfigResponse =\n  | NumberDatabasePropertyConfigResponse\n  | FormulaDatabasePropertyConfigResponse\n  | SelectDatabasePropertyConfigResponse\n  | MultiSelectDatabasePropertyConfigResponse\n  | StatusDatabasePropertyConfigResponse\n  | RelationDatabasePropertyConfigResponse\n  | RollupDatabasePropertyConfigResponse\n  | UniqueIdDatabasePropertyConfigResponse\n  | TitleDatabasePropertyConfigResponse\n  | RichTextDatabasePropertyConfigResponse\n  | UrlDatabasePropertyConfigResponse\n  | PeopleDatabasePropertyConfigResponse\n  | FilesDatabasePropertyConfigResponse\n  | EmailDatabasePropertyConfigResponse\n  | PhoneNumberDatabasePropertyConfigResponse\n  | DateDatabasePropertyConfigResponse\n  | CheckboxDatabasePropertyConfigResponse\n  | CreatedByDatabasePropertyConfigResponse\n  | CreatedTimeDatabasePropertyConfigResponse\n  | LastEditedByDatabasePropertyConfigResponse\n  | LastEditedTimeDatabasePropertyConfigResponse\n\nexport type PartialDatabaseObjectResponse = {\n  object: \"database\"\n  id: string\n  properties: Record<string, DatabasePropertyConfigResponse>\n}\n\nexport type DatabaseObjectResponse = {\n  title: Array<RichTextItemResponse>\n  description: Array<RichTextItemResponse>\n  icon:\n    | { type: \"emoji\"; emoji: EmojiRequest }\n    | null\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  cover:\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  properties: Record<string, DatabasePropertyConfigResponse>\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  created_by: PartialUserObjectResponse\n  last_edited_by: PartialUserObjectResponse\n  is_inline: boolean\n  object: \"database\"\n  id: string\n  created_time: string\n  last_edited_time: string\n  archived: boolean\n  in_trash: boolean\n  url: string\n  public_url: string | null\n}\n\nexport type PartialBlockObjectResponse = { object: \"block\"; id: string }\n\ntype ApiColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n  | \"gray_background\"\n  | \"brown_background\"\n  | \"orange_background\"\n  | \"yellow_background\"\n  | \"green_background\"\n  | \"blue_background\"\n  | \"purple_background\"\n  | \"pink_background\"\n  | \"red_background\"\n\nexport type ParagraphBlockObjectResponse = {\n  type: \"paragraph\"\n  paragraph: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type Heading1BlockObjectResponse = {\n  type: \"heading_1\"\n  heading_1: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    is_toggleable: boolean\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type Heading2BlockObjectResponse = {\n  type: \"heading_2\"\n  heading_2: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    is_toggleable: boolean\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type Heading3BlockObjectResponse = {\n  type: \"heading_3\"\n  heading_3: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    is_toggleable: boolean\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BulletedListItemBlockObjectResponse = {\n  type: \"bulleted_list_item\"\n  bulleted_list_item: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type NumberedListItemBlockObjectResponse = {\n  type: \"numbered_list_item\"\n  numbered_list_item: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type QuoteBlockObjectResponse = {\n  type: \"quote\"\n  quote: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ToDoBlockObjectResponse = {\n  type: \"to_do\"\n  to_do: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    checked: boolean\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ToggleBlockObjectResponse = {\n  type: \"toggle\"\n  toggle: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type TemplateBlockObjectResponse = {\n  type: \"template\"\n  template: { rich_text: Array<RichTextItemResponse> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type SyncedBlockBlockObjectResponse = {\n  type: \"synced_block\"\n  synced_block: {\n    synced_from: { type: \"block_id\"; block_id: IdRequest } | null\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ChildPageBlockObjectResponse = {\n  type: \"child_page\"\n  child_page: { title: string }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ChildDatabaseBlockObjectResponse = {\n  type: \"child_database\"\n  child_database: { title: string }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type EquationBlockObjectResponse = {\n  type: \"equation\"\n  equation: { expression: string }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype LanguageRequest =\n  | \"abap\"\n  | \"agda\"\n  | \"arduino\"\n  | \"assembly\"\n  | \"bash\"\n  | \"basic\"\n  | \"bnf\"\n  | \"c\"\n  | \"c#\"\n  | \"c++\"\n  | \"clojure\"\n  | \"coffeescript\"\n  | \"coq\"\n  | \"css\"\n  | \"dart\"\n  | \"dhall\"\n  | \"diff\"\n  | \"docker\"\n  | \"ebnf\"\n  | \"elixir\"\n  | \"elm\"\n  | \"erlang\"\n  | \"f#\"\n  | \"flow\"\n  | \"fortran\"\n  | \"gherkin\"\n  | \"glsl\"\n  | \"go\"\n  | \"graphql\"\n  | \"groovy\"\n  | \"haskell\"\n  | \"html\"\n  | \"idris\"\n  | \"java\"\n  | \"javascript\"\n  | \"json\"\n  | \"julia\"\n  | \"kotlin\"\n  | \"latex\"\n  | \"less\"\n  | \"lisp\"\n  | \"livescript\"\n  | \"llvm ir\"\n  | \"lua\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"markup\"\n  | \"matlab\"\n  | \"mathematica\"\n  | \"mermaid\"\n  | \"nix\"\n  | \"notion formula\"\n  | \"objective-c\"\n  | \"ocaml\"\n  | \"pascal\"\n  | \"perl\"\n  | \"php\"\n  | \"plain text\"\n  | \"powershell\"\n  | \"prolog\"\n  | \"protobuf\"\n  | \"purescript\"\n  | \"python\"\n  | \"r\"\n  | \"racket\"\n  | \"reason\"\n  | \"ruby\"\n  | \"rust\"\n  | \"sass\"\n  | \"scala\"\n  | \"scheme\"\n  | \"scss\"\n  | \"shell\"\n  | \"solidity\"\n  | \"sql\"\n  | \"swift\"\n  | \"toml\"\n  | \"typescript\"\n  | \"vb.net\"\n  | \"verilog\"\n  | \"vhdl\"\n  | \"visual basic\"\n  | \"webassembly\"\n  | \"xml\"\n  | \"yaml\"\n  | \"java/c/c++/c#\"\n\nexport type CodeBlockObjectResponse = {\n  type: \"code\"\n  code: {\n    rich_text: Array<RichTextItemResponse>\n    caption: Array<RichTextItemResponse>\n    language: LanguageRequest\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type CalloutBlockObjectResponse = {\n  type: \"callout\"\n  callout: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    icon:\n      | { type: \"emoji\"; emoji: EmojiRequest }\n      | null\n      | { type: \"external\"; external: { url: TextRequest } }\n      | null\n      | { type: \"file\"; file: { url: string; expiry_time: string } }\n      | null\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type DividerBlockObjectResponse = {\n  type: \"divider\"\n  divider: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BreadcrumbBlockObjectResponse = {\n  type: \"breadcrumb\"\n  breadcrumb: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type TableOfContentsBlockObjectResponse = {\n  type: \"table_of_contents\"\n  table_of_contents: { color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ColumnListBlockObjectResponse = {\n  type: \"column_list\"\n  column_list: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ColumnBlockObjectResponse = {\n  type: \"column\"\n  column: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type LinkToPageBlockObjectResponse = {\n  type: \"link_to_page\"\n  link_to_page:\n    | { type: \"page_id\"; page_id: IdRequest }\n    | { type: \"database_id\"; database_id: IdRequest }\n    | { type: \"comment_id\"; comment_id: IdRequest }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type TableBlockObjectResponse = {\n  type: \"table\"\n  table: {\n    has_column_header: boolean\n    has_row_header: boolean\n    table_width: number\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type TableRowBlockObjectResponse = {\n  type: \"table_row\"\n  table_row: { cells: Array<Array<RichTextItemResponse>> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type EmbedBlockObjectResponse = {\n  type: \"embed\"\n  embed: { url: string; caption: Array<RichTextItemResponse> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BookmarkBlockObjectResponse = {\n  type: \"bookmark\"\n  bookmark: { url: string; caption: Array<RichTextItemResponse> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ImageBlockObjectResponse = {\n  type: \"image\"\n  image:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type VideoBlockObjectResponse = {\n  type: \"video\"\n  video:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type PdfBlockObjectResponse = {\n  type: \"pdf\"\n  pdf:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type FileBlockObjectResponse = {\n  type: \"file\"\n  file:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n        name: string\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n        name: string\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type AudioBlockObjectResponse = {\n  type: \"audio\"\n  audio:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type LinkPreviewBlockObjectResponse = {\n  type: \"link_preview\"\n  link_preview: { url: TextRequest }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type UnsupportedBlockObjectResponse = {\n  type: \"unsupported\"\n  unsupported: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BlockObjectResponse =\n  | ParagraphBlockObjectResponse\n  | Heading1BlockObjectResponse\n  | Heading2BlockObjectResponse\n  | Heading3BlockObjectResponse\n  | BulletedListItemBlockObjectResponse\n  | NumberedListItemBlockObjectResponse\n  | QuoteBlockObjectResponse\n  | ToDoBlockObjectResponse\n  | ToggleBlockObjectResponse\n  | TemplateBlockObjectResponse\n  | SyncedBlockBlockObjectResponse\n  | ChildPageBlockObjectResponse\n  | ChildDatabaseBlockObjectResponse\n  | EquationBlockObjectResponse\n  | CodeBlockObjectResponse\n  | CalloutBlockObjectResponse\n  | DividerBlockObjectResponse\n  | BreadcrumbBlockObjectResponse\n  | TableOfContentsBlockObjectResponse\n  | ColumnListBlockObjectResponse\n  | ColumnBlockObjectResponse\n  | LinkToPageBlockObjectResponse\n  | TableBlockObjectResponse\n  | TableRowBlockObjectResponse\n  | EmbedBlockObjectResponse\n  | BookmarkBlockObjectResponse\n  | ImageBlockObjectResponse\n  | VideoBlockObjectResponse\n  | PdfBlockObjectResponse\n  | FileBlockObjectResponse\n  | AudioBlockObjectResponse\n  | LinkPreviewBlockObjectResponse\n  | UnsupportedBlockObjectResponse\n\nexport type NumberPropertyItemObjectResponse = {\n  type: \"number\"\n  number: number | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type UrlPropertyItemObjectResponse = {\n  type: \"url\"\n  url: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type SelectPropertyItemObjectResponse = {\n  type: \"select\"\n  select: PartialSelectResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type MultiSelectPropertyItemObjectResponse = {\n  type: \"multi_select\"\n  multi_select: Array<PartialSelectResponse>\n  object: \"property_item\"\n  id: string\n}\n\nexport type StatusPropertyItemObjectResponse = {\n  type: \"status\"\n  status: PartialSelectResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type DatePropertyItemObjectResponse = {\n  type: \"date\"\n  date: DateResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type EmailPropertyItemObjectResponse = {\n  type: \"email\"\n  email: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type PhoneNumberPropertyItemObjectResponse = {\n  type: \"phone_number\"\n  phone_number: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type CheckboxPropertyItemObjectResponse = {\n  type: \"checkbox\"\n  checkbox: boolean\n  object: \"property_item\"\n  id: string\n}\n\nexport type FilesPropertyItemObjectResponse = {\n  type: \"files\"\n  files: Array<\n    | {\n        file: { url: string; expiry_time: string }\n        name: StringRequest\n        type?: \"file\"\n      }\n    | { external: { url: TextRequest }; name: StringRequest; type?: \"external\" }\n  >\n  object: \"property_item\"\n  id: string\n}\n\nexport type CreatedByPropertyItemObjectResponse = {\n  type: \"created_by\"\n  created_by: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type CreatedTimePropertyItemObjectResponse = {\n  type: \"created_time\"\n  created_time: string\n  object: \"property_item\"\n  id: string\n}\n\nexport type LastEditedByPropertyItemObjectResponse = {\n  type: \"last_edited_by\"\n  last_edited_by: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type LastEditedTimePropertyItemObjectResponse = {\n  type: \"last_edited_time\"\n  last_edited_time: string\n  object: \"property_item\"\n  id: string\n}\n\nexport type FormulaPropertyItemObjectResponse = {\n  type: \"formula\"\n  formula: FormulaPropertyResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type ButtonPropertyItemObjectResponse = {\n  type: \"button\"\n  button: Record<string, never>\n  object: \"property_item\"\n  id: string\n}\n\nexport type UniqueIdPropertyItemObjectResponse = {\n  type: \"unique_id\"\n  unique_id: { prefix: string | null; number: number | null }\n  object: \"property_item\"\n  id: string\n}\n\nexport type VerificationPropertyItemObjectResponse = {\n  type: \"verification\"\n  verification:\n    | VerificationPropertyUnverifiedResponse\n    | null\n    | VerificationPropertyResponse\n    | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type TitlePropertyItemObjectResponse = {\n  type: \"title\"\n  title: RichTextItemResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type RichTextPropertyItemObjectResponse = {\n  type: \"rich_text\"\n  rich_text: RichTextItemResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type PeoplePropertyItemObjectResponse = {\n  type: \"people\"\n  people: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type RelationPropertyItemObjectResponse = {\n  type: \"relation\"\n  relation: { id: string }\n  object: \"property_item\"\n  id: string\n}\n\nexport type RollupPropertyItemObjectResponse = {\n  type: \"rollup\"\n  rollup:\n    | { type: \"number\"; number: number | null; function: RollupFunction }\n    | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n    | { type: \"array\"; array: Array<EmptyObject>; function: RollupFunction }\n    | {\n        type: \"unsupported\"\n        unsupported: EmptyObject\n        function: RollupFunction\n      }\n    | { type: \"incomplete\"; incomplete: EmptyObject; function: RollupFunction }\n  object: \"property_item\"\n  id: string\n}\n\nexport type PropertyItemObjectResponse =\n  | NumberPropertyItemObjectResponse\n  | UrlPropertyItemObjectResponse\n  | SelectPropertyItemObjectResponse\n  | MultiSelectPropertyItemObjectResponse\n  | StatusPropertyItemObjectResponse\n  | DatePropertyItemObjectResponse\n  | EmailPropertyItemObjectResponse\n  | PhoneNumberPropertyItemObjectResponse\n  | CheckboxPropertyItemObjectResponse\n  | FilesPropertyItemObjectResponse\n  | CreatedByPropertyItemObjectResponse\n  | CreatedTimePropertyItemObjectResponse\n  | LastEditedByPropertyItemObjectResponse\n  | LastEditedTimePropertyItemObjectResponse\n  | FormulaPropertyItemObjectResponse\n  | ButtonPropertyItemObjectResponse\n  | UniqueIdPropertyItemObjectResponse\n  | VerificationPropertyItemObjectResponse\n  | TitlePropertyItemObjectResponse\n  | RichTextPropertyItemObjectResponse\n  | PeoplePropertyItemObjectResponse\n  | RelationPropertyItemObjectResponse\n  | RollupPropertyItemObjectResponse\n\nexport type CommentObjectResponse = {\n  object: \"comment\"\n  id: string\n  parent:\n    | { type: \"page_id\"; page_id: IdRequest }\n    | { type: \"block_id\"; block_id: IdRequest }\n  discussion_id: string\n  rich_text: Array<RichTextItemResponse>\n  created_by: PartialUserObjectResponse\n  created_time: string\n  last_edited_time: string\n}\n\nexport type PartialCommentObjectResponse = { object: \"comment\"; id: string }\n\nexport type PropertyItemPropertyItemListResponse = {\n  type: \"property_item\"\n  property_item:\n    | { type: \"title\"; title: EmptyObject; next_url: string | null; id: string }\n    | {\n        type: \"rich_text\"\n        rich_text: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"people\"\n        people: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"relation\"\n        relation: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"rollup\"\n        rollup:\n          | { type: \"number\"; number: number | null; function: RollupFunction }\n          | {\n              type: \"date\"\n              date: DateResponse | null\n              function: RollupFunction\n            }\n          | {\n              type: \"array\"\n              array: Array<EmptyObject>\n              function: RollupFunction\n            }\n          | {\n              type: \"unsupported\"\n              unsupported: EmptyObject\n              function: RollupFunction\n            }\n          | {\n              type: \"incomplete\"\n              incomplete: EmptyObject\n              function: RollupFunction\n            }\n        next_url: string | null\n        id: string\n      }\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PropertyItemObjectResponse>\n}\n\nexport type PropertyItemListResponse = PropertyItemPropertyItemListResponse\n\ntype DateRequest = {\n  start: string\n  end?: string | null\n  time_zone?: TimeZoneRequest | null\n}\n\ntype TemplateMentionRequest =\n  | { template_mention_date: \"today\" | \"now\"; type?: \"template_mention_date\" }\n  | { template_mention_user: \"me\"; type?: \"template_mention_user\" }\n\ntype RichTextItemRequest =\n  | {\n      text: { content: string; link?: { url: TextRequest } | null }\n      type?: \"text\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n  | {\n      mention:\n        | {\n            user:\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | PartialUserObjectResponse\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                        workspace_name: string | null\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n          }\n        | { date: DateRequest }\n        | { page: { id: IdRequest } }\n        | { database: { id: IdRequest } }\n        | { template_mention: TemplateMentionRequest }\n      type?: \"mention\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n  | {\n      equation: { expression: TextRequest }\n      type?: \"equation\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n\nexport type BlockObjectRequestWithoutChildren =\n  | {\n      embed: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n        name?: StringRequest\n      }\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | { equation: { expression: string }; type?: \"equation\"; object?: \"block\" }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        checked?: boolean\n        color?: ApiColor\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: { rich_text: Array<RichTextItemRequest> }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n        color?: ApiColor\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\nexport type BlockObjectRequest =\n  | {\n      embed: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n        name?: StringRequest\n      }\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | { equation: { expression: string }; type?: \"equation\"; object?: \"block\" }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      table: {\n        table_width: number\n        children: Array<{\n          table_row: { cells: Array<Array<RichTextItemRequest>> }\n          type?: \"table_row\"\n          object?: \"block\"\n        }>\n        has_column_header?: boolean\n        has_row_header?: boolean\n      }\n      type?: \"table\"\n      object?: \"block\"\n    }\n  | {\n      column_list: {\n        children: Array<{\n          column: {\n            children: Array<\n              | {\n                  embed: { url: string; caption?: Array<RichTextItemRequest> }\n                  type?: \"embed\"\n                  object?: \"block\"\n                }\n              | {\n                  bookmark: {\n                    url: string\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"bookmark\"\n                  object?: \"block\"\n                }\n              | {\n                  image: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"image\"\n                  object?: \"block\"\n                }\n              | {\n                  video: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"video\"\n                  object?: \"block\"\n                }\n              | {\n                  pdf: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"pdf\"\n                  object?: \"block\"\n                }\n              | {\n                  file: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                    name?: StringRequest\n                  }\n                  type?: \"file\"\n                  object?: \"block\"\n                }\n              | {\n                  audio: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"audio\"\n                  object?: \"block\"\n                }\n              | {\n                  code: {\n                    rich_text: Array<RichTextItemRequest>\n                    language: LanguageRequest\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"code\"\n                  object?: \"block\"\n                }\n              | {\n                  equation: { expression: string }\n                  type?: \"equation\"\n                  object?: \"block\"\n                }\n              | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n              | {\n                  breadcrumb: EmptyObject\n                  type?: \"breadcrumb\"\n                  object?: \"block\"\n                }\n              | {\n                  table_of_contents: { color?: ApiColor }\n                  type?: \"table_of_contents\"\n                  object?: \"block\"\n                }\n              | {\n                  link_to_page:\n                    | { page_id: IdRequest; type?: \"page_id\" }\n                    | { database_id: IdRequest; type?: \"database_id\" }\n                    | { comment_id: IdRequest; type?: \"comment_id\" }\n                  type?: \"link_to_page\"\n                  object?: \"block\"\n                }\n              | {\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_1: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    is_toggleable?: boolean\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_1\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_2: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    is_toggleable?: boolean\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_2\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_3: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    is_toggleable?: boolean\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_3\"\n                  object?: \"block\"\n                }\n              | {\n                  paragraph: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"paragraph\"\n                  object?: \"block\"\n                }\n              | {\n                  bulleted_list_item: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"bulleted_list_item\"\n                  object?: \"block\"\n                }\n              | {\n                  numbered_list_item: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"numbered_list_item\"\n                  object?: \"block\"\n                }\n              | {\n                  quote: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"quote\"\n                  object?: \"block\"\n                }\n              | {\n                  table: {\n                    table_width: number\n                    children: Array<{\n                      table_row: { cells: Array<Array<RichTextItemRequest>> }\n                      type?: \"table_row\"\n                      object?: \"block\"\n                    }>\n                    has_column_header?: boolean\n                    has_row_header?: boolean\n                  }\n                  type?: \"table\"\n                  object?: \"block\"\n                }\n              | {\n                  to_do: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                    checked?: boolean\n                  }\n                  type?: \"to_do\"\n                  object?: \"block\"\n                }\n              | {\n                  toggle: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"toggle\"\n                  object?: \"block\"\n                }\n              | {\n                  template: {\n                    rich_text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"template\"\n                  object?: \"block\"\n                }\n              | {\n                  callout: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                    icon?:\n                      | { emoji: EmojiRequest; type?: \"emoji\" }\n                      | { external: { url: TextRequest }; type?: \"external\" }\n                  }\n                  type?: \"callout\"\n                  object?: \"block\"\n                }\n              | {\n                  synced_block: {\n                    synced_from: {\n                      block_id: IdRequest\n                      type?: \"block_id\"\n                    } | null\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"synced_block\"\n                  object?: \"block\"\n                }\n            >\n          }\n          type?: \"column\"\n          object?: \"block\"\n        }>\n      }\n      type?: \"column_list\"\n      object?: \"block\"\n    }\n  | {\n      column: {\n        children: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"column\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n        checked?: boolean\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: {\n        rich_text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n                name?: StringRequest\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              table: {\n                table_width: number\n                children: Array<{\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }>\n                has_column_header?: boolean\n                has_row_header?: boolean\n              }\n              type?: \"table\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype ExistencePropertyFilter = { is_empty: true } | { is_not_empty: true }\n\ntype TextPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | { contains: string }\n  | { does_not_contain: string }\n  | { starts_with: string }\n  | { ends_with: string }\n  | ExistencePropertyFilter\n\ntype NumberPropertyFilter =\n  | { equals: number }\n  | { does_not_equal: number }\n  | { greater_than: number }\n  | { less_than: number }\n  | { greater_than_or_equal_to: number }\n  | { less_than_or_equal_to: number }\n  | ExistencePropertyFilter\n\ntype CheckboxPropertyFilter = { equals: boolean } | { does_not_equal: boolean }\n\ntype SelectPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | ExistencePropertyFilter\n\ntype MultiSelectPropertyFilter =\n  | { contains: string }\n  | { does_not_contain: string }\n  | ExistencePropertyFilter\n\ntype StatusPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | ExistencePropertyFilter\n\ntype DatePropertyFilter =\n  | { equals: string }\n  | { before: string }\n  | { after: string }\n  | { on_or_before: string }\n  | { on_or_after: string }\n  | { this_week: EmptyObject }\n  | { past_week: EmptyObject }\n  | { past_month: EmptyObject }\n  | { past_year: EmptyObject }\n  | { next_week: EmptyObject }\n  | { next_month: EmptyObject }\n  | { next_year: EmptyObject }\n  | ExistencePropertyFilter\n\ntype PeoplePropertyFilter =\n  | { contains: IdRequest }\n  | { does_not_contain: IdRequest }\n  | ExistencePropertyFilter\n\ntype RelationPropertyFilter =\n  | { contains: IdRequest }\n  | { does_not_contain: IdRequest }\n  | ExistencePropertyFilter\n\ntype FormulaPropertyFilter =\n  | { string: TextPropertyFilter }\n  | { checkbox: CheckboxPropertyFilter }\n  | { number: NumberPropertyFilter }\n  | { date: DatePropertyFilter }\n\ntype RollupSubfilterPropertyFilter =\n  | { rich_text: TextPropertyFilter }\n  | { number: NumberPropertyFilter }\n  | { checkbox: CheckboxPropertyFilter }\n  | { select: SelectPropertyFilter }\n  | { multi_select: MultiSelectPropertyFilter }\n  | { relation: RelationPropertyFilter }\n  | { date: DatePropertyFilter }\n  | { people: PeoplePropertyFilter }\n  | { files: ExistencePropertyFilter }\n  | { status: StatusPropertyFilter }\n\ntype RollupPropertyFilter =\n  | { any: RollupSubfilterPropertyFilter }\n  | { none: RollupSubfilterPropertyFilter }\n  | { every: RollupSubfilterPropertyFilter }\n  | { date: DatePropertyFilter }\n  | { number: NumberPropertyFilter }\n\ntype PropertyFilter =\n  | { title: TextPropertyFilter; property: string; type?: \"title\" }\n  | { rich_text: TextPropertyFilter; property: string; type?: \"rich_text\" }\n  | { number: NumberPropertyFilter; property: string; type?: \"number\" }\n  | { checkbox: CheckboxPropertyFilter; property: string; type?: \"checkbox\" }\n  | { select: SelectPropertyFilter; property: string; type?: \"select\" }\n  | {\n      multi_select: MultiSelectPropertyFilter\n      property: string\n      type?: \"multi_select\"\n    }\n  | { status: StatusPropertyFilter; property: string; type?: \"status\" }\n  | { date: DatePropertyFilter; property: string; type?: \"date\" }\n  | { people: PeoplePropertyFilter; property: string; type?: \"people\" }\n  | { files: ExistencePropertyFilter; property: string; type?: \"files\" }\n  | { url: TextPropertyFilter; property: string; type?: \"url\" }\n  | { email: TextPropertyFilter; property: string; type?: \"email\" }\n  | {\n      phone_number: TextPropertyFilter\n      property: string\n      type?: \"phone_number\"\n    }\n  | { relation: RelationPropertyFilter; property: string; type?: \"relation\" }\n  | { created_by: PeoplePropertyFilter; property: string; type?: \"created_by\" }\n  | {\n      created_time: DatePropertyFilter\n      property: string\n      type?: \"created_time\"\n    }\n  | {\n      last_edited_by: PeoplePropertyFilter\n      property: string\n      type?: \"last_edited_by\"\n    }\n  | {\n      last_edited_time: DatePropertyFilter\n      property: string\n      type?: \"last_edited_time\"\n    }\n  | { formula: FormulaPropertyFilter; property: string; type?: \"formula\" }\n  | { unique_id: NumberPropertyFilter; property: string; type?: \"unique_id\" }\n  | { rollup: RollupPropertyFilter; property: string; type?: \"rollup\" }\n\ntype TimestampCreatedTimeFilter = {\n  created_time: DatePropertyFilter\n  timestamp: \"created_time\"\n  type?: \"created_time\"\n}\n\ntype TimestampLastEditedTimeFilter = {\n  last_edited_time: DatePropertyFilter\n  timestamp: \"last_edited_time\"\n  type?: \"last_edited_time\"\n}\nexport type GetSelfParameters = Record<string, never>\n\nexport type GetSelfResponse = UserObjectResponse\n\nexport const getSelf = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [],\n  path: (): string => `users/me`,\n} as const\n\ntype GetUserPathParameters = {\n  user_id: IdRequest\n}\n\nexport type GetUserParameters = GetUserPathParameters\n\nexport type GetUserResponse = UserObjectResponse\n\nexport const getUser = {\n  method: \"get\",\n  pathParams: [\"user_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetUserPathParameters): string => `users/${p.user_id}`,\n} as const\n\ntype ListUsersQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListUsersParameters = ListUsersQueryParameters\n\nexport type ListUsersResponse = {\n  type: \"user\"\n  user: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<UserObjectResponse>\n}\n\nexport const listUsers = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `users`,\n} as const\n\ntype CreatePageBodyParameters = {\n  parent:\n    | { page_id: IdRequest; type?: \"page_id\" }\n    | { database_id: IdRequest; type?: \"database_id\" }\n  properties:\n    | Record<\n        string,\n        | { title: Array<RichTextItemRequest>; type?: \"title\" }\n        | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n        | { number: number | null; type?: \"number\" }\n        | { url: TextRequest | null; type?: \"url\" }\n        | {\n            select:\n              | {\n                  id: StringRequest\n                  name?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n              | {\n                  name: StringRequest\n                  id?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n            type?: \"select\"\n          }\n        | {\n            multi_select: Array<\n              | {\n                  id: StringRequest\n                  name?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | {\n                  name: StringRequest\n                  id?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n            >\n            type?: \"multi_select\"\n          }\n        | {\n            people: Array<\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | PartialUserObjectResponse\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                        workspace_name: string | null\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n            >\n            type?: \"people\"\n          }\n        | { email: StringRequest | null; type?: \"email\" }\n        | { phone_number: StringRequest | null; type?: \"phone_number\" }\n        | { date: DateRequest | null; type?: \"date\" }\n        | { checkbox: boolean; type?: \"checkbox\" }\n        | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n        | {\n            files: Array<\n              | {\n                  file: { url: string; expiry_time?: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            type?: \"files\"\n          }\n        | {\n            status:\n              | {\n                  id: StringRequest\n                  name?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n              | {\n                  name: StringRequest\n                  id?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n            type?: \"status\"\n          }\n      >\n    | Record<\n        string,\n        | Array<RichTextItemRequest>\n        | Array<RichTextItemRequest>\n        | number\n        | null\n        | TextRequest\n        | null\n        | {\n            id: StringRequest\n            name?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n        | {\n            name: StringRequest\n            id?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n        | Array<\n            | {\n                id: StringRequest\n                name?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n            | {\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n          >\n        | Array<\n            | { id: IdRequest }\n            | {\n                person: { email?: string }\n                id: IdRequest\n                type?: \"person\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n            | {\n                bot:\n                  | EmptyObject\n                  | {\n                      owner:\n                        | {\n                            type: \"user\"\n                            user:\n                              | {\n                                  type: \"person\"\n                                  person: { email: string }\n                                  name: string | null\n                                  avatar_url: string | null\n                                  id: IdRequest\n                                  object: \"user\"\n                                }\n                              | PartialUserObjectResponse\n                          }\n                        | { type: \"workspace\"; workspace: true }\n                      workspace_name: string | null\n                    }\n                id: IdRequest\n                type?: \"bot\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n          >\n        | StringRequest\n        | null\n        | StringRequest\n        | null\n        | DateRequest\n        | null\n        | boolean\n        | Array<{ id: IdRequest }>\n        | Array<\n            | {\n                file: { url: string; expiry_time?: string }\n                name: StringRequest\n                type?: \"file\"\n              }\n            | {\n                external: { url: TextRequest }\n                name: StringRequest\n                type?: \"external\"\n              }\n          >\n        | {\n            id: StringRequest\n            name?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n        | {\n            name: StringRequest\n            id?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n      >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  content?: Array<BlockObjectRequest>\n  children?: Array<BlockObjectRequest>\n}\n\nexport type CreatePageParameters = CreatePageBodyParameters\n\nexport type CreatePageResponse = PageObjectResponse | PartialPageObjectResponse\n\nexport const createPage = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n  path: (): string => `pages`,\n} as const\n\ntype GetPagePathParameters = {\n  page_id: IdRequest\n}\n\ntype GetPageQueryParameters = {\n  filter_properties?: Array<string>\n}\n\nexport type GetPageParameters = GetPagePathParameters & GetPageQueryParameters\n\nexport type GetPageResponse = PageObjectResponse | PartialPageObjectResponse\n\nexport const getPage = {\n  method: \"get\",\n  pathParams: [\"page_id\"],\n  queryParams: [\"filter_properties\"],\n  bodyParams: [],\n  path: (p: GetPagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype UpdatePagePathParameters = {\n  page_id: IdRequest\n}\n\ntype UpdatePageBodyParameters = {\n  properties?:\n    | Record<\n        string,\n        | { title: Array<RichTextItemRequest>; type?: \"title\" }\n        | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n        | { number: number | null; type?: \"number\" }\n        | { url: TextRequest | null; type?: \"url\" }\n        | {\n            select:\n              | {\n                  id: StringRequest\n                  name?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n              | {\n                  name: StringRequest\n                  id?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n            type?: \"select\"\n          }\n        | {\n            multi_select: Array<\n              | {\n                  id: StringRequest\n                  name?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | {\n                  name: StringRequest\n                  id?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n            >\n            type?: \"multi_select\"\n          }\n        | {\n            people: Array<\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | PartialUserObjectResponse\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                        workspace_name: string | null\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n            >\n            type?: \"people\"\n          }\n        | { email: StringRequest | null; type?: \"email\" }\n        | { phone_number: StringRequest | null; type?: \"phone_number\" }\n        | { date: DateRequest | null; type?: \"date\" }\n        | { checkbox: boolean; type?: \"checkbox\" }\n        | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n        | {\n            files: Array<\n              | {\n                  file: { url: string; expiry_time?: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            type?: \"files\"\n          }\n        | {\n            status:\n              | {\n                  id: StringRequest\n                  name?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n              | {\n                  name: StringRequest\n                  id?: StringRequest\n                  color?: SelectColor\n                  description?: StringRequest | null\n                }\n              | null\n            type?: \"status\"\n          }\n      >\n    | Record<\n        string,\n        | Array<RichTextItemRequest>\n        | Array<RichTextItemRequest>\n        | number\n        | null\n        | TextRequest\n        | null\n        | {\n            id: StringRequest\n            name?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n        | {\n            name: StringRequest\n            id?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n        | Array<\n            | {\n                id: StringRequest\n                name?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n            | {\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n          >\n        | Array<\n            | { id: IdRequest }\n            | {\n                person: { email?: string }\n                id: IdRequest\n                type?: \"person\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n            | {\n                bot:\n                  | EmptyObject\n                  | {\n                      owner:\n                        | {\n                            type: \"user\"\n                            user:\n                              | {\n                                  type: \"person\"\n                                  person: { email: string }\n                                  name: string | null\n                                  avatar_url: string | null\n                                  id: IdRequest\n                                  object: \"user\"\n                                }\n                              | PartialUserObjectResponse\n                          }\n                        | { type: \"workspace\"; workspace: true }\n                      workspace_name: string | null\n                    }\n                id: IdRequest\n                type?: \"bot\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n          >\n        | StringRequest\n        | null\n        | StringRequest\n        | null\n        | DateRequest\n        | null\n        | boolean\n        | Array<{ id: IdRequest }>\n        | Array<\n            | {\n                file: { url: string; expiry_time?: string }\n                name: StringRequest\n                type?: \"file\"\n              }\n            | {\n                external: { url: TextRequest }\n                name: StringRequest\n                type?: \"external\"\n              }\n          >\n        | {\n            id: StringRequest\n            name?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n        | {\n            name: StringRequest\n            id?: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }\n        | null\n      >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  archived?: boolean\n  in_trash?: boolean\n}\n\nexport type UpdatePageParameters = UpdatePagePathParameters &\n  UpdatePageBodyParameters\n\nexport type UpdatePageResponse = PageObjectResponse | PartialPageObjectResponse\n\nexport const updatePage = {\n  method: \"patch\",\n  pathParams: [\"page_id\"],\n  queryParams: [],\n  bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\", \"in_trash\"],\n  path: (p: UpdatePagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype GetPagePropertyPathParameters = {\n  page_id: IdRequest\n  property_id: string\n}\n\ntype GetPagePropertyQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type GetPagePropertyParameters = GetPagePropertyPathParameters &\n  GetPagePropertyQueryParameters\n\nexport type GetPagePropertyResponse =\n  | PropertyItemObjectResponse\n  | PropertyItemListResponse\n\nexport const getPageProperty = {\n  method: \"get\",\n  pathParams: [\"page_id\", \"property_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (p: GetPagePropertyPathParameters): string =>\n    `pages/${p.page_id}/properties/${p.property_id}`,\n} as const\n\ntype GetBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type GetBlockParameters = GetBlockPathParameters\n\nexport type GetBlockResponse = PartialBlockObjectResponse | BlockObjectResponse\n\nexport const getBlock = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype UpdateBlockPathParameters = {\n  block_id: IdRequest\n}\n\ntype UpdateBlockBodyParameters =\n  | {\n      embed: { url?: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      bookmark: { url?: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      image: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"image\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      video: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"video\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      pdf: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"pdf\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      file: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n        name?: StringRequest\n      }\n      type?: \"file\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      audio: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"audio\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      code: {\n        rich_text?: Array<RichTextItemRequest>\n        language?: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      equation: { expression: string }\n      type?: \"equation\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      divider: EmptyObject\n      type?: \"divider\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      breadcrumb: EmptyObject\n      type?: \"breadcrumb\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_1\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_2\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_3\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      paragraph: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"paragraph\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"bulleted_list_item\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"numbered_list_item\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      quote: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"quote\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      to_do: {\n        rich_text?: Array<RichTextItemRequest>\n        checked?: boolean\n        color?: ApiColor\n      }\n      type?: \"to_do\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      toggle: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"toggle\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      template: { rich_text: Array<RichTextItemRequest> }\n      type?: \"template\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      callout: {\n        rich_text?: Array<RichTextItemRequest>\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n        color?: ApiColor\n      }\n      type?: \"callout\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      table: { has_column_header?: boolean; has_row_header?: boolean }\n      type?: \"table\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | { archived?: boolean; in_trash?: boolean }\n\nexport type UpdateBlockParameters = UpdateBlockPathParameters &\n  UpdateBlockBodyParameters\n\nexport type UpdateBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\nexport const updateBlock = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"embed\",\n    \"type\",\n    \"archived\",\n    \"in_trash\",\n    \"bookmark\",\n    \"image\",\n    \"video\",\n    \"pdf\",\n    \"file\",\n    \"audio\",\n    \"code\",\n    \"equation\",\n    \"divider\",\n    \"breadcrumb\",\n    \"table_of_contents\",\n    \"link_to_page\",\n    \"table_row\",\n    \"heading_1\",\n    \"heading_2\",\n    \"heading_3\",\n    \"paragraph\",\n    \"bulleted_list_item\",\n    \"numbered_list_item\",\n    \"quote\",\n    \"to_do\",\n    \"toggle\",\n    \"template\",\n    \"callout\",\n    \"synced_block\",\n    \"table\",\n  ],\n  path: (p: UpdateBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype DeleteBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type DeleteBlockParameters = DeleteBlockPathParameters\n\nexport type DeleteBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\nexport const deleteBlock = {\n  method: \"delete\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: DeleteBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype ListBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype ListBlockChildrenQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListBlockChildrenParameters = ListBlockChildrenPathParameters &\n  ListBlockChildrenQueryParameters\n\nexport type ListBlockChildrenResponse = {\n  type: \"block\"\n  block: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n}\n\nexport const listBlockChildren = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (p: ListBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype AppendBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype AppendBlockChildrenBodyParameters = {\n  children: Array<BlockObjectRequest>\n  after?: IdRequest\n}\n\nexport type AppendBlockChildrenParameters = AppendBlockChildrenPathParameters &\n  AppendBlockChildrenBodyParameters\n\nexport type AppendBlockChildrenResponse = {\n  type: \"block\"\n  block: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n}\n\nexport const appendBlockChildren = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\"children\", \"after\"],\n  path: (p: AppendBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype GetDatabasePathParameters = {\n  database_id: IdRequest\n}\n\nexport type GetDatabaseParameters = GetDatabasePathParameters\n\nexport type GetDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\nexport const getDatabase = {\n  method: \"get\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetDatabasePathParameters): string => `databases/${p.database_id}`,\n} as const\n\ntype UpdateDatabasePathParameters = {\n  database_id: IdRequest\n}\n\ntype UpdateDatabaseBodyParameters = {\n  title?: Array<RichTextItemRequest>\n  description?: Array<RichTextItemRequest>\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  properties?: Record<\n    string,\n    | {\n        number: { format?: NumberFormat }\n        type?: \"number\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        formula: { expression?: string }\n        type?: \"formula\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        select: {\n          options?: Array<\n            | {\n                id: StringRequest\n                name?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n            | {\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n          >\n        }\n        type?: \"select\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        multi_select: {\n          options?: Array<\n            | {\n                id: StringRequest\n                name?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n            | {\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n                description?: StringRequest | null\n              }\n          >\n        }\n        type?: \"multi_select\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        relation:\n          | {\n              single_property: EmptyObject\n              database_id: IdRequest\n              type?: \"single_property\"\n            }\n          | {\n              dual_property: Record<string, never>\n              database_id: IdRequest\n              type?: \"dual_property\"\n            }\n        type?: \"relation\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        rollup:\n          | {\n              rollup_property_name: string\n              relation_property_name: string\n              function: RollupFunction\n              rollup_property_id?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_name: string\n              relation_property_id: string\n              function: RollupFunction\n              relation_property_name?: string\n              rollup_property_id?: string\n            }\n          | {\n              relation_property_name: string\n              rollup_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_name?: string\n            }\n        type?: \"rollup\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        unique_id: { prefix?: string | null }\n        type?: \"unique_id\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        title: EmptyObject\n        type?: \"title\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        rich_text: EmptyObject\n        type?: \"rich_text\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        url: EmptyObject\n        type?: \"url\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        people: EmptyObject\n        type?: \"people\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        files: EmptyObject\n        type?: \"files\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        email: EmptyObject\n        type?: \"email\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        phone_number: EmptyObject\n        type?: \"phone_number\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        date: EmptyObject\n        type?: \"date\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        checkbox: EmptyObject\n        type?: \"checkbox\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        created_by: EmptyObject\n        type?: \"created_by\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        created_time: EmptyObject\n        type?: \"created_time\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        last_edited_by: EmptyObject\n        type?: \"last_edited_by\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | {\n        last_edited_time: EmptyObject\n        type?: \"last_edited_time\"\n        name?: string\n        description?: PropertyDescriptionRequest | null\n      }\n    | null\n    | { name: string }\n    | null\n  >\n  is_inline?: boolean\n  archived?: boolean\n  in_trash?: boolean\n}\n\nexport type UpdateDatabaseParameters = UpdateDatabasePathParameters &\n  UpdateDatabaseBodyParameters\n\nexport type UpdateDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\nexport const updateDatabase = {\n  method: \"patch\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"title\",\n    \"description\",\n    \"icon\",\n    \"cover\",\n    \"properties\",\n    \"is_inline\",\n    \"archived\",\n    \"in_trash\",\n  ],\n  path: (p: UpdateDatabasePathParameters): string =>\n    `databases/${p.database_id}`,\n} as const\n\ntype QueryDatabasePathParameters = {\n  database_id: IdRequest\n}\n\ntype QueryDatabaseQueryParameters = {\n  filter_properties?: Array<string>\n}\n\ntype QueryDatabaseBodyParameters = {\n  sorts?: Array<\n    | { property: string; direction: \"ascending\" | \"descending\" }\n    | {\n        timestamp: \"created_time\" | \"last_edited_time\"\n        direction: \"ascending\" | \"descending\"\n      }\n  >\n  filter?:\n    | {\n        or: Array<\n          | PropertyFilter\n          | TimestampCreatedTimeFilter\n          | TimestampLastEditedTimeFilter\n          | { or: Array<PropertyFilter> }\n          | { and: Array<PropertyFilter> }\n        >\n      }\n    | {\n        and: Array<\n          | PropertyFilter\n          | TimestampCreatedTimeFilter\n          | TimestampLastEditedTimeFilter\n          | { or: Array<PropertyFilter> }\n          | { and: Array<PropertyFilter> }\n        >\n      }\n    | PropertyFilter\n    | TimestampCreatedTimeFilter\n    | TimestampLastEditedTimeFilter\n  start_cursor?: string\n  page_size?: number\n  archived?: boolean\n  in_trash?: boolean\n}\n\nexport type QueryDatabaseParameters = QueryDatabasePathParameters &\n  QueryDatabaseQueryParameters &\n  QueryDatabaseBodyParameters\n\nexport type QueryDatabaseResponse = {\n  type: \"page_or_database\"\n  page_or_database: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | PartialDatabaseObjectResponse\n    | DatabaseObjectResponse\n  >\n}\n\nexport const queryDatabase = {\n  method: \"post\",\n  pathParams: [\"database_id\"],\n  queryParams: [\"filter_properties\"],\n  bodyParams: [\n    \"sorts\",\n    \"filter\",\n    \"start_cursor\",\n    \"page_size\",\n    \"archived\",\n    \"in_trash\",\n  ],\n  path: (p: QueryDatabasePathParameters): string =>\n    `databases/${p.database_id}/query`,\n} as const\n\ntype ListDatabasesQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListDatabasesParameters = ListDatabasesQueryParameters\n\nexport type ListDatabasesResponse = {\n  type: \"database\"\n  database: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialDatabaseObjectResponse | DatabaseObjectResponse>\n}\n\nexport const listDatabases = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `databases`,\n} as const\n\ntype CreateDatabaseBodyParameters = {\n  parent:\n    | { page_id: IdRequest; type?: \"page_id\" }\n    | { database_id: IdRequest; type?: \"database_id\" }\n  properties: Record<\n    string,\n    | {\n        number: { format?: NumberFormat }\n        type?: \"number\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        formula: { expression?: string }\n        type?: \"formula\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        select: {\n          options?: Array<{\n            name: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }>\n        }\n        type?: \"select\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        multi_select: {\n          options?: Array<{\n            name: StringRequest\n            color?: SelectColor\n            description?: StringRequest | null\n          }>\n        }\n        type?: \"multi_select\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        relation:\n          | {\n              single_property: EmptyObject\n              database_id: IdRequest\n              type?: \"single_property\"\n            }\n          | {\n              dual_property: Record<string, never>\n              database_id: IdRequest\n              type?: \"dual_property\"\n            }\n        type?: \"relation\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        rollup:\n          | {\n              rollup_property_name: string\n              relation_property_name: string\n              function: RollupFunction\n              rollup_property_id?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_name: string\n              relation_property_id: string\n              function: RollupFunction\n              relation_property_name?: string\n              rollup_property_id?: string\n            }\n          | {\n              relation_property_name: string\n              rollup_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_name?: string\n            }\n        type?: \"rollup\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        unique_id: { prefix?: string | null }\n        type?: \"unique_id\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        title: EmptyObject\n        type?: \"title\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        rich_text: EmptyObject\n        type?: \"rich_text\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        url: EmptyObject\n        type?: \"url\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        people: EmptyObject\n        type?: \"people\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        files: EmptyObject\n        type?: \"files\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        email: EmptyObject\n        type?: \"email\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        phone_number: EmptyObject\n        type?: \"phone_number\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        date: EmptyObject\n        type?: \"date\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        checkbox: EmptyObject\n        type?: \"checkbox\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        created_by: EmptyObject\n        type?: \"created_by\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        created_time: EmptyObject\n        type?: \"created_time\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        last_edited_by: EmptyObject\n        type?: \"last_edited_by\"\n        description?: PropertyDescriptionRequest | null\n      }\n    | {\n        last_edited_time: EmptyObject\n        type?: \"last_edited_time\"\n        description?: PropertyDescriptionRequest | null\n      }\n  >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  title?: Array<RichTextItemRequest>\n  description?: Array<RichTextItemRequest>\n  is_inline?: boolean\n}\n\nexport type CreateDatabaseParameters = CreateDatabaseBodyParameters\n\nexport type CreateDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\nexport const createDatabase = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    \"parent\",\n    \"properties\",\n    \"icon\",\n    \"cover\",\n    \"title\",\n    \"description\",\n    \"is_inline\",\n  ],\n  path: (): string => `databases`,\n} as const\n\ntype SearchBodyParameters = {\n  sort?: {\n    timestamp: \"last_edited_time\"\n    direction: \"ascending\" | \"descending\"\n  }\n  query?: string\n  start_cursor?: string\n  page_size?: number\n  filter?: { property: \"object\"; value: \"page\" | \"database\" }\n}\n\nexport type SearchParameters = SearchBodyParameters\n\nexport type SearchResponse = {\n  type: \"page_or_database\"\n  page_or_database: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | PartialDatabaseObjectResponse\n    | DatabaseObjectResponse\n  >\n}\n\nexport const search = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n  path: (): string => `search`,\n} as const\n\ntype CreateCommentBodyParameters =\n  | {\n      parent: { page_id: IdRequest; type?: \"page_id\" }\n      rich_text: Array<RichTextItemRequest>\n    }\n  | { discussion_id: IdRequest; rich_text: Array<RichTextItemRequest> }\n\nexport type CreateCommentParameters = CreateCommentBodyParameters\n\nexport type CreateCommentResponse =\n  | CommentObjectResponse\n  | PartialCommentObjectResponse\n\nexport const createComment = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"rich_text\", \"discussion_id\"],\n  path: (): string => `comments`,\n} as const\n\ntype ListCommentsQueryParameters = {\n  block_id: IdRequest\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListCommentsParameters = ListCommentsQueryParameters\n\nexport type ListCommentsResponse = {\n  type: \"comment\"\n  comment: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<CommentObjectResponse>\n}\n\nexport const listComments = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `comments`,\n} as const\n\ntype OauthTokenBodyParameters = {\n  grant_type: string\n  code: string\n  redirect_uri?: string\n  external_account?: { key: string; name: string }\n}\n\nexport type OauthTokenParameters = OauthTokenBodyParameters\n\nexport type OauthTokenResponse = {\n  access_token: string\n  token_type: \"bearer\"\n  bot_id: string\n  workspace_icon: string | null\n  workspace_name: string | null\n  workspace_id: string\n  owner:\n    | {\n        type: \"user\"\n        user:\n          | {\n              type: \"person\"\n              person: { email: string }\n              name: string | null\n              avatar_url: string | null\n              id: IdRequest\n              object: \"user\"\n            }\n          | PartialUserObjectResponse\n      }\n    | { type: \"workspace\"; workspace: true }\n  duplicated_template_id: string | null\n}\n\nexport const oauthToken = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"grant_type\", \"code\", \"redirect_uri\", \"external_account\"],\n  path: (): string => `oauth/token`,\n} as const\n", "export const fetch = (...args) => globalThis.fetch(...args);\nexport const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const AbortController = globalThis.AbortController;\nexport const FetchError = Error;\nexport const AbortError = Error;\nconst redirectStatus = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nexport const isRedirect = (code) => redirectStatus.has(code);\nfetch.Promise = globalThis.Promise;\nfetch.isRedirect = isRedirect;\nexport default fetch;\n", "import * as esm from 'node-fetch';\nmodule.exports = __cf_cjs(esm);", "{\n    \"name\": \"@notionhq/client\",\n    \"version\": \"2.2.15\",\n    \"description\": \"A simple and easy to use client for the Notion API\",\n    \"engines\": {\n        \"node\": \">=12\"\n    },\n    \"homepage\": \"https://developers.notion.com/docs/getting-started\",\n    \"bugs\": {\n        \"url\": \"https://github.com/makenotion/notion-sdk-js/issues\"\n    },\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/makenotion/notion-sdk-js/\"\n    },\n    \"keywords\": [\n        \"notion\",\n        \"notionapi\",\n        \"rest\",\n        \"notion-api\"\n    ],\n    \"main\": \"./build/src\",\n    \"types\": \"./build/src/index.d.ts\",\n    \"scripts\": {\n        \"prepare\": \"npm run build\",\n        \"prepublishOnly\": \"npm run checkLoggedIn && npm run lint && npm run test\",\n        \"build\": \"tsc\",\n        \"prettier\": \"prettier --write .\",\n        \"lint\": \"prettier --check . && eslint . --ext .ts && cspell '**/*' \",\n        \"test\": \"jest ./test\",\n        \"check-links\": \"git ls-files | grep md$ | xargs -n 1 markdown-link-check\",\n        \"prebuild\": \"npm run clean\",\n        \"clean\": \"rm -rf ./build\",\n        \"checkLoggedIn\": \"./scripts/verifyLoggedIn.sh\"\n    },\n    \"author\": \"\",\n    \"license\": \"MIT\",\n    \"files\": [\n        \"build/package.json\",\n        \"build/src/**\"\n    ],\n    \"dependencies\": {\n        \"@types/node-fetch\": \"^2.5.10\",\n        \"node-fetch\": \"^2.6.1\"\n    },\n    \"devDependencies\": {\n        \"@types/jest\": \"^28.1.4\",\n        \"@typescript-eslint/eslint-plugin\": \"^5.39.0\",\n        \"@typescript-eslint/parser\": \"^5.39.0\",\n        \"cspell\": \"^5.4.1\",\n        \"eslint\": \"^7.24.0\",\n        \"jest\": \"^28.1.2\",\n        \"markdown-link-check\": \"^3.8.7\",\n        \"prettier\": \"^2.8.8\",\n        \"ts-jest\": \"^28.0.5\",\n        \"typescript\": \"^4.8.4\"\n    }\n}\n", "import type { Agent } from \"http\"\nimport {\n  Logger,\n  LogLevel,\n  logLevelSeverity,\n  makeConsoleLogger,\n} from \"./logging\"\nimport {\n  buildRequestError,\n  isHTTPResponseError,\n  isNotionClientError,\n  RequestTimeoutError,\n} from \"./errors\"\nimport { pick } from \"./utils\"\nimport {\n  GetBlockParameters,\n  GetBlockResponse,\n  getBlock,\n  UpdateBlockParameters,\n  UpdateBlockResponse,\n  updateBlock,\n  DeleteBlockParameters,\n  DeleteBlockResponse,\n  deleteBlock,\n  AppendBlockChildrenParameters,\n  AppendBlockChildrenResponse,\n  appendBlockChildren,\n  ListBlockChildrenParameters,\n  ListBlockChildrenResponse,\n  listBlockChildren,\n  ListDatabasesParameters,\n  ListDatabasesResponse,\n  listDatabases,\n  GetDatabaseParameters,\n  GetDatabaseResponse,\n  getDatabase,\n  QueryDatabaseParameters,\n  QueryDatabaseResponse,\n  queryDatabase,\n  CreateDatabaseParameters,\n  CreateDatabaseResponse,\n  createDatabase,\n  UpdateDatabaseParameters,\n  UpdateDatabaseResponse,\n  updateDatabase,\n  CreatePageParameters,\n  CreatePageResponse,\n  createPage,\n  GetPageParameters,\n  GetPageResponse,\n  getPage,\n  UpdatePageParameters,\n  UpdatePageResponse,\n  updatePage,\n  GetUserParameters,\n  GetUserResponse,\n  getUser,\n  ListUsersParameters,\n  ListUsersResponse,\n  listUsers,\n  SearchParameters,\n  SearchResponse,\n  search,\n  GetSelfParameters,\n  GetSelfResponse,\n  getSelf,\n  GetPagePropertyParameters,\n  GetPagePropertyResponse,\n  getPageProperty,\n  CreateCommentParameters,\n  CreateCommentResponse,\n  createComment,\n  ListCommentsParameters,\n  ListCommentsResponse,\n  listComments,\n  OauthTokenResponse,\n  OauthTokenParameters,\n  oauthToken,\n} from \"./api-endpoints\"\nimport nodeFetch from \"node-fetch\"\nimport {\n  version as PACKAGE_VERSION,\n  name as PACKAGE_NAME,\n} from \"../package.json\"\nimport { SupportedFetch } from \"./fetch-types\"\n\nexport interface ClientOptions {\n  auth?: string\n  timeoutMs?: number\n  baseUrl?: string\n  logLevel?: LogLevel\n  logger?: Logger\n  notionVersion?: string\n  fetch?: SupportedFetch\n  /** Silently ignored in the browser */\n  agent?: Agent\n}\n\nexport interface RequestParameters {\n  path: string\n  method: Method\n  query?: QueryParams\n  body?: Record<string, unknown>\n  /**\n   * To authenticate using public API token, `auth` should be passed as a\n   * string. If you are trying to complete OAuth, then `auth` should be an object\n   * containing your integration's client ID and secret.\n   */\n  auth?:\n    | string\n    | {\n        client_id: string\n        client_secret: string\n      }\n}\n\nexport default class Client {\n  #auth?: string\n  #logLevel: LogLevel\n  #logger: Logger\n  #prefixUrl: string\n  #timeoutMs: number\n  #notionVersion: string\n  #fetch: SupportedFetch\n  #agent: Agent | undefined\n  #userAgent: string\n\n  static readonly defaultNotionVersion = \"2022-06-28\"\n\n  public constructor(options?: ClientOptions) {\n    this.#auth = options?.auth\n    this.#logLevel = options?.logLevel ?? LogLevel.WARN\n    this.#logger = options?.logger ?? makeConsoleLogger(PACKAGE_NAME)\n    this.#prefixUrl = (options?.baseUrl ?? \"https://api.notion.com\") + \"/v1/\"\n    this.#timeoutMs = options?.timeoutMs ?? 60_000\n    this.#notionVersion = options?.notionVersion ?? Client.defaultNotionVersion\n    this.#fetch = options?.fetch ?? nodeFetch\n    this.#agent = options?.agent\n    this.#userAgent = `notionhq-client/${PACKAGE_VERSION}`\n  }\n\n  /**\n   * Sends a request.\n   *\n   * @param path\n   * @param method\n   * @param query\n   * @param body\n   * @returns\n   */\n  public async request<ResponseBody>({\n    path,\n    method,\n    query,\n    body,\n    auth,\n  }: RequestParameters): Promise<ResponseBody> {\n    this.log(LogLevel.INFO, \"request start\", { method, path })\n\n    // If the body is empty, don't send the body in the HTTP request\n    const bodyAsJsonString =\n      !body || Object.entries(body).length === 0\n        ? undefined\n        : JSON.stringify(body)\n\n    const url = new URL(`${this.#prefixUrl}${path}`)\n    if (query) {\n      for (const [key, value] of Object.entries(query)) {\n        if (value !== undefined) {\n          if (Array.isArray(value)) {\n            value.forEach(val =>\n              url.searchParams.append(key, decodeURIComponent(val))\n            )\n          } else {\n            url.searchParams.append(key, String(value))\n          }\n        }\n      }\n    }\n\n    // Allow both client ID / client secret based auth as well as token based auth.\n    let authorizationHeader: Record<string, string>\n    if (typeof auth === \"object\") {\n      // Client ID and secret based auth is **ONLY** supported when using the\n      // `/oauth/token` endpoint. If this is the case, handle formatting the\n      // authorization header as required by `Basic` auth.\n      const unencodedCredential = `${auth.client_id}:${auth.client_secret}`\n      const encodedCredential =\n        Buffer.from(unencodedCredential).toString(\"base64\")\n      authorizationHeader = { authorization: `Basic ${encodedCredential}` }\n    } else {\n      // Otherwise format authorization header as `Bearer` token auth.\n      authorizationHeader = this.authAsHeaders(auth)\n    }\n\n    const headers: Record<string, string> = {\n      ...authorizationHeader,\n      \"Notion-Version\": this.#notionVersion,\n      \"user-agent\": this.#userAgent,\n    }\n\n    if (bodyAsJsonString !== undefined) {\n      headers[\"content-type\"] = \"application/json\"\n    }\n    try {\n      const response = await RequestTimeoutError.rejectAfterTimeout(\n        this.#fetch(url.toString(), {\n          method: method.toUpperCase(),\n          headers,\n          body: bodyAsJsonString,\n          agent: this.#agent,\n        }),\n        this.#timeoutMs\n      )\n\n      const responseText = await response.text()\n      if (!response.ok) {\n        throw buildRequestError(response, responseText)\n      }\n\n      const responseJson: ResponseBody = JSON.parse(responseText)\n      this.log(LogLevel.INFO, `request success`, { method, path })\n      return responseJson\n    } catch (error: unknown) {\n      if (!isNotionClientError(error)) {\n        throw error\n      }\n\n      // Log the error if it's one of our known error types\n      this.log(LogLevel.WARN, `request fail`, {\n        code: error.code,\n        message: error.message,\n      })\n\n      if (isHTTPResponseError(error)) {\n        // The response body may contain sensitive information so it is logged separately at the DEBUG level\n        this.log(LogLevel.DEBUG, `failed response body`, {\n          body: error.body,\n        })\n      }\n\n      throw error\n    }\n  }\n\n  /*\n   * Notion API endpoints\n   */\n\n  public readonly blocks = {\n    /**\n     * Retrieve block\n     */\n    retrieve: (\n      args: WithAuth<GetBlockParameters>\n    ): Promise<GetBlockResponse> => {\n      return this.request<GetBlockResponse>({\n        path: getBlock.path(args),\n        method: getBlock.method,\n        query: pick(args, getBlock.queryParams),\n        body: pick(args, getBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update block\n     */\n    update: (\n      args: WithAuth<UpdateBlockParameters>\n    ): Promise<UpdateBlockResponse> => {\n      return this.request<UpdateBlockResponse>({\n        path: updateBlock.path(args),\n        method: updateBlock.method,\n        query: pick(args, updateBlock.queryParams),\n        body: pick(args, updateBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Delete block\n     */\n    delete: (\n      args: WithAuth<DeleteBlockParameters>\n    ): Promise<DeleteBlockResponse> => {\n      return this.request<DeleteBlockResponse>({\n        path: deleteBlock.path(args),\n        method: deleteBlock.method,\n        query: pick(args, deleteBlock.queryParams),\n        body: pick(args, deleteBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n    children: {\n      /**\n       * Append block children\n       */\n      append: (\n        args: WithAuth<AppendBlockChildrenParameters>\n      ): Promise<AppendBlockChildrenResponse> => {\n        return this.request<AppendBlockChildrenResponse>({\n          path: appendBlockChildren.path(args),\n          method: appendBlockChildren.method,\n          query: pick(args, appendBlockChildren.queryParams),\n          body: pick(args, appendBlockChildren.bodyParams),\n          auth: args?.auth,\n        })\n      },\n\n      /**\n       * Retrieve block children\n       */\n      list: (\n        args: WithAuth<ListBlockChildrenParameters>\n      ): Promise<ListBlockChildrenResponse> => {\n        return this.request<ListBlockChildrenResponse>({\n          path: listBlockChildren.path(args),\n          method: listBlockChildren.method,\n          query: pick(args, listBlockChildren.queryParams),\n          body: pick(args, listBlockChildren.bodyParams),\n          auth: args?.auth,\n        })\n      },\n    },\n  }\n\n  public readonly databases = {\n    /**\n     * List databases\n     *\n     * @deprecated Please use `search`\n     */\n    list: (\n      args: WithAuth<ListDatabasesParameters>\n    ): Promise<ListDatabasesResponse> => {\n      return this.request<ListDatabasesResponse>({\n        path: listDatabases.path(),\n        method: listDatabases.method,\n        query: pick(args, listDatabases.queryParams),\n        body: pick(args, listDatabases.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Retrieve a database\n     */\n    retrieve: (\n      args: WithAuth<GetDatabaseParameters>\n    ): Promise<GetDatabaseResponse> => {\n      return this.request<GetDatabaseResponse>({\n        path: getDatabase.path(args),\n        method: getDatabase.method,\n        query: pick(args, getDatabase.queryParams),\n        body: pick(args, getDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Query a database\n     */\n    query: (\n      args: WithAuth<QueryDatabaseParameters>\n    ): Promise<QueryDatabaseResponse> => {\n      return this.request<QueryDatabaseResponse>({\n        path: queryDatabase.path(args),\n        method: queryDatabase.method,\n        query: pick(args, queryDatabase.queryParams),\n        body: pick(args, queryDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Create a database\n     */\n    create: (\n      args: WithAuth<CreateDatabaseParameters>\n    ): Promise<CreateDatabaseResponse> => {\n      return this.request<CreateDatabaseResponse>({\n        path: createDatabase.path(),\n        method: createDatabase.method,\n        query: pick(args, createDatabase.queryParams),\n        body: pick(args, createDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update a database\n     */\n    update: (\n      args: WithAuth<UpdateDatabaseParameters>\n    ): Promise<UpdateDatabaseResponse> => {\n      return this.request<UpdateDatabaseResponse>({\n        path: updateDatabase.path(args),\n        method: updateDatabase.method,\n        query: pick(args, updateDatabase.queryParams),\n        body: pick(args, updateDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  public readonly pages = {\n    /**\n     * Create a page\n     */\n    create: (\n      args: WithAuth<CreatePageParameters>\n    ): Promise<CreatePageResponse> => {\n      return this.request<CreatePageResponse>({\n        path: createPage.path(),\n        method: createPage.method,\n        query: pick(args, createPage.queryParams),\n        body: pick(args, createPage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Retrieve a page\n     */\n    retrieve: (args: WithAuth<GetPageParameters>): Promise<GetPageResponse> => {\n      return this.request<GetPageResponse>({\n        path: getPage.path(args),\n        method: getPage.method,\n        query: pick(args, getPage.queryParams),\n        body: pick(args, getPage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update page properties\n     */\n    update: (\n      args: WithAuth<UpdatePageParameters>\n    ): Promise<UpdatePageResponse> => {\n      return this.request<UpdatePageResponse>({\n        path: updatePage.path(args),\n        method: updatePage.method,\n        query: pick(args, updatePage.queryParams),\n        body: pick(args, updatePage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n    properties: {\n      /**\n       * Retrieve page property\n       */\n      retrieve: (\n        args: WithAuth<GetPagePropertyParameters>\n      ): Promise<GetPagePropertyResponse> => {\n        return this.request<GetPagePropertyResponse>({\n          path: getPageProperty.path(args),\n          method: getPageProperty.method,\n          query: pick(args, getPageProperty.queryParams),\n          body: pick(args, getPageProperty.bodyParams),\n          auth: args?.auth,\n        })\n      },\n    },\n  }\n\n  public readonly users = {\n    /**\n     * Retrieve a user\n     */\n    retrieve: (args: WithAuth<GetUserParameters>): Promise<GetUserResponse> => {\n      return this.request<GetUserResponse>({\n        path: getUser.path(args),\n        method: getUser.method,\n        query: pick(args, getUser.queryParams),\n        body: pick(args, getUser.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * List all users\n     */\n    list: (args: WithAuth<ListUsersParameters>): Promise<ListUsersResponse> => {\n      return this.request<ListUsersResponse>({\n        path: listUsers.path(),\n        method: listUsers.method,\n        query: pick(args, listUsers.queryParams),\n        body: pick(args, listUsers.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Get details about bot\n     */\n    me: (args: WithAuth<GetSelfParameters>): Promise<GetSelfResponse> => {\n      return this.request<GetSelfResponse>({\n        path: getSelf.path(),\n        method: getSelf.method,\n        query: pick(args, getSelf.queryParams),\n        body: pick(args, getSelf.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  public readonly comments = {\n    /**\n     * Create a comment\n     */\n    create: (\n      args: WithAuth<CreateCommentParameters>\n    ): Promise<CreateCommentResponse> => {\n      return this.request<CreateCommentResponse>({\n        path: createComment.path(),\n        method: createComment.method,\n        query: pick(args, createComment.queryParams),\n        body: pick(args, createComment.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * List comments\n     */\n    list: (\n      args: WithAuth<ListCommentsParameters>\n    ): Promise<ListCommentsResponse> => {\n      return this.request<ListCommentsResponse>({\n        path: listComments.path(),\n        method: listComments.method,\n        query: pick(args, listComments.queryParams),\n        body: pick(args, listComments.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  /**\n   * Search\n   */\n  public search = (\n    args: WithAuth<SearchParameters>\n  ): Promise<SearchResponse> => {\n    return this.request<SearchResponse>({\n      path: search.path(),\n      method: search.method,\n      query: pick(args, search.queryParams),\n      body: pick(args, search.bodyParams),\n      auth: args?.auth,\n    })\n  }\n\n  public readonly oauth = {\n    /**\n     * Get token\n     */\n    token: (\n      args: OauthTokenParameters & {\n        client_id: string\n        client_secret: string\n      }\n    ): Promise<OauthTokenResponse> => {\n      return this.request<OauthTokenResponse>({\n        path: oauthToken.path(),\n        method: oauthToken.method,\n        query: pick(args, oauthToken.queryParams),\n        body: pick(args, oauthToken.bodyParams),\n        auth: {\n          client_id: args.client_id,\n          client_secret: args.client_secret,\n        },\n      })\n    },\n  }\n\n  /**\n   * Emits a log message to the console.\n   *\n   * @param level The level for this message\n   * @param args Arguments to send to the console\n   */\n  private log(\n    level: LogLevel,\n    message: string,\n    extraInfo: Record<string, unknown>\n  ) {\n    if (logLevelSeverity(level) >= logLevelSeverity(this.#logLevel)) {\n      this.#logger(level, message, extraInfo)\n    }\n  }\n\n  /**\n   * Transforms an API key or access token into a headers object suitable for an HTTP request.\n   *\n   * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n   * an empty object\n   *\n   * @param auth API key or access token\n   * @returns headers key-value object\n   */\n  private authAsHeaders(auth?: string): Record<string, string> {\n    const headers: Record<string, string> = {}\n    const authHeaderValue = auth ?? this.#auth\n    if (authHeaderValue !== undefined) {\n      headers[\"authorization\"] = `Bearer ${authHeaderValue}`\n    }\n    return headers\n  }\n}\n\n/*\n * Type aliases to support the generic request interface.\n */\ntype Method = \"get\" | \"post\" | \"patch\" | \"delete\"\ntype QueryParams = Record<string, string | number | string[]> | URLSearchParams\n\ntype WithAuth<P> = P & { auth?: string }\n", "import {\n  BlockObjectResponse,\n  CommentObjectResponse,\n  DatabaseObjectResponse,\n  EquationRichTextItemResponse,\n  PageObjectResponse,\n  PartialBlockObjectResponse,\n  PartialCommentObjectResponse,\n  PartialDatabaseObjectResponse,\n  PartialPageObjectResponse,\n  PartialUserObjectResponse,\n  RichTextItemResponse,\n  TextRichTextItemResponse,\n  UserObjectResponse,\n} from \"./api-endpoints\"\n\ninterface PaginatedArgs {\n  start_cursor?: string\n}\n\ninterface PaginatedList<T> {\n  object: \"list\"\n  results: T[]\n  next_cursor: string | null\n  has_more: boolean\n}\n\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nexport async function* iteratePaginatedAPI<Args extends PaginatedArgs, Item>(\n  listFn: (args: Args) => Promise<PaginatedList<Item>>,\n  firstPageArgs: Args\n): AsyncIterableIterator<Item> {\n  let nextCursor: string | null | undefined = firstPageArgs.start_cursor\n  do {\n    const response: PaginatedList<Item> = await listFn({\n      ...firstPageArgs,\n      start_cursor: nextCursor,\n    })\n    yield* response.results\n    nextCursor = response.next_cursor\n  } while (nextCursor)\n}\n\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = await collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nexport async function collectPaginatedAPI<Args extends PaginatedArgs, Item>(\n  listFn: (args: Args) => Promise<PaginatedList<Item>>,\n  firstPageArgs: Args\n): Promise<Item[]> {\n  const results: Item[] = []\n  for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n    results.push(item)\n  }\n  return results\n}\n\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nexport function isFullBlock(\n  response:\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | DatabaseObjectResponse\n    | PartialDatabaseObjectResponse\n    | BlockObjectResponse\n    | PartialBlockObjectResponse\n): response is BlockObjectResponse {\n  return response.object === \"block\" && \"type\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nexport function isFullPage(\n  response:\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | DatabaseObjectResponse\n    | PartialDatabaseObjectResponse\n    | BlockObjectResponse\n    | PartialBlockObjectResponse\n): response is PageObjectResponse {\n  return response.object === \"page\" && \"url\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nexport function isFullDatabase(\n  response:\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | DatabaseObjectResponse\n    | PartialDatabaseObjectResponse\n    | BlockObjectResponse\n    | PartialBlockObjectResponse\n): response is DatabaseObjectResponse {\n  return response.object === \"database\" && \"title\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse` or a full\n * `PageObjectResponse`.\n */\nexport function isFullPageOrDatabase(\n  response:\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | DatabaseObjectResponse\n    | PartialDatabaseObjectResponse\n    | BlockObjectResponse\n    | PartialBlockObjectResponse\n): response is DatabaseObjectResponse | PageObjectResponse {\n  if (response.object === \"database\") {\n    return isFullDatabase(response)\n  } else {\n    return isFullPage(response)\n  }\n}\n\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nexport function isFullUser(\n  response: UserObjectResponse | PartialUserObjectResponse\n): response is UserObjectResponse {\n  return \"type\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nexport function isFullComment(\n  response: CommentObjectResponse | PartialCommentObjectResponse\n): response is CommentObjectResponse {\n  return \"created_by\" in response\n}\n\n/**\n * @returns `true` if `richText` is a `TextRichTextItemResponse`.\n */\nexport function isTextRichTextItemResponse(\n  richText: RichTextItemResponse\n): richText is TextRichTextItemResponse {\n  return richText.type === \"text\"\n}\n\n/**\n * @returns `true` if `richText` is an `EquationRichTextItemResponse`.\n */\nexport function isEquationRichTextItemResponse(\n  richText: RichTextItemResponse\n): richText is EquationRichTextItemResponse {\n  return richText.type === \"equation\"\n}\n\n/**\n * @returns `true` if `richText` is an `MentionRichTextItemResponse`.\n */\nexport function isMentionRichTextItemResponse(\n  richText: RichTextItemResponse\n): richText is EquationRichTextItemResponse {\n  return richText.type === \"mention\"\n}\n", "export { default as Client } from \"./Client\"\nexport { LogLevel, Logger } from \"./logging\"\nexport {\n  // Error codes\n  NotionErrorCode,\n  APIErrorCode,\n  ClientErrorCode,\n  // Error types\n  NotionClientError,\n  APIResponseError,\n  UnknownHTTPResponseError,\n  RequestTimeoutError,\n  // Error helpers\n  isNotionClientError,\n} from \"./errors\"\nexport {\n  collectPaginatedAPI,\n  iteratePaginatedAPI,\n  isFullBlock,\n  isFullDatabase,\n  isFullPage,\n  isFullUser,\n  isFullComment,\n  isFullPageOrDatabase,\n} from \"./helpers\"\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-e3qiJ6\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-e3qiJ6\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-e3qiJ6\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\dev\\\\github\\\\booksync\\\\workers\\\\src\\\\index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Router, IRequest } from 'itty-router';\r\nimport type { Environment } from './types/env';\r\nimport type { Job } from './types/job';\r\nimport {\r\n  NotionStore,\r\n  NotionClient,\r\n  createKVStore,\r\n  SyncService,\r\n  parseClippings\r\n} from '@booksync/shared';\r\nimport { KVJobStore } from './services/kvJobStore';\r\nimport { OAuthCallbackService } from './services/oauthCallbackService';\r\n\r\n// Constants\r\nconst BATCH_SIZE = 10; // Number of highlights to process per batch\r\nconst JOB_EXPIRY = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\r\n\r\n// Initialize router\r\nconst router = Router();\r\n\r\n// Middleware for API key validation\r\nconst validateApiKey = (request: Request | IRequest, env: Environment) => {\r\n  const apiKey = request instanceof Request ?\r\n    request.headers.get('x-api-key') :\r\n    request.headers['x-api-key'];\r\n    \r\n  if (!apiKey || apiKey !== env.WORKER_API_KEY) {\r\n    return errorResponse('Invalid or missing API key', 401);\r\n  }\r\n};\r\n\r\n// Response helpers\r\nconst errorResponse = (message: string, status = 500) => \r\n  new Response(JSON.stringify({ error: message }), { \r\n    status, \r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n\r\nconst successResponse = (data: any) => \r\n  new Response(JSON.stringify(data), {\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n// Validate environment\r\n// Validate environment\r\nfunction validateEnvironment(env: Environment): string[] {\r\n  const errors: string[] = [];\r\n  const required = [\r\n    'NOTION_CLIENT_ID',\r\n    'NOTION_CLIENT_SECRET',\r\n    'NOTION_REDIRECT_URI'\r\n  ];\r\n\r\n  for (const key of required) {\r\n    if (!env[key as keyof Environment]) {\r\n      errors.push(`Missing ${key}`);\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n// Health check endpoint with environment validation\r\nrouter.get('/health', (_, env: Environment) => {\r\n  const envErrors = validateEnvironment(env);\r\n  const r2Status = env.HIGHLIGHTS_BUCKET ? 'connected' : 'error';\r\n  const kvStatus = env.OAUTH_STORE ? 'connected' : 'error';\r\n\r\n  return successResponse({\r\n    status: 'ok',\r\n    time: new Date().toISOString(),\r\n    services: {\r\n      r2: r2Status,\r\n      kv: kvStatus,\r\n      doStatus: 'connected'\r\n    },\r\n    envStatus: envErrors.length === 0 ? 'valid' : 'invalid',\r\n    envErrors\r\n  });\r\n});\r\n\r\n// Test webhook endpoint\r\nrouter.post('/test-webhook', async (request) => {\r\n  try {\r\n    const data = await request.json();\r\n    return successResponse({\r\n      received: true,\r\n      timestamp: new Date().toISOString(),\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    return errorResponse('Invalid JSON payload');\r\n  }\r\n});\r\n\r\n// Upload endpoint with improved error handling and logging\r\nrouter.post('/upload', async (request, env: Environment) => {\r\n  console.log('Processing upload request...');\r\n  \r\n  // Validate API key\r\n  const authError = validateApiKey(request, env);\r\n  if (authError) return authError;\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n    const file = formData.get('file') as File;\r\n    const userId = formData.get('userId') as string;\r\n    const workspaceId = formData.get('workspaceId') as string;\r\n\r\n    console.log('Received upload request:', {\r\n      fileName: file?.name,\r\n      userId,\r\n      workspaceId\r\n    });\r\n\r\n    if (!file || !userId || !workspaceId) {\r\n      return errorResponse('Missing required fields: file, userId, or workspaceId', 400);\r\n    }\r\n\r\n    // Validate file type\r\n    if (!file.name.endsWith('.txt')) {\r\n      return errorResponse('Invalid file type. Only .txt files are allowed.', 400);\r\n    }\r\n\r\n    // Generate unique file key\r\n    const fileKey = `uploads/${userId}/${crypto.randomUUID()}.txt`;\r\n    \r\n    console.log('Storing file in R2:', fileKey);\r\n    \r\n    // Store file in R2 with custom headers\r\n    await env.HIGHLIGHTS_BUCKET.put(fileKey, file.stream(), {\r\n      customMetadata: {\r\n        userId,\r\n        workspaceId,\r\n        originalName: file.name,\r\n        uploadTime: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n    console.log('File stored successfully, creating job...');\r\n\r\n    // Create sync job using KVJobStore\r\n    const jobStore = new KVJobStore(env.JOB_STORE);\r\n    const job = await jobStore.createJob({\r\n      userId,\r\n      fileKey,\r\n      workspaceId,\r\n      expiresAt: Date.now() + JOB_EXPIRY\r\n    });\r\n\r\n    console.log('Job created successfully:', job.id);\r\n    \r\n    return successResponse(job);\r\n  } catch (error) {\r\n    console.error('Upload error:', error);\r\n    return errorResponse('Upload failed: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n  }\r\n});\r\n\r\n// Sync endpoint with detailed progress reporting\r\nrouter.post('/sync', async (request, env: Environment) => {\r\n  console.log('Processing sync request...');\r\n  try {\r\n    const { jobId, userId } = await request.json() as { jobId: string, userId: string };\r\n    if (!jobId || !userId) {\r\n      return errorResponse('Missing jobId or userId', 400);\r\n    }\r\n\r\n    console.log('Processing sync for job:', jobId, 'user:', userId);\r\n\r\n    // Initialize stores and clients\r\n    const jobStore = new KVJobStore(env.JOB_STORE);\r\n    const kvStore = createKVStore(env.OAUTH_STORE);\r\n    const notionStore = new NotionStore(kvStore);\r\n\r\n    // Get job status\r\n    console.log('Fetching job status...');\r\n    const job = await jobStore.getJob(jobId);\r\n    if (!job) {\r\n      return errorResponse('Job not found', 404);\r\n    }\r\n\r\n    if (!job.fileKey || !job.workspaceId) {\r\n      return errorResponse('Invalid job state', 400);\r\n    }\r\n\r\n    console.log('Job details:', {\r\n      id: job.id,\r\n      status: job.status,\r\n      progress: job.progress\r\n    });\r\n\r\n    // Validate API key for sync endpoint\r\n    const authError = validateApiKey(request, env);\r\n    if (authError) return authError;\r\n\r\n    // Check if job has expired\r\n    if (job.expiresAt && job.expiresAt < Date.now()) {\r\n      console.log('Job expired:', job.id);\r\n      await jobStore.updateJob(jobId, { status: 'expired' });\r\n      return errorResponse('Job has expired', 400);\r\n    }\r\n\r\n    try {\r\n      // Update job status to processing\r\n      console.log('Updating job status to processing...');\r\n      await jobStore.updateJob(jobId, { status: 'processing' });\r\n\r\n      // Get file from R2\r\n      console.log('Fetching file from R2:', job.fileKey);\r\n      const file = await env.HIGHLIGHTS_BUCKET.get(job.fileKey);\r\n      if (!file) {\r\n        throw new Error('File not found in R2');\r\n      }\r\n\r\n      // Parse highlights\r\n      console.log('Parsing highlights...');\r\n      const text = await file.text();\r\n      const highlights = await parseClippings(text);\r\n\r\n      console.log(`Found ${highlights.length} highlights`);\r\n\r\n      if (highlights.length === 0) {\r\n        throw new Error('No highlights found in file');\r\n      }\r\n\r\n      // Initialize services\r\n      console.log('Initializing services...');\r\n      const notionClient = new NotionClient({\r\n        store: notionStore,\r\n        clientId: env.NOTION_CLIENT_ID,\r\n        clientSecret: env.NOTION_CLIENT_SECRET,\r\n        redirectUri: env.NOTION_REDIRECT_URI\r\n      });\r\n\r\n      const syncService = new SyncService(notionClient, {\r\n        batchSize: BATCH_SIZE,\r\n        batchDelay: 100,\r\n        onProgress: async (progress, message) => {\r\n          console.log(message);\r\n          await jobStore.updateJob(jobId, { progress: Math.min(progress, 100) });\r\n        }\r\n      });\r\n\r\n      // Process highlights\r\n      console.log('Processing highlights...');\r\n      await syncService.syncHighlights(text, job.workspaceId);\r\n\r\n      // Mark job as completed\r\n      console.log('Marking job as completed...');\r\n      await jobStore.updateJob(jobId, {\r\n        status: 'completed',\r\n        completedAt: new Date().toISOString()\r\n      });\r\n\r\n      return successResponse({ \r\n        status: 'success',\r\n        jobId,\r\n        totalHighlights: highlights.length\r\n      });\r\n    } catch (error) {\r\n      console.error('Sync error:', error);\r\n      \r\n      // Update job with error\r\n      await jobStore.updateJob(jobId, {\r\n        status: 'failed',\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      });\r\n\r\n      return errorResponse('Sync failed: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  } catch (error) {\r\n    console.error('Request error:', error);\r\n    return errorResponse('Invalid request');\r\n  }\r\n});\r\n\r\n// OAuth callback endpoint\r\nrouter.get('/oauth/callback', async (request: IRequest, env: Environment) => {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const code = url.searchParams.get('code');\r\n    const state = url.searchParams.get('state');\r\n    const error = url.searchParams.get('error');\r\n    const errorDescription = url.searchParams.get('error_description');\r\n\r\n    // Handle OAuth error response\r\n    if (error) {\r\n      console.error('OAuth error:', { error, errorDescription });\r\n      // Redirect to client with error\r\n      const clientUrl = new URL(env.CLIENT_URL || 'http://localhost:5173');\r\n      clientUrl.searchParams.set('error', error);\r\n      if (errorDescription) {\r\n        clientUrl.searchParams.set('errorDescription', errorDescription);\r\n      }\r\n      return new Response(null, {\r\n        status: 302,\r\n        headers: {\r\n          'Location': clientUrl.toString()\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!code || !state) {\r\n      return errorResponse('Missing code or state parameter', 400);\r\n    }\r\n\r\n    const oauthService = new OAuthCallbackService(env);\r\n    const { redirectUrl } = await oauthService.handleCallback(code);\r\n    \r\n    return new Response(null, {\r\n      status: 302,\r\n      headers: {\r\n        'Location': redirectUrl\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('OAuth callback error:', error);\r\n    // On error, redirect to client with error message\r\n    const clientUrl = new URL(env.CLIENT_URL || 'http://localhost:5173');\r\n    clientUrl.searchParams.set('error', 'oauth_error');\r\n    clientUrl.searchParams.set('errorDescription', error instanceof Error ? error.message : 'Unknown error');\r\n    \r\n    return new Response(null, {\r\n      status: 302,\r\n      headers: {\r\n        'Location': clientUrl.toString()\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// Error handling middleware\r\nconst errorHandler = async (error: Error) => {\r\n  console.error('Unhandled error:', error);\r\n  return errorResponse('Internal server error');\r\n};\r\n\r\n// Scheduled task handler\r\nasync function handleScheduled(env: Environment, ctx: ExecutionContext, type: string) {\r\n  console.log(`Running scheduled ${type}...`);\r\n\r\n  const jobStore = new KVJobStore(env.JOB_STORE);\r\n\r\n  if (type === 'sync') {\r\n    // Get all pending jobs\r\n    console.log('Fetching pending jobs...');\r\n    const jobs = await jobStore.listJobs('', 'pending');\r\n    console.log(`Found ${jobs.length} pending jobs`);\r\n\r\n    // Process each pending job\r\n    for (const job of jobs) {\r\n      console.log(`Scheduling job ${job.id} for processing...`);\r\n      ctx.waitUntil(\r\n        fetch(`https://${env.WORKER_HOST}/sync`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            jobId: job.id,\r\n            userId: job.userId\r\n          })\r\n        })\r\n      );\r\n    }\r\n  } else if (type === 'cleanup') {\r\n    console.log('Running job cleanup...');\r\n    const cleanedCount = await jobStore.cleanupJobs();\r\n    console.log('Cleanup complete:', { cleaned: cleanedCount });\r\n  }\r\n}\r\n\r\nexport default {\r\n  async fetch(\r\n    request: Request,\r\n    env: Environment,\r\n    ctx: ExecutionContext\r\n  ): Promise<Response> {\r\n    try {\r\n      // Create URL object for request\r\n      const url = new URL(request.url);\r\n      \r\n      // Create a new request object with the required properties\r\n      const routerRequest: IRequest = {\r\n        method: request.method,\r\n        url: url.toString(),\r\n        headers: request.headers,\r\n        params: {},\r\n        query: Object.fromEntries(url.searchParams)\r\n      };\r\n      \r\n      return await router.handle(routerRequest, env, ctx);\r\n    } catch (error) {\r\n      return errorHandler(error as Error);\r\n    }\r\n  },\r\n\r\n  // Handle scheduled events\r\n  async scheduled(\r\n    controller: ScheduledController,\r\n    env: Environment,\r\n    ctx: ExecutionContext\r\n  ): Promise<void> {\r\n    // Determine the type of scheduled task based on the cron pattern\r\n    const cronPattern = controller.cron;\r\n    const taskType = cronPattern === '0 0 * * *' ? 'cleanup' : 'sync';\r\n    await handleScheduled(env, ctx, taskType);\r\n  }\r\n};\r\n\r\nexport { JobStore } from './services/jobStore';\r\n", "const e=({base:e=\"\",routes:r=[]}={})=>({__proto__:new Proxy({},{get:(a,o,t)=>(a,...p)=>r.push([o.toUpperCase(),RegExp(`^${(e+a).replace(/(\\/?)\\*/g,\"($1.*)?\").replace(/(\\/$)|((?<=\\/)\\/)/,\"\").replace(/(:(\\w+)\\+)/,\"(?<$2>.*)\").replace(/:(\\w+)(\\?)?(\\.)?/g,\"$2(?<$1>[^/]+)$2$3\").replace(/\\.(?=[\\w(])/,\"\\\\.\").replace(/\\)\\.\\?\\(([^\\[]+)\\[\\^/g,\"?)\\\\.?($1(?<=\\\\.)[^\\\\.\")}/*$`),p])&&t}),routes:r,async handle(e,...a){let o,t,p=new URL(e.url),l=e.query={};for(let[e,r]of p.searchParams)l[e]=void 0===l[e]?r:[l[e],r].flat();for(let[l,s,c]of r)if((l===e.method||\"ALL\"===l)&&(t=p.pathname.match(s))){e.params=t.groups||{};for(let r of c)if(void 0!==(o=await r(e.proxy||e,...a)))return o}}});export{e as Router};\n", "export { parseClippings } from './utils/parseClippings';\r\nexport type { Highlight } from './types/highlight';\r\nexport { NotionStore } from './services/notionStore';\r\nexport { NotionClient } from './services/notionClient';\r\nexport type { NotionClientConfig } from './services/notionClient';\r\nexport { createKVStore } from './services/kvStore';\r\nexport { SyncService } from './services/syncService';\r\nexport type { SyncConfig, SyncProgress } from './services/syncService';\r\nexport type {\r\n  NotionToken,\r\n  NotionWorkspace,\r\n  NotionUser,\r\n  NotionBotUser\r\n} from './types/notion';\r\n", "import { createHash } from 'crypto';\r\n\r\nimport { Highlight } from '../types/highlight.js';\r\n\r\nconst BATCH_SIZE = 100; // Process 100 entries at a time\r\n\r\nfunction generateHighlightHash(highlight: string[], location: string, bookTitle: string, author: string): string {\r\n  // Generate hash from first chunk plus metadata to avoid length issues\r\n  // This ensures unique identification while staying within Notion's limits\r\n  const firstChunk = highlight[0] || '';\r\n  const content = firstChunk + location + bookTitle + author;\r\n  return createHash('sha256').update(content).digest('hex');\r\n}\r\n\r\n// Split text into chunks of maxLength, ensuring chunks end at sentence boundaries and strictly enforcing length limit\r\nfunction splitText(text: string, maxLength = 2000): string[] {\r\n  // Early validation\r\n  if (!text || text.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // Handle case where text is already within limits\r\n  if (text.length <= maxLength) {\r\n    return [text];\r\n  }\r\n\r\n  const chunks: string[] = [];\r\n  let currentChunk = '';\r\n  \r\n  // Split text into sentences using common punctuation and handle ellipsis\r\n  const sentences = text\r\n    .split(/(?<=[.!?](?:\\s+|$))/)\r\n    .map(s => s.trim())\r\n    .filter(s => s.length > 0);\r\n  \r\n  for (const sentence of sentences) {\r\n    const potentialChunk = currentChunk ? `${currentChunk} ${sentence}` : sentence;\r\n    \r\n    // If adding this sentence would exceed maxLength, start a new chunk\r\n    if (potentialChunk.length > maxLength) {\r\n      if (currentChunk) {\r\n        chunks.push(currentChunk.trim());\r\n        currentChunk = '';\r\n      }\r\n      \r\n      // If a single sentence is too long, split it into smaller chunks\r\n      if (sentence.length > maxLength) {\r\n        let remainingText = sentence;\r\n        while (remainingText.length > 0) {\r\n          // Find the last space within maxLength characters\r\n          let cutoff = maxLength;\r\n          if (remainingText.length > maxLength) {\r\n            cutoff = remainingText.lastIndexOf(' ', maxLength);\r\n            if (cutoff === -1) cutoff = maxLength; // If no space found, hard break at maxLength\r\n          }\r\n          \r\n          chunks.push(remainingText.substring(0, cutoff).trim());\r\n          remainingText = remainingText.substring(cutoff).trim();\r\n        }\r\n      } else {\r\n        currentChunk = sentence;\r\n      }\r\n    } else {\r\n      currentChunk = potentialChunk;\r\n    }\r\n  }\r\n  \r\n  if (currentChunk) {\r\n    // Final validation check\r\n    if (currentChunk.length > maxLength) {\r\n      const lastSpace = currentChunk.lastIndexOf(' ', maxLength);\r\n      if (lastSpace !== -1) {\r\n        chunks.push(currentChunk.substring(0, lastSpace).trim());\r\n        chunks.push(currentChunk.substring(lastSpace).trim());\r\n      } else {\r\n        chunks.push(currentChunk.substring(0, maxLength).trim());\r\n        if (currentChunk.length > maxLength) {\r\n          chunks.push(currentChunk.substring(maxLength).trim());\r\n        }\r\n      }\r\n    } else {\r\n      chunks.push(currentChunk.trim());\r\n    }\r\n  }\r\n  \r\n  // Final validation to ensure no chunk exceeds maxLength\r\n  return chunks.map(chunk => {\r\n    if (chunk.length > maxLength) {\r\n      console.warn(`Found chunk exceeding ${maxLength} characters, truncating...`);\r\n      return chunk.substring(0, maxLength);\r\n    }\r\n    return chunk;\r\n  });\r\n}\r\n\r\n// Process a single batch of entries\r\nasync function processBatch(\r\n  entries: string[],\r\n  highlightGroups: Map<string, Highlight[]>\r\n): Promise<void> {\r\n  for (const entry of entries) {\r\n    try {\r\n      const lines = entry.split(/\\r?\\n/).map(line => line.trim());\r\n      \r\n      if (lines.length < 3) {\r\n        console.log('Skipping entry: insufficient lines', { lineCount: lines.length });\r\n        continue;\r\n      }\r\n\r\n      const titleAuthorMatch = lines[0].match(/^(.*?)\\s*\\((.*?)\\)$/);\r\n      if (!titleAuthorMatch) {\r\n        console.log('Skipping entry: invalid title/author format', { line: lines[0] });\r\n        continue;\r\n      }\r\n\r\n      const bookTitle = titleAuthorMatch[1].trim();\r\n      const author = titleAuthorMatch[2].trim();\r\n\r\n      if (lines[1].includes('Your Bookmark')) {\r\n        console.log('Skipping entry: bookmark');\r\n        continue;\r\n      }\r\n      \r\n      const metadataMatch = lines[1].match(/^- Your (?:Highlight|Note) (?:at|on page \\d+)?\\s*(?:\\|?\\s*(?:location(?:s)? (\\d+(?:-\\d+)?)|page \\d+)?)?\\s*(?:\\|?\\s*Added on (.+))?$/);\r\n      if (!metadataMatch) {\r\n        console.log('Skipping entry: invalid metadata format', { line: lines[1] });\r\n        continue;\r\n      }\r\n\r\n      const location = metadataMatch[1];\r\n      const dateStr = metadataMatch[2];\r\n      const date = new Date(dateStr);\r\n\r\n      if (isNaN(date.getTime())) {\r\n        console.log('Skipping entry: invalid date', { dateStr });\r\n        continue;\r\n      }\r\n\r\n      const highlightContent = lines.slice(2).join('\\n').trim();\r\n      \r\n      // Common Kindle error messages and invalid content patterns\r\n      const invalidPatterns = [\r\n        'You have reached the clipping limit for this item',\r\n        'clipping limit',\r\n        'no more items',\r\n        'content is not available',\r\n        'unavailable for this book'\r\n      ];\r\n      \r\n      if (!highlightContent) {\r\n        console.log('Skipping entry: empty highlight content');\r\n        continue;\r\n      }\r\n      \r\n      const hasInvalidPattern = invalidPatterns.some(pattern =>\r\n        highlightContent.toLowerCase().includes(pattern.toLowerCase())\r\n      );\r\n      \r\n      // Skip if invalid pattern detected\r\n      if (hasInvalidPattern) {\r\n        console.log('Skipping entry: invalid content pattern detected', {\r\n          bookTitle,\r\n          content: highlightContent,\r\n          location\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Skip extremely short highlights or those that look like formatting errors\r\n      if (highlightContent.length < 3 ||\r\n          highlightContent.trim().split(/\\s+/).length < 2 ||\r\n          /^[.,;:!?-\\s]*$/.test(highlightContent)) {\r\n        console.log('Skipping entry: content too short or invalid', {\r\n          bookTitle,\r\n          content: highlightContent,\r\n          location\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Split highlight into chunks at sentence boundaries\r\n      const highlightChunks = splitText(highlightContent);\r\n      \r\n      // Validate chunks and provide detailed logging\r\n      highlightChunks.forEach((chunk, i) => {\r\n        if (chunk.length > 2000) {\r\n          console.error(`ERROR: Chunk exceeds Notion limit in \"${bookTitle}\": Chunk ${i + 1}/${highlightChunks.length} is ${chunk.length} characters`);\r\n          // Truncate chunk to ensure it fits\r\n          highlightChunks[i] = chunk.substring(0, 2000);\r\n        } else if (chunk.length > 1900) {\r\n          console.warn(`Warning: Chunk approaching Notion limit in \"${bookTitle}\": Chunk ${i + 1}/${highlightChunks.length} is ${chunk.length} characters`);\r\n        }\r\n      });\r\n\r\n      // Additional validation for very large highlights\r\n      if (highlightChunks.length > 10) {\r\n        console.warn(`Warning: Large number of chunks (${highlightChunks.length}) for highlight in \"${bookTitle}\". Consider reviewing the content.`);\r\n      }\r\n\r\n      const groupKey = `${bookTitle}|${location.split('-')[0]}`;\r\n      if (!highlightGroups.has(groupKey)) {\r\n        highlightGroups.set(groupKey, []);\r\n      }\r\n      const highlight = {\r\n        bookTitle,\r\n        author,\r\n        highlight: highlightChunks,\r\n        location,\r\n        date,\r\n        hash: generateHighlightHash(highlightChunks, location, bookTitle, author)\r\n      };\r\n      highlightGroups.get(groupKey)!.push(highlight);\r\n    } catch (error) {\r\n      console.error('Error parsing entry:', error);\r\n      continue;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function parseClippings(fileContent: string): Promise<Highlight[]> {\r\n  console.log('Starting to parse clippings file');\r\n  \r\n  // Split content into entries and filter empty ones\r\n  const entries = fileContent\r\n    .split('==========')\r\n    .map(entry => entry.trim())\r\n    .filter(entry => entry.length > 0);\r\n  \r\n  console.log(`Found ${entries.length} valid entries`);\r\n  \r\n  const highlightGroups = new Map<string, Highlight[]>();\r\n  const highlights: Highlight[] = [];\r\n\r\n  // Process entries in batches\r\n  for (let i = 0; i < entries.length; i += BATCH_SIZE) {\r\n    const batch = entries.slice(i, i + BATCH_SIZE);\r\n    console.log(`Processing batch ${Math.floor(i / BATCH_SIZE) + 1}/${Math.ceil(entries.length / BATCH_SIZE)}`);\r\n    await processBatch(batch, highlightGroups);\r\n  }\r\n\r\n  // Post-process all groups to handle duplicates\r\n  for (const [groupKey, group] of highlightGroups.entries()) {\r\n    console.debug(`Processing group: ${groupKey}`);\r\n    console.debug(`Group size before deduplication: ${group.length}`);\r\n    \r\n    // Log all hashes in group to check for potential conflicts\r\n    const hashMap = new Map<string, Array<{date: Date, location: string}>>();\r\n    group.forEach(h => {\r\n      if (!hashMap.has(h.hash)) {\r\n        hashMap.set(h.hash, []);\r\n      }\r\n      hashMap.get(h.hash)!.push({\r\n        date: h.date,\r\n        location: h.location\r\n      });\r\n    });\r\n\r\n    // Log any hash conflicts\r\n    hashMap.forEach((entries, hash) => {\r\n      if (entries.length > 1) {\r\n        console.warn(`Hash conflict detected in group ${groupKey}:`, {\r\n          hash,\r\n          conflictCount: entries.length,\r\n          entries: entries.map(e => ({\r\n            date: e.date.toISOString(),\r\n            location: e.location\r\n          }))\r\n        });\r\n      }\r\n    });\r\n\r\n    group.sort((a, b) => b.date.getTime() - a.date.getTime());\r\n    \r\n    const uniqueHighlights = new Set<string>();\r\n    const duplicateCount = {total: 0, byHash: new Map<string, number>()};\r\n    \r\n    for (const highlight of group) {\r\n      const isDuplicate = uniqueHighlights.has(highlight.hash);\r\n      \r\n      if (isDuplicate) {\r\n        duplicateCount.total++;\r\n        duplicateCount.byHash.set(\r\n          highlight.hash,\r\n          (duplicateCount.byHash.get(highlight.hash) || 0) + 1\r\n        );\r\n      } else {\r\n        uniqueHighlights.add(highlight.hash);\r\n        highlights.push(highlight);\r\n      }\r\n    }\r\n\r\n    console.debug(`Group ${groupKey} deduplication results:`, {\r\n      originalCount: group.length,\r\n      uniqueCount: uniqueHighlights.size,\r\n      duplicatesRemoved: duplicateCount.total,\r\n      duplicatesByHash: Array.from(duplicateCount.byHash.entries())\r\n    });\r\n  }\r\n\r\n  console.log(`Successfully parsed ${highlights.length} highlights`);\r\n  \r\n  // Log a sample highlight for verification\r\n  if (highlights.length > 0) {\r\n    console.debug('Sample highlight:', JSON.stringify(highlights[0], null, 2));\r\n  }\r\n  \r\n  // Verify all highlights have required fields\r\n  highlights.forEach((h: Highlight, index: number) => {\r\n    console.debug(`Verifying highlight ${index + 1}/${highlights.length}`);\r\n    if (!h.bookTitle || !h.author || !h.highlight || !h.location || !h.date) {\r\n      console.warn('Invalid highlight structure:', h);\r\n    }\r\n  });\r\n\r\n  return highlights;\r\n}\r\n", "export {\n  Cipher,\n  Cipheriv,\n  Decipher,\n  Decipheriv,\n  ECDH,\n  Sign,\n  Verify,\n  constants,\n  createCipheriv,\n  createDecipheriv,\n  createECDH,\n  createSign,\n  createVerify,\n  diffieHellman,\n  getCipherInfo,\n  hash,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  sign,\n  verify\n} from \"./index.mjs\";\nimport {\n  Cipher as Cipher2,\n  Cipheriv as Cipheriv2,\n  Decipher as Decipher2,\n  Decipheriv as Decipheriv2,\n  ECDH as ECDH2,\n  Sign as Sign2,\n  Verify as Verify2,\n  constants as constants2,\n  createCipheriv as createCipheriv2,\n  createDecipheriv as createDecipheriv2,\n  createECDH as createECDH2,\n  createSign as createSign2,\n  createVerify as createVerify2,\n  diffieHellman as diffieHellman2,\n  getCipherInfo as getCipherInfo2,\n  hash as hash2,\n  privateDecrypt as privateDecrypt2,\n  privateEncrypt as privateEncrypt2,\n  publicDecrypt as publicDecrypt2,\n  publicEncrypt as publicEncrypt2,\n  sign as sign2,\n  verify as verify2,\n  webcrypto as unenvCryptoWebcrypto\n} from \"./index.mjs\";\nconst workerdCrypto = process.getBuiltinModule(\"node:crypto\");\nexport const {\n  Certificate,\n  DiffieHellman,\n  DiffieHellmanGroup,\n  Hash,\n  Hmac,\n  KeyObject,\n  X509Certificate,\n  checkPrime,\n  checkPrimeSync,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  hkdf,\n  hkdfSync,\n  pbkdf2,\n  pbkdf2Sync,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  scrypt,\n  scryptSync,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  subtle,\n  timingSafeEqual\n} = workerdCrypto;\nexport const getRandomValues = workerdCrypto.getRandomValues.bind(\n  workerdCrypto.webcrypto\n);\nexport const webcrypto = {\n  CryptoKey: unenvCryptoWebcrypto.CryptoKey,\n  getRandomValues,\n  randomUUID,\n  subtle\n};\nconst fips = workerdCrypto.fips;\nimport { createCipher, createDecipher, pseudoRandomBytes } from \"./index.mjs\";\nexport default {\n  /**\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\n   */\n  Certificate,\n  Cipher: Cipher2,\n  Cipheriv: Cipheriv2,\n  Decipher: Decipher2,\n  Decipheriv: Decipheriv2,\n  ECDH: ECDH2,\n  Sign: Sign2,\n  Verify: Verify2,\n  X509Certificate,\n  // @ts-expect-error @types/node is out of date - this is a bug in typings\n  constants: constants2,\n  createCipheriv: createCipheriv2,\n  createDecipheriv: createDecipheriv2,\n  createECDH: createECDH2,\n  createSign: createSign2,\n  createVerify: createVerify2,\n  diffieHellman: diffieHellman2,\n  getCipherInfo: getCipherInfo2,\n  hash: hash2,\n  privateDecrypt: privateDecrypt2,\n  privateEncrypt: privateEncrypt2,\n  publicDecrypt: publicDecrypt2,\n  publicEncrypt: publicEncrypt2,\n  scrypt,\n  scryptSync,\n  sign: sign2,\n  verify: verify2,\n  // default-only export from unenv\n  createCipher,\n  createDecipher,\n  pseudoRandomBytes,\n  /**\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\n   */\n  DiffieHellman,\n  DiffieHellmanGroup,\n  Hash,\n  Hmac,\n  KeyObject,\n  checkPrime,\n  checkPrimeSync,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hkdf,\n  hkdfSync,\n  pbkdf2,\n  pbkdf2Sync,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  subtle,\n  timingSafeEqual,\n  // default-only export from workerd\n  fips,\n  // special-cased deep merged symbols\n  webcrypto\n};\n", "import { notImplemented, notImplementedClass } from \"../../../_internal/utils.mjs\";\nimport { getRandomValues } from \"./web.mjs\";\nconst MAX_RANDOM_VALUE_BYTES = 65536;\nexport const webcrypto = new Proxy(\n  globalThis.crypto,\n  {\n    get(_, key) {\n      if (key === \"CryptoKey\") {\n        return globalThis.CryptoKey;\n      }\n      if (typeof globalThis.crypto[key] === \"function\") {\n        return globalThis.crypto[key].bind(globalThis.crypto);\n      }\n      return globalThis.crypto[key];\n    }\n  }\n);\nexport const randomBytes = (size, cb) => {\n  const bytes = Buffer.alloc(size, 0, void 0);\n  for (let generated = 0; generated < size; generated += MAX_RANDOM_VALUE_BYTES) {\n    getRandomValues(\n      Uint8Array.prototype.slice.call(\n        bytes,\n        generated,\n        generated + MAX_RANDOM_VALUE_BYTES\n      )\n    );\n  }\n  if (typeof cb === \"function\") {\n    cb(null, bytes);\n    return void 0;\n  }\n  return bytes;\n};\nexport const fips = false;\nexport const constants = {};\nexport const checkPrime = notImplemented(\"crypto.checkPrime\");\nexport const checkPrimeSync = notImplemented(\n  \"crypto.checkPrimeSync\"\n);\nexport const createCipher = notImplemented(\"crypto.createCipher\");\nexport const createDecipher = notImplemented(\"crypto.createDecipher\");\nexport const pseudoRandomBytes = notImplemented(\"crypto.pseudoRandomBytes\");\nexport const createCipheriv = notImplemented(\n  \"crypto.createCipheriv\"\n);\nexport const createDecipheriv = notImplemented(\"crypto.createDecipheriv\");\nexport const createDiffieHellman = notImplemented(\"crypto.createDiffieHellman\");\nexport const createDiffieHellmanGroup = notImplemented(\"crypto.createDiffieHellmanGroup\");\nexport const createECDH = notImplemented(\"crypto.createECDH\");\nexport const createHash = notImplemented(\"crypto.createHash\");\nexport const createHmac = notImplemented(\"crypto.createHmac\");\nexport const createPrivateKey = notImplemented(\"crypto.createPrivateKey\");\nexport const createPublicKey = notImplemented(\"crypto.createPublicKey\");\nexport const createSecretKey = notImplemented(\"crypto.createSecretKey\");\nexport const createSign = notImplemented(\"crypto.createSign\");\nexport const createVerify = notImplemented(\n  \"crypto.createVerify\"\n);\nexport const diffieHellman = notImplemented(\n  \"crypto.diffieHellman\"\n);\nexport const generatePrime = notImplemented(\n  \"crypto.generatePrime\"\n);\nexport const generatePrimeSync = notImplemented(\"crypto.generatePrimeSync\");\nexport const getCiphers = notImplemented(\"crypto.getCiphers\");\nexport const getCipherInfo = notImplemented(\n  \"crypto.getCipherInfo\"\n);\nexport const getCurves = notImplemented(\"crypto.getCurves\");\nexport const getDiffieHellman = notImplemented(\"crypto.getDiffieHellman\");\nexport const getHashes = notImplemented(\"crypto.getHashes\");\nexport const hkdf = notImplemented(\"crypto.hkdf\");\nexport const hkdfSync = notImplemented(\"crypto.hkdfSync\");\nexport const pbkdf2 = notImplemented(\"crypto.pbkdf2\");\nexport const pbkdf2Sync = notImplemented(\"crypto.pbkdf2Sync\");\nexport const generateKeyPair = notImplemented(\"crypto.generateKeyPair\");\nexport const generateKeyPairSync = notImplemented(\"crypto.generateKeyPairSync\");\nexport const generateKey = notImplemented(\"crypto.generateKey\");\nexport const generateKeySync = notImplemented(\"crypto.generateKeySync\");\nexport const privateDecrypt = notImplemented(\n  \"crypto.privateDecrypt\"\n);\nexport const privateEncrypt = notImplemented(\n  \"crypto.privateEncrypt\"\n);\nexport const publicDecrypt = notImplemented(\n  \"crypto.publicDecrypt\"\n);\nexport const publicEncrypt = notImplemented(\n  \"crypto.publicEncrypt\"\n);\nexport const randomFill = notImplemented(\"crypto.randomFill\");\nexport const randomFillSync = notImplemented(\n  \"crypto.randomFillSync\"\n);\nexport const randomInt = notImplemented(\"crypto.randomInt\");\nexport const scrypt = notImplemented(\"crypto.scrypt\");\nexport const scryptSync = notImplemented(\"crypto.scryptSync\");\nexport const sign = notImplemented(\"crypto.sign\");\nexport const setEngine = notImplemented(\"crypto.setEngine\");\nexport const timingSafeEqual = notImplemented(\"crypto.timingSafeEqual\");\nexport const getFips = notImplemented(\"crypto.getFips\");\nexport const setFips = notImplemented(\"crypto.setFips\");\nexport const verify = notImplemented(\"crypto.verify\");\nexport const secureHeapUsed = notImplemented(\n  \"crypto.secureHeapUsed\"\n);\nexport const hash = notImplemented(\"crypto.hash\");\nexport const Certificate = notImplementedClass(\n  \"crypto.Certificate\"\n);\nexport const Cipher = notImplementedClass(\n  \"crypto.Cipher\"\n);\nexport const Cipheriv = notImplementedClass(\n  \"crypto.Cipheriv\"\n  // @ts-expect-error not typed yet\n);\nexport const Decipher = notImplementedClass(\n  \"crypto.Decipher\"\n);\nexport const Decipheriv = notImplementedClass(\n  \"crypto.Decipheriv\"\n  // @ts-expect-error not typed yet\n);\nexport const DiffieHellman = notImplementedClass(\n  \"crypto.DiffieHellman\"\n);\nexport const DiffieHellmanGroup = notImplementedClass(\n  \"crypto.DiffieHellmanGroup\"\n);\nexport const ECDH = notImplementedClass(\n  \"crypto.ECDH\"\n);\nexport const Hash = notImplementedClass(\n  \"crypto.Hash\"\n);\nexport const Hmac = notImplementedClass(\n  \"crypto.Hmac\"\n);\nexport const KeyObject = notImplementedClass(\n  \"crypto.KeyObject\"\n);\nexport const Sign = notImplementedClass(\n  \"crypto.Sign\"\n);\nexport const Verify = notImplementedClass(\n  \"crypto.Verify\"\n);\nexport const X509Certificate = notImplementedClass(\n  \"crypto.X509Certificate\"\n);\n", "import type { KVStore } from './kvStore';\r\nimport type { NotionToken } from '../types/notion';\r\n\r\nconst TOKEN_KEY_PREFIX = 'notion_token:';\r\nconst DB_KEY_PREFIX = 'notion_db:';\r\n\r\nexport class NotionStore {\r\n  constructor(private kvStore: KVStore) {}\r\n\r\n  private getTokenKey(workspaceId: string): string {\r\n    return `${TOKEN_KEY_PREFIX}${workspaceId}`;\r\n  }\r\n\r\n  private getDbKey(workspaceId: string): string {\r\n    return `${DB_KEY_PREFIX}${workspaceId}`;\r\n  }\r\n\r\n  async getToken(workspaceId: string): Promise<NotionToken | null> {\r\n    const tokenJson = await this.kvStore.get(this.getTokenKey(workspaceId));\r\n    return tokenJson ? JSON.parse(tokenJson) : null;\r\n  }\r\n\r\n  async setToken(token: NotionToken): Promise<void> {\r\n    console.log('[NotionStore] Setting token...', {\r\n      hasAccessToken: !!token.access_token,\r\n      tokenType: token.token_type,\r\n      hasBotId: !!token.bot_id,\r\n      workspaceName: token.workspace_name,\r\n      workspaceId: token.workspace_id,\r\n      ownerType: token.owner?.type\r\n    });\r\n\r\n    // Validate required fields\r\n    if (!token.access_token) {\r\n      throw new Error('Invalid token data - missing access_token');\r\n    }\r\n    if (token.token_type !== 'bearer') {\r\n      throw new Error('Invalid token data - token_type must be \"bearer\"');\r\n    }\r\n    if (!token.bot_id) {\r\n      throw new Error('Invalid token data - missing bot_id');\r\n    }\r\n    if (!token.workspace_name) {\r\n      throw new Error('Invalid token data - missing workspace_name');\r\n    }\r\n    if (!token.workspace_id) {\r\n      throw new Error('Invalid token data - missing workspace_id');\r\n    }\r\n    if (!token.owner?.type) {\r\n      throw new Error('Invalid token data - missing owner.type');\r\n    }\r\n\r\n    // Validate KVStore\r\n    if (!this.kvStore) {\r\n      throw new Error('KVStore is not initialized');\r\n    }\r\n\r\n    const key = this.getTokenKey(token.workspace_id);\r\n    const tokenJson = JSON.stringify(token);\r\n    \r\n    console.log('[NotionStore] Preparing to store token:', {\r\n      key,\r\n      tokenLength: tokenJson.length,\r\n      workspaceId: token.workspace_id,\r\n      hasKVStore: !!this.kvStore,\r\n      kvStoreType: this.kvStore.constructor.name\r\n    });\r\n\r\n    try {\r\n      await this.kvStore.set(key, tokenJson);\r\n      console.log('[NotionStore] Token stored successfully');\r\n    } catch (error) {\r\n      console.error('[NotionStore] Failed to store token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteToken(workspaceId: string): Promise<void> {\r\n    await this.kvStore.delete(this.getTokenKey(workspaceId));\r\n  }\r\n\r\n  async getDatabaseId(workspaceId: string): Promise<string | null> {\r\n    return this.kvStore.get(this.getDbKey(workspaceId));\r\n  }\r\n\r\n  async setDatabaseId(workspaceId: string, databaseId: string): Promise<void> {\r\n    await this.kvStore.set(this.getDbKey(workspaceId), databaseId);\r\n  }\r\n}\r\n", "import { Client, isFullPage } from '@notionhq/client';\r\nimport { createHash } from 'crypto';\r\nimport axios from 'axios';\r\nimport { NotionStore } from './notionStore';\r\nimport type { Highlight } from '../types/highlight';\r\nimport type { NotionToken } from '../types/notion';\r\nimport { withRetry } from '../utils/retry';\r\nimport { KVStore } from './kvStore';\r\n\r\n// Make Highlight type available for external use\r\nexport type { Highlight };\r\n\r\n// Define necessary types\r\ntype PageObjectResponse = {\r\n  id: string;\r\n  object: 'page';\r\n  properties: {\r\n    [key: string]: {\r\n      type: string;\r\n      id?: string;\r\n      title?: Array<{ text: { content: string } }>;\r\n      rich_text?: Array<{ text: { content: string } }>;\r\n      number?: number;\r\n      [key: string]: any;\r\n    };\r\n  };\r\n};\r\n\r\ninterface NotionHighlight extends Required<Highlight> {\r\n  version: number;\r\n  lastModified: Date;\r\n}\r\n\r\n// Enhanced book cover fetching with retry mechanism\r\nasync function getBookCoverUrl(title: string, author: string): Promise<string | null> {\r\n  try {\r\n    // First try OpenLibrary with retry\r\n    const openLibraryCover = await withRetry(async () => {\r\n      const response = await axios.get(\r\n        `https://openlibrary.org/search.json?q=${encodeURIComponent(title)}+${encodeURIComponent(author)}&limit=1`\r\n      );\r\n      \r\n      if (response.data?.docs?.[0]?.cover_i) {\r\n        return `https://covers.openlibrary.org/b/id/${response.data.docs[0].cover_i}-L.jpg`;\r\n      }\r\n      return null;\r\n    }, 3, 1000);\r\n\r\n    if (openLibraryCover) {\r\n      return openLibraryCover;\r\n    }\r\n\r\n    // Fallback to Google Books with retry\r\n    return await withRetry(async () => {\r\n      const response = await axios.get(\r\n        `https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(title)}+inauthor:${encodeURIComponent(author)}&maxResults=1`\r\n      );\r\n      \r\n      if (response.data?.items?.[0]?.volumeInfo?.imageLinks?.thumbnail) {\r\n        return response.data.items[0].volumeInfo.imageLinks.thumbnail.replace('zoom=1', 'zoom=2');\r\n      }\r\n      return null;\r\n    }, 3, 1000);\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching book cover:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Add version number when processing highlights for Notion\r\nfunction addVersionToHighlight(highlight: Highlight): NotionHighlight {\r\n  return {\r\n    ...highlight,\r\n    version: highlight.version ?? 1, // Default to version 1 if not specified\r\n    lastModified: highlight.lastModified ?? new Date()\r\n  };\r\n}\r\n\r\nexport interface NotionBookPage {\r\n  title: string;\r\n  author: string;\r\n  highlights: Highlight[];\r\n  lastHighlighted: Date;\r\n  lastSynced: Date;\r\n}\r\n\r\n// This function is only kept for backward compatibility with existing data\r\n// New highlights should already come with their hash from parseClippings\r\nfunction generateHighlightHash(highlight: string[], location: string, bookTitle: string, author: string): string {\r\n  // Generate hash consistently with parseClippings.ts\r\n  const firstChunk = highlight[0] || '';\r\n  const content = firstChunk + location + bookTitle + author;\r\n  // Generate full hash but return first 8 characters for Notion storage efficiency\r\n  // while maintaining hash strength and allowing flexibility to use more chars if needed\r\n  return createHash('sha256').update(content).digest('hex').slice(0, 8);\r\n}\r\n\r\nimport { truncateHash } from '../utils/notionUtils.js';\r\n\r\nfunction storeHashes(hashes: string[]): string {\r\n  // Deduplicate and truncate hashes for Notion storage\r\n  const uniqueHashes = Array.from(new Set(\r\n    hashes.map(h => truncateHash(h))\r\n  ));\r\n  let hashString = '';\r\n\r\n  for (const hash of uniqueHashes) {\r\n    const newLength = hashString.length + hash.length + 1; // +1 for comma\r\n    if (newLength > 2000) {\r\n      console.warn('Truncating hash list at 2000 characters');\r\n      break;\r\n    }\r\n    hashString += (hashString ? ',' : '') + hash;\r\n  }\r\n\r\n  console.debug('Stored hashes info:', {\r\n    originalCount: hashes.length,\r\n    uniqueCount: uniqueHashes.length,\r\n    storedLength: hashString.length,\r\n    sampleHashes: uniqueHashes.slice(0, 3)\r\n  });\r\n  \r\n  return hashString;\r\n}\r\n\r\n// Client management with better initialization and storage\r\nlet _client: Client | null = null;\r\nlet _databaseId: string | null = null;\r\nlet _store: NotionStore | null = null;\r\n\r\nexport async function setOAuthToken(store: NotionStore, tokenData: NotionToken): Promise<void> {\r\n  if (!store) {\r\n    throw new Error('[OAuth] NotionStore is required');\r\n  }\r\n\r\n  try {\r\n    console.log('[OAuth] Validating token data...', {\r\n      hasWorkspaceId: !!tokenData?.workspace_id,\r\n      hasAccessToken: !!tokenData?.access_token,\r\n      hasOwner: !!tokenData?.owner,\r\n      ownerType: tokenData?.owner?.type,\r\n      hasUserId: !!tokenData?.owner?.user?.id\r\n    });\r\n\r\n    if (!tokenData?.workspace_id || !tokenData?.access_token) {\r\n      throw new Error('Invalid token data - missing required fields');\r\n    }\r\n\r\n    const workspaceId = tokenData.workspace_id;\r\n    const userId = tokenData.owner?.user?.id || '';\r\n\r\n    console.log('[OAuth] Preparing to store token...', {\r\n      workspaceId,\r\n      userId,\r\n      hasDatabaseId: !!_databaseId,\r\n      hasStore: !!store,\r\n      storeType: store.constructor.name\r\n    });\r\n\r\n    // Store the token data first\r\n    console.log('[OAuth] Storing token data...');\r\n    await store.setToken(tokenData);\r\n    \r\n    // Set global store reference\r\n    console.log('[OAuth] Updating global store reference...');\r\n    _store = store;\r\n\r\n    // Only initialize client if it hasn't been initialized yet\r\n    if (!_client) {\r\n      console.log('[OAuth] Initializing Notion client...');\r\n      _client = new Client({\r\n        auth: tokenData.access_token,\r\n      });\r\n    }\r\n\r\n    // Find the database\r\n    console.log('[OAuth] Searching for Kindle Highlights database...');\r\n    try {\r\n      await findKindleHighlightsDatabase();\r\n    } catch (error) {\r\n      console.error('[OAuth] Error finding database:', error);\r\n      // Continue with token storage even if database search fails\r\n    }\r\n\r\n    // If we found the database ID, update it in store\r\n    if (_databaseId) {\r\n      console.log('[OAuth] Found database ID:', _databaseId);\r\n      \r\n      try {\r\n        console.log('[OAuth] Storing database ID...');\r\n        await store.setDatabaseId(workspaceId, _databaseId);\r\n        console.log('[OAuth] Database ID storage updated');\r\n      } catch (dbError) {\r\n        console.error('[OAuth] Failed to store database ID:', dbError);\r\n        // Don't throw here, as token is already stored\r\n      }\r\n    } else {\r\n      console.log('[OAuth] No database ID found - continuing with token storage only');\r\n    }\r\n\r\n    console.log('[OAuth] OAuth flow completed successfully');\r\n  } catch (error) {\r\n    const errorDetails = {\r\n      message: error instanceof Error ? error.message : 'Unknown error',\r\n      stack: error instanceof Error ? error.stack : undefined,\r\n      type: error?.constructor?.name\r\n    };\r\n    console.error('[OAuth] Failed to set OAuth token:', errorDetails);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getClient(): Promise<Client> {\r\n  try {\r\n    if (!_client && _store) {\r\n      // Get workspace ID from environment or configuration\r\n      const workspaceId = process.env.NOTION_WORKSPACE_ID;\r\n      if (!workspaceId) {\r\n        throw new Error('No workspace ID configured');\r\n      }\r\n\r\n      const token = await _store.getToken(workspaceId);\r\n      if (!token) {\r\n        throw new Error('No OAuth token available');\r\n      }\r\n\r\n      _client = new Client({\r\n        auth: token.access_token,\r\n      });\r\n\r\n      // Also retrieve database ID if available\r\n      _databaseId = await _store.getDatabaseId(workspaceId);\r\n    }\r\n    if (!_client) {\r\n      throw new Error('Notion client not initialized and no store available');\r\n    }\r\n    return _client;\r\n  } catch (error) {\r\n    console.error('Failed to get Notion client:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function refreshToken(): Promise<void> {\r\n  try {\r\n    if (!_store) {\r\n      throw new Error('No store available');\r\n    }\r\n\r\n    const workspaceId = process.env.NOTION_WORKSPACE_ID;\r\n    if (!workspaceId) {\r\n      throw new Error('No workspace ID configured');\r\n    }\r\n\r\n    const token = await _store.getToken(workspaceId);\r\n    if (!token) {\r\n      throw new Error('No token to refresh');\r\n    }\r\n\r\n    if (!token?.refresh_token) {\r\n      console.log('No refresh token available - token may be from internal integration');\r\n      return;\r\n    }\r\n\r\n    const response = await axios.post('https://api.notion.com/v1/oauth/token', {\r\n      grant_type: 'refresh_token',\r\n      refresh_token: token.refresh_token,\r\n    }, {\r\n      auth: {\r\n        username: process.env.NOTION_OAUTH_CLIENT_ID!,\r\n        password: process.env.NOTION_OAUTH_CLIENT_SECRET!,\r\n      }\r\n    });\r\n\r\n    if (!response.data?.access_token) {\r\n      throw new Error('Invalid refresh token response');\r\n    }\r\n\r\n    await setOAuthToken(_store, response.data);\r\n  } catch (error) {\r\n    console.error('Failed to refresh token:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function clearAuth(): Promise<void> {\r\n  try {\r\n    if (!_store) {\r\n      throw new Error('No store available');\r\n    }\r\n\r\n    const workspaceId = process.env.NOTION_WORKSPACE_ID;\r\n    if (workspaceId) {\r\n      await _store.deleteToken(workspaceId);\r\n    }\r\n\r\n    _client = null;\r\n    _databaseId = null;\r\n  } catch (error) {\r\n    console.error('Failed to clear auth:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function findKindleHighlightsDatabase() {\r\n  if (!_client) {\r\n    throw new Error('Notion client not initialized');\r\n  }\r\n  \r\n  const client = _client; // Cache the non-null client at the start\r\n  \r\n  try {\r\n    console.debug('Searching for Kindle Highlights database...');\r\n    // First try to find database using search\r\n    const response = await client.search({\r\n      query: 'Highlights',\r\n      page_size: 100,\r\n      // Per Notion API v2023-09-01, use this filter syntax\r\n      filter: { value: 'database', property: 'object' }\r\n    });\r\n\r\n    console.debug('Search results:', {\r\n      resultCount: response.results.length,\r\n      hasMore: response.has_more,\r\n      nextCursor: response.next_cursor\r\n    });\r\n\r\n    let searchResults = response;\r\n    if (response.results.length === 0) {\r\n      // If no results with query, try without query\r\n      console.debug('No results found, trying without query...');\r\n      searchResults = await client.search({\r\n        filter: {\r\n          property: 'object',\r\n          value: 'database'\r\n        },\r\n        page_size: 100\r\n      });\r\n      console.debug('Fallback search results:', {\r\n        resultCount: searchResults.results.length\r\n      });\r\n    }\r\n    \r\n    for (const result of searchResults.results) {\r\n      if (result.object !== 'database') {\r\n        console.debug('Skipping non-database result:', result.object);\r\n        continue;\r\n      }\r\n      \r\n      try {\r\n        console.debug('Checking database:', result.id);\r\n        const db = await client.databases.retrieve({ database_id: result.id });\r\n        const props = db.properties;\r\n        \r\n        const requiredProps = {\r\n          'Title': 'title',\r\n          'Author': 'rich_text',\r\n          'Highlights': 'number',\r\n          'Last Highlighted': 'date',\r\n          'Last Synced': 'date',\r\n          'Highlight Hash': 'rich_text'\r\n        };\r\n\r\n        const missingProps = Object.entries(requiredProps)\r\n          .filter(([name, type]) => props[name]?.type !== type)\r\n          .map(([name, type]) => ({\r\n            name,\r\n            expectedType: type,\r\n            actualType: props[name]?.type || 'missing'\r\n          }));\r\n\r\n        console.debug('Database property check:', {\r\n          databaseId: result.id,\r\n          hasAllProps: missingProps.length === 0,\r\n          missingProps\r\n        });\r\n\r\n        if (missingProps.length === 0) {\r\n          _databaseId = result.id;\r\n          console.debug('Found matching database:', result.id);\r\n          break;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking database:', error);\r\n      }\r\n    }\r\n    \r\n    if (!_databaseId) {\r\n      throw new Error('Could not find a compatible Kindle Highlights database. Please ensure you have copied the template to your workspace.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error finding database:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getExistingHighlightHashes(pageId: string): Promise<Set<string>> {\r\n  try {\r\n    const client = await getClient();\r\n    const page = await client.pages.retrieve({ page_id: pageId });\r\n    \r\n    if (!isFullPage(page)) {\r\n      return new Set();\r\n    }\r\n\r\n    const hashProperty = page.properties['Highlight Hash'];\r\n    \r\n    // Type check for rich_text property\r\n    if (hashProperty?.type !== 'rich_text') {\r\n      console.debug('Hash property is not rich_text type', {\r\n        pageId,\r\n        actualType: hashProperty?.type\r\n      });\r\n      return new Set();\r\n    }\r\n\r\n    const richTextProperty = hashProperty as {\r\n      type: 'rich_text';\r\n      rich_text: Array<{\r\n        type: string;\r\n        text?: { content: string };\r\n        plain_text?: string;\r\n      }>;\r\n    };\r\n\r\n    // Log the raw hash property for debugging\r\n    console.debug('Retrieved hash property:', {\r\n      pageId,\r\n      propertyType: richTextProperty.type,\r\n      hasRichText: Array.isArray(richTextProperty.rich_text),\r\n      firstTextType: richTextProperty.rich_text[0]?.type,\r\n      rawContent: richTextProperty.rich_text[0]?.plain_text\r\n    });\r\n\r\n    if (richTextProperty.rich_text[0]?.type === 'text' &&\r\n        richTextProperty.rich_text[0].plain_text) {\r\n      const hashString = hashProperty.rich_text[0].plain_text;\r\n      // Hashes in Notion are already truncated, just split and filter empty\r\n      const hashes = new Set(hashString.split(',').filter(h => h.trim()));\r\n      \r\n      console.debug('Parsed existing hashes:', {\r\n        pageId,\r\n        hashCount: hashes.size,\r\n        sampleHashes: Array.from(hashes).slice(0, 5),\r\n        totalHashString: hashString.length,\r\n        hashStringPreview: hashString.substring(0, 100) + '...'\r\n      });\r\n      \r\n      return hashes;\r\n    }\r\n    \r\n    console.debug('No existing hashes found', { pageId });\r\n    return new Set();\r\n  } catch (error) {\r\n    console.error('Error getting existing highlight hashes:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction splitAtSentences(text: string, maxLength: number): string[] {\r\n  const sentences = text.split(/(?<=[.!?])\\s+/);\r\n  const chunks: string[] = [];\r\n  let currentChunk = '';\r\n  \r\n  for (const sentence of sentences) {\r\n    if ((currentChunk + sentence).length <= maxLength) {\r\n      currentChunk += (currentChunk ? ' ' : '') + sentence;\r\n    } else {\r\n      if (currentChunk) chunks.push(currentChunk);\r\n      currentChunk = sentence;\r\n    }\r\n  }\r\n  \r\n  if (currentChunk) chunks.push(currentChunk);\r\n  return chunks;\r\n}\r\n\r\nexport interface NotionClientConfig {\r\n  store: NotionStore;\r\n  clientId: string;\r\n  clientSecret: string;\r\n  redirectUri: string;\r\n}\r\n\r\nexport class NotionClient {\r\n  private store: NotionStore;\r\n  private clientId: string;\r\n  private clientSecret: string;\r\n  private redirectUri: string;\r\n\r\n  constructor(config: NotionClientConfig) {\r\n    this.store = config.store;\r\n    this.clientId = config.clientId;\r\n    this.clientSecret = config.clientSecret;\r\n    this.redirectUri = config.redirectUri;\r\n    _store = config.store; // Set the global store reference\r\n  }\r\n\r\n  async exchangeCodeForToken(code: string): Promise<NotionToken> {\r\n    if (!code) {\r\n      throw new Error('No authorization code provided');\r\n    }\r\n\r\n    console.log('[NotionClient] Exchanging code for token...', {\r\n      hasCode: !!code,\r\n      redirectUri: this.redirectUri,\r\n      hasClientId: !!this.clientId,\r\n      hasClientSecret: !!this.clientSecret\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post('https://api.notion.com/v1/oauth/token', {\r\n        grant_type: 'authorization_code',\r\n        code,\r\n        redirect_uri: this.redirectUri\r\n      }, {\r\n        auth: {\r\n          username: this.clientId,\r\n          password: this.clientSecret\r\n        }\r\n      });\r\n\r\n      console.log('[NotionClient] Received OAuth response:', {\r\n        status: response.status,\r\n        hasData: !!response.data,\r\n        dataKeys: response.data ? Object.keys(response.data) : []\r\n      });\r\n\r\n      // Full response logging for debugging\r\n      console.log('[NotionClient] Full OAuth response:', JSON.stringify(response.data, null, 2));\r\n\r\n      // Validate required fields\r\n      const tokenData = response.data;\r\n      const requiredFields = [\r\n        'access_token',\r\n        'workspace_id',\r\n        'bot_id',\r\n        'workspace_name',\r\n        ['owner', 'type']\r\n      ];\r\n\r\n      for (const field of requiredFields) {\r\n        if (Array.isArray(field)) {\r\n          const [parent, child] = field;\r\n          if (!tokenData?.[parent]?.[child]) {\r\n            throw new Error(`Missing ${parent}.${child} in response`);\r\n          }\r\n        } else if (!tokenData?.[field]) {\r\n          throw new Error(`Missing ${field} in response`);\r\n        }\r\n      }\r\n\r\n      const token: NotionToken = {\r\n        access_token: tokenData.access_token,\r\n        token_type: 'bearer',\r\n        bot_id: tokenData.bot_id,\r\n        workspace_name: tokenData.workspace_name,\r\n        workspace_icon: tokenData.workspace_icon || null,\r\n        workspace_id: tokenData.workspace_id,\r\n        owner: {\r\n          type: tokenData.owner.type,\r\n          workspace: tokenData.owner.workspace,\r\n          user: tokenData.owner.user\r\n        },\r\n        duplicated_template_id: tokenData.duplicated_template_id || null,\r\n        request_id: tokenData.request_id,\r\n        refresh_token: tokenData.refresh_token,\r\n        expires_in: tokenData.expires_in\r\n      };\r\n\r\n      console.log('[NotionClient] Constructed token object:', {\r\n        hasAccessToken: !!token.access_token,\r\n        workspaceId: token.workspace_id,\r\n        workspaceName: token.workspace_name,\r\n        ownerType: token.owner.type\r\n      });\r\n\r\n      console.log('[NotionClient] Processing token...');\r\n      \r\n      // Initialize the client first\r\n      console.log('[NotionClient] Initializing client...');\r\n      _client = new Client({\r\n        auth: token.access_token\r\n      });\r\n      \r\n      // Set store and store token\r\n      console.log('[NotionClient] Storing token...');\r\n      _store = this.store;\r\n      await this.store.setToken(token);\r\n      console.log('[NotionClient] Token stored successfully');\r\n      \r\n      // Search for database after client is initialized\r\n      console.log('[NotionClient] Searching for database...');\r\n      try {\r\n        await findKindleHighlightsDatabase();\r\n        if (_databaseId) {\r\n          console.log('[NotionClient] Found database:', _databaseId);\r\n          await this.store.setDatabaseId(token.workspace_id, _databaseId);\r\n        }\r\n      } catch (error) {\r\n        console.error('[NotionClient] Database search error:', error);\r\n        // Continue even if database search fails\r\n      }\r\n      \r\n\r\n      return token;\r\n    } catch (error) {\r\n      console.error('Failed to exchange code for token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateNotionDatabase(highlights: Highlight[], workspaceId: string, onProgress?: () => void): Promise<void> {\r\n  try {\r\n    const client = await getClient();\r\n    \r\n    // Ensure we have found the Kindle Highlights database\r\n    if (!_databaseId) {\r\n      console.log('Finding Kindle Highlights database...');\r\n      await findKindleHighlightsDatabase();\r\n      if (!_databaseId) {\r\n        throw new Error('Could not find Kindle Highlights database. Please ensure you have copied the template to your workspace.');\r\n      }\r\n      console.log('Found Kindle Highlights database:', _databaseId);\r\n    }\r\n\r\n    // Group highlights by book with better error handling\r\n    const books = highlights.reduce<Record<string, NotionBookPage>>((acc, highlight) => {\r\n      try {\r\n        const highlightDate = highlight.date instanceof Date ? highlight.date : new Date(highlight.date);\r\n        \r\n        if (!acc[highlight.bookTitle]) {\r\n          acc[highlight.bookTitle] = {\r\n            title: highlight.bookTitle,\r\n            author: highlight.author,\r\n            highlights: [],\r\n            lastHighlighted: highlightDate,\r\n            lastSynced: new Date()\r\n          };\r\n        }\r\n\r\n        acc[highlight.bookTitle].highlights.push({\r\n          ...highlight,\r\n          date: highlightDate\r\n        });\r\n        \r\n        // Update lastHighlighted if this highlight is newer\r\n        if (highlightDate > acc[highlight.bookTitle].lastHighlighted) {\r\n          acc[highlight.bookTitle].lastHighlighted = highlightDate;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing highlight:', error);\r\n      }\r\n      \r\n      return acc;\r\n    }, {});\r\n\r\n    // Process each book with better error recovery\r\n    for (const book of Object.values(books)) {\r\n      try {\r\n        // Check if page already exists\r\n        const { results } = await client.databases.query({\r\n          database_id: _databaseId,\r\n          filter: {\r\n            property: 'Title',\r\n            title: {\r\n              equals: book.title\r\n            }\r\n          }\r\n        });\r\n\r\n        const existingPageId = results.length > 0 ? results[0].id : undefined;\r\n        const existingHashes = existingPageId ? \r\n          await getExistingHighlightHashes(existingPageId) : \r\n          new Set<string>();\r\n\r\n        // Get book cover with fallback\r\n        const coverUrl = await getBookCoverUrl(book.title, book.author);\r\n\r\n        if (existingPageId) {\r\n          // Update existing page with better error handling\r\n          const existingPage = await client.pages.retrieve({ page_id: existingPageId });\r\n          let currentCount = 0;\r\n          if (isFullPage(existingPage) && existingPage.properties.Highlights.type === 'number') {\r\n            currentCount = existingPage.properties.Highlights.number || 0;\r\n          }\r\n\r\n          await client.pages.update({\r\n            page_id: existingPageId,\r\n            icon: coverUrl ? {\r\n              type: 'external',\r\n              external: { url: coverUrl }\r\n            } : undefined,\r\n            properties: {\r\n              Title: {\r\n                title: [{ text: { content: book.title } }]\r\n              },\r\n              Author: {\r\n                rich_text: [{ text: { content: book.author } }]\r\n              },\r\n              Highlights: {\r\n                number: currentCount + book.highlights.filter(h => !existingHashes.has(h.hash)).length\r\n              },\r\n              'Last Highlighted': {\r\n                date: { start: book.lastHighlighted.toISOString() }\r\n              },\r\n              'Last Synced': {\r\n                date: { start: new Date().toISOString() }\r\n              },\r\n              'Highlight Hash': {\r\n                rich_text: [{\r\n                  text: {\r\n                    content: ((existingHashes.size > 0 ? [...existingHashes] : [])\r\n                      .concat(book.highlights.map(h => {\r\n                        const truncatedHash = h.hash.slice(0, 8);\r\n                        console.debug('Adding new hash:', {\r\n                          fullHash: h.hash,\r\n                          truncatedHash,\r\n                          location: h.location,\r\n                          bookTitle: book.title\r\n                        });\r\n                        return truncatedHash;\r\n                      }))\r\n                      .filter((h, i, arr) => arr.indexOf(h) === i) // Remove duplicates\r\n                      .join(','))\r\n                      .substring(0, 1900) // Leave some buffer for Notion's limit\r\n                  }\r\n                }]\r\n              }\r\n            }\r\n          });\r\n\r\n          // Log existing hashes before filtering\r\n          console.debug('Deduplication check:', {\r\n            bookTitle: book.title,\r\n            totalHighlights: book.highlights.length,\r\n            existingHashCount: existingHashes.size,\r\n            sampleExistingHashes: Array.from(existingHashes).slice(0, 5)\r\n          });\r\n\r\n          // Check for potential hash conflicts\r\n          const hashConflicts = new Map<string, Array<{location: string}>>();\r\n          book.highlights.forEach(h => {\r\n            if (hashConflicts.has(h.hash)) {\r\n              hashConflicts.get(h.hash)!.push({ location: h.location });\r\n            } else {\r\n              hashConflicts.set(h.hash, [{ location: h.location }]);\r\n            }\r\n          });\r\n\r\n          // Log any hash conflicts within current batch\r\n          hashConflicts.forEach((locations, hash) => {\r\n            if (locations.length > 1) {\r\n              console.warn('Hash conflict in current batch:', {\r\n                hash,\r\n                bookTitle: book.title,\r\n                conflictCount: locations.length,\r\n                locations\r\n              });\r\n            }\r\n          });\r\n\r\n          // Filter out duplicates and log results\r\n          const newHighlights = book.highlights.filter(h => {\r\n            // existingHashes already contains 8-char hashes, so truncate incoming hash to match\r\n            const truncatedHash = h.hash.slice(0, 8);\r\n            const isDuplicate = existingHashes.has(truncatedHash);\r\n            if (isDuplicate) {\r\n              console.debug('Found duplicate:', {\r\n                fullHash: h.hash,\r\n                truncatedHash,\r\n                location: h.location,\r\n                bookTitle: book.title\r\n              });\r\n            }\r\n            if (isDuplicate) {\r\n              console.debug('Skipping duplicate highlight:', {\r\n                hash: h.hash,\r\n                location: h.location,\r\n                bookTitle: book.title\r\n              });\r\n            }\r\n            return !isDuplicate;\r\n          });\r\n\r\n          console.debug('Deduplication results:', {\r\n            bookTitle: book.title,\r\n            originalCount: book.highlights.length,\r\n            newCount: newHighlights.length,\r\n            duplicatesSkipped: book.highlights.length - newHighlights.length\r\n          });\r\n\r\n          const batchSize = 100;\r\n          for (let i = 0; i < newHighlights.length; i += batchSize) {\r\n            onProgress?.();\r\n            \r\n            const batchHighlights = newHighlights.slice(i, i + batchSize);\r\n            const blocks = batchHighlights.flatMap(highlight => {\r\n              const highlightText = Array.isArray(highlight.highlight) ? \r\n                highlight.highlight.join('\\n\\n') : highlight.highlight;\r\n              const chunks = splitAtSentences(highlightText, 2000);\r\n              \r\n              return [\r\n                ...chunks.map((chunk, index) => ({\r\n                  object: 'block' as const,\r\n                  type: 'paragraph' as const,\r\n                  paragraph: {\r\n                    rich_text: [\r\n                      {\r\n                        type: 'text' as const,\r\n                        text: { content: chunk }\r\n                      },\r\n                      ...(index === chunks.length - 1 ? [{\r\n                        type: 'text' as const,\r\n                        text: {\r\n                          content: `\\n\uD83D\uDCCD Location: ${highlight.location} | \uD83D\uDCC5 Added: ${highlight.date.toLocaleString()}`\r\n                        },\r\n                        annotations: {\r\n                          color: 'gray' as const\r\n                        }\r\n                      }] : [])\r\n                    ]\r\n                  }\r\n                })),\r\n                {\r\n                  object: 'block' as const,\r\n                  type: 'paragraph' as const,\r\n                  paragraph: {\r\n                    rich_text: []\r\n                  }\r\n                }\r\n              ];\r\n            });\r\n\r\n            if (blocks.length > 0) {\r\n              await client.blocks.children.append({\r\n                block_id: existingPageId,\r\n                children: blocks\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          // Create new page with better error handling\r\n          const newPage = await client.pages.create({\r\n            parent: { database_id: _databaseId },\r\n            icon: coverUrl ? {\r\n              type: 'external',\r\n              external: { url: coverUrl }\r\n            } : undefined,\r\n            properties: {\r\n              Title: {\r\n                title: [{ text: { content: book.title } }]\r\n              },\r\n              Author: {\r\n                rich_text: [{ text: { content: book.author } }]\r\n              },\r\n              Highlights: {\r\n                number: book.highlights.length\r\n              },\r\n              'Last Highlighted': {\r\n                date: { start: book.lastHighlighted.toISOString() }\r\n              },\r\n              'Last Synced': {\r\n                date: { start: new Date().toISOString() }\r\n              },\r\n              'Highlight Hash': {\r\n                rich_text: [{\r\n                  text: {\r\n                    content: storeHashes(\r\n                      book.highlights.map(h => {\r\n                        // Use existing hash from parseClippings or generate new one, always truncate\r\n                        const fullHash = h.hash || generateHighlightHash(h.highlight, h.location, h.bookTitle, h.author);\r\n                        return fullHash.slice(0, 8);\r\n                      })\r\n                    )\r\n                  }\r\n                }]\r\n              }\r\n            }\r\n          });\r\n\r\n          // Add highlights to new page\r\n          const blocks = book.highlights.flatMap(highlight => {\r\n            const highlightText = Array.isArray(highlight.highlight) ? \r\n              highlight.highlight.join('\\n\\n') : highlight.highlight;\r\n            const chunks = splitAtSentences(highlightText, 2000);\r\n            \r\n            return [\r\n              ...chunks.map((chunk, index) => ({\r\n                object: 'block' as const,\r\n                type: 'paragraph' as const,\r\n                paragraph: {\r\n                  rich_text: [\r\n                    {\r\n                      type: 'text' as const,\r\n                      text: { content: chunk }\r\n                    },\r\n                    ...(index === chunks.length - 1 ? [{\r\n                      type: 'text' as const,\r\n                      text: {\r\n                        content: `\\n\uD83D\uDCCD Location: ${highlight.location} | \uD83D\uDCC5 Added: ${highlight.date.toLocaleString()}`\r\n                      },\r\n                      annotations: {\r\n                        color: 'gray' as const\r\n                      }\r\n                    }] : [])\r\n                  ]\r\n                }\r\n              })),\r\n              {\r\n                object: 'block' as const,\r\n                type: 'paragraph' as const,\r\n                paragraph: {\r\n                  rich_text: []\r\n                }\r\n              }\r\n            ];\r\n          });\r\n\r\n          if (blocks.length > 0) {\r\n            await client.blocks.children.append({\r\n              block_id: newPage.id,\r\n              children: blocks\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing book:', book.title, error);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating Notion database:', error);\r\n    throw error;\r\n  }\r\n }\r\n}\r\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n", "import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n", "import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n", "\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "export const VERSION = \"1.7.9\";", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "export async function withRetry<T>(\r\n  operation: () => Promise<T>,\r\n  maxRetries: number = 3,\r\n  baseDelay: number = 1000\r\n): Promise<T> {\r\n  let lastError: Error | undefined;\r\n\r\n  for (let attempt = 0; attempt < maxRetries; attempt++) {\r\n    try {\r\n      return await operation();\r\n    } catch (error) {\r\n      lastError = error as Error;\r\n      if (attempt < maxRetries - 1) {\r\n        // Exponential backoff with jitter\r\n        const delay = baseDelay * Math.pow(2, attempt) * (0.5 + Math.random());\r\n        console.log(`Retry attempt ${attempt + 1}/${maxRetries} after ${Math.round(delay)}ms`);\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n    }\r\n  }\r\n\r\n  throw lastError;\r\n}", "import { Client, isFullPage } from '@notionhq/client';\r\n\r\n// Function to truncate hash for Notion storage\r\nexport function truncateHash(hash: string): string {\r\n  return hash.slice(0, 8);\r\n}\r\n\r\n// Get existing highlight hashes from a Notion page\r\nexport async function getExistingHighlightHashes(\r\n  client: Client,\r\n  pageId: string\r\n): Promise<Set<string>> {\r\n  try {\r\n    const page = await client.pages.retrieve({ page_id: pageId });\r\n    \r\n    if (!isFullPage(page)) {\r\n      return new Set();\r\n    }\r\n\r\n    const hashProperty = page.properties['Highlight Hash'];\r\n    \r\n    if (hashProperty?.type !== 'rich_text') {\r\n      console.debug('Hash property is not rich_text type', {\r\n        pageId,\r\n        actualType: hashProperty?.type\r\n      });\r\n      return new Set();\r\n    }\r\n\r\n    const richTextProperty = hashProperty as {\r\n      type: 'rich_text';\r\n      rich_text: Array<{\r\n        type: string;\r\n        text?: { content: string };\r\n        plain_text?: string;\r\n      }>;\r\n    };\r\n\r\n    // Log the raw hash property for debugging\r\n    console.debug('Retrieved hash property:', {\r\n      pageId,\r\n      propertyType: richTextProperty.type,\r\n      hasRichText: Array.isArray(richTextProperty.rich_text),\r\n      firstTextType: richTextProperty.rich_text[0]?.type,\r\n      rawContent: richTextProperty.rich_text[0]?.plain_text\r\n    });\r\n\r\n    if (richTextProperty.rich_text[0]?.type === 'text' &&\r\n        richTextProperty.rich_text[0].plain_text) {\r\n      const hashString = hashProperty.rich_text[0].plain_text;\r\n      // Hashes in Notion are already truncated, just split and filter empty\r\n      const hashes = new Set(hashString.split(',').filter(h => h.trim()));\r\n      \r\n      console.debug('Parsed existing hashes:', {\r\n        pageId,\r\n        hashCount: hashes.size,\r\n        sampleHashes: Array.from(hashes).slice(0, 5),\r\n        totalHashString: hashString.length,\r\n        hashStringPreview: hashString.substring(0, 100) + '...'\r\n      });\r\n      \r\n      return hashes;\r\n    }\r\n    \r\n    console.debug('No existing hashes found', { pageId });\r\n    return new Set();\r\n  } catch (error) {\r\n    console.error('Error getting existing highlight hashes:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get all existing hashes from a book's page in Notion\r\nexport async function getBookHighlightHashes(\r\n  client: Client,\r\n  databaseId: string,\r\n  bookTitle: string\r\n): Promise<Set<string>> {\r\n  try {\r\n    // Find the page for this book\r\n    const { results } = await client.databases.query({\r\n      database_id: databaseId,\r\n      filter: {\r\n        property: 'Title',\r\n        title: {\r\n          equals: bookTitle\r\n        }\r\n      }\r\n    });\r\n\r\n    if (results.length === 0) {\r\n      console.debug('No existing page found for book:', bookTitle);\r\n      return new Set();\r\n    }\r\n\r\n    // Get existing hashes from the page\r\n    return await getExistingHighlightHashes(client, results[0].id);\r\n  } catch (error) {\r\n    console.error('Error getting book highlight hashes:', error);\r\n    throw error;\r\n  }\r\n}", "import type { KVNamespace } from '@cloudflare/workers-types';\r\n\r\nexport interface KVStoreOptions {\r\n  expirationTtl?: number; // TTL in seconds\r\n}\r\n\r\nexport interface KVStore {\r\n  get(key: string): Promise<string | null>;\r\n  set(key: string, value: string, options?: KVStoreOptions): Promise<void>;\r\n  delete(key: string): Promise<void>;\r\n  increment(key: string): Promise<number>;\r\n  decrement(key: string): Promise<number>;\r\n}\r\n\r\n// Custom error class for KV operations\r\nexport class KVStoreError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public readonly operation: 'get' | 'set' | 'delete' | 'increment' | 'decrement',\r\n    public readonly key: string,\r\n    public readonly cause?: unknown\r\n  ) {\r\n    super(message);\r\n    this.name = 'KVStoreError';\r\n  }\r\n}\r\n\r\n// In-memory store for development/testing\r\nclass MemoryKVStore implements KVStore {\r\n  private store = new Map<string, string>();\r\n  private expirations = new Map<string, number>();\r\n\r\n  async get(key: string): Promise<string | null> {\r\n    const expiration = this.expirations.get(key);\r\n    if (expiration && Date.now() > expiration) {\r\n      this.store.delete(key);\r\n      this.expirations.delete(key);\r\n      return null;\r\n    }\r\n    return this.store.get(key) || null;\r\n  }\r\n\r\n  async set(key: string, value: string, options?: KVStoreOptions): Promise<void> {\r\n    this.store.set(key, value);\r\n    if (options?.expirationTtl) {\r\n      this.expirations.set(key, Date.now() + options.expirationTtl * 1000);\r\n    }\r\n  }\r\n\r\n  async delete(key: string): Promise<void> {\r\n    this.store.delete(key);\r\n    this.expirations.delete(key);\r\n  }\r\n\r\n  async increment(key: string): Promise<number> {\r\n    const value = await this.get(key);\r\n    const newValue = (parseInt(value || '0', 10) + 1).toString();\r\n    await this.set(key, newValue);\r\n    return parseInt(newValue, 10);\r\n  }\r\n\r\n  async decrement(key: string): Promise<number> {\r\n    const value = await this.get(key);\r\n    const newValue = Math.max(0, parseInt(value || '0', 10) - 1).toString();\r\n    await this.set(key, newValue);\r\n    return parseInt(newValue, 10);\r\n  }\r\n}\r\n\r\n// Cloudflare KV store implementation\r\nclass CloudflareKVStore implements KVStore {\r\n  constructor(private kv: KVNamespace) {}\r\n\r\n  async get(key: string): Promise<string | null> {\r\n    if (!this.kv || typeof this.kv.get !== 'function') {\r\n      console.error('[KVStore] KV namespace is invalid:', this.kv);\r\n      throw new KVStoreError('Invalid KV namespace', 'get', key);\r\n    }\r\n\r\n    try {\r\n      console.log('[KVStore] Getting value for key:', key);\r\n      const value = await this.kv.get(key);\r\n      console.log('[KVStore] Retrieved value:', {\r\n        key,\r\n        hasValue: value !== null,\r\n        valueLength: value?.length\r\n      });\r\n      return value;\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      console.error(`[KVStore] Error getting key ${key}:`, message);\r\n      throw new KVStoreError(`Failed to get KV value: ${message}`, 'get', key, error);\r\n    }\r\n  }\r\n\r\n  async set(key: string, value: string, options?: KVStoreOptions): Promise<void> {\r\n    if (!this.kv || typeof this.kv.put !== 'function') {\r\n      console.error('[KVStore] KV namespace is invalid:', this.kv);\r\n      throw new KVStoreError('Invalid KV namespace', 'set', key);\r\n    }\r\n\r\n    try {\r\n      console.log('[KVStore] Setting value:', { key, valueLength: value.length });\r\n      await this.kv.put(key, value, options);\r\n      console.log('[KVStore] Successfully set value for key:', key);\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      console.error(`[KVStore] Error setting key ${key}:`, message);\r\n      throw new KVStoreError(`Failed to set KV value: ${message}`, 'set', key, error);\r\n    }\r\n  }\r\n\r\n  async delete(key: string): Promise<void> {\r\n    try {\r\n      await this.kv.delete(key);\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      console.error(`[KVStore] Error deleting key ${key}:`, message);\r\n      throw new KVStoreError(`Failed to delete KV value: ${message}`, 'delete', key, error);\r\n    }\r\n  }\r\n\r\n  async increment(key: string): Promise<number> {\r\n    try {\r\n      const value = await this.get(key);\r\n      const newValue = (parseInt(value || '0', 10) + 1).toString();\r\n      await this.set(key, newValue);\r\n      return parseInt(newValue, 10);\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new KVStoreError(`Failed to increment KV value: ${message}`, 'increment', key, error);\r\n    }\r\n  }\r\n\r\n  async decrement(key: string): Promise<number> {\r\n    try {\r\n      const value = await this.get(key);\r\n      const newValue = Math.max(0, parseInt(value || '0', 10) - 1).toString();\r\n      await this.set(key, newValue);\r\n      return parseInt(newValue, 10);\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new KVStoreError(`Failed to decrement KV value: ${message}`, 'decrement', key, error);\r\n    }\r\n  }\r\n}\r\n\r\n// Factory function to create appropriate store\r\nexport function createKVStore(kv?: KVNamespace): KVStore {\r\n  console.log('[KVStore] Creating KV store:', {\r\n    hasKV: !!kv,\r\n    type: kv ? 'CloudflareKVStore' : 'MemoryKVStore'\r\n  });\r\n\r\n  if (kv && (!kv.get || !kv.put || !kv.delete)) {\r\n    console.error('[KVStore] Invalid KV namespace provided:', kv);\r\n    throw new Error('Invalid KV namespace: missing required methods');\r\n  }\r\n\r\n  const store = kv ? new CloudflareKVStore(kv) : new MemoryKVStore();\r\n  console.log('[KVStore] Successfully created store');\r\n  return store;\r\n}\r\n", "import { Highlight } from '../types/highlight';\r\nimport { NotionClient } from './notionClient';\r\nimport { truncateHash } from '../utils/notionUtils';\r\nimport { parseClippings } from '../utils/parseClippings';\r\nimport { withRetry } from '../utils/retry';\r\n\r\n// Sync service configuration\r\nexport interface SyncConfig {\r\n  batchSize?: number;\r\n  batchDelay?: number;\r\n  maxRetries?: number;\r\n  maxHighlightsPerRun?: number;\r\n  onProgress?: (progress: number, message: string) => Promise<void>;\r\n}\r\n\r\nexport interface SyncProgress {\r\n  processed: number;\r\n  total: number;\r\n  message: string;\r\n}\r\n\r\nconst DEFAULT_CONFIG: Required<SyncConfig> = {\r\n  batchSize: 10,\r\n  batchDelay: 200,\r\n  maxRetries: 3,\r\n  maxHighlightsPerRun: 1000,\r\n  onProgress: async () => {}\r\n};\r\n\r\nexport class SyncService {\r\n  private config: Required<SyncConfig>;\r\n  private notionClient: NotionClient;\r\n\r\n  constructor(notionClient: NotionClient, config: SyncConfig = {}) {\r\n    this.notionClient = notionClient;\r\n    this.config = { ...DEFAULT_CONFIG, ...config };\r\n  }\r\n\r\n  async deduplicateHighlights(\r\n    highlights: Highlight[],\r\n    workspaceId: string,\r\n  ): Promise<Highlight[]> {\r\n    // Group highlights by book title for batch processing\r\n    const bookHighlights = new Map<string, Highlight[]>();\r\n    for (const highlight of highlights) {\r\n      if (!bookHighlights.has(highlight.bookTitle)) {\r\n        bookHighlights.set(highlight.bookTitle, []);\r\n      }\r\n      bookHighlights.get(highlight.bookTitle)!.push(highlight);\r\n    }\r\n\r\n    // Check for duplicates and filter them out\r\n    const uniqueHighlights: Highlight[] = [];\r\n    for (const [bookTitle, bookHighlightList] of bookHighlights.entries()) {\r\n      // Convert each highlight's hash to truncated form\r\n      const newHighlightHashes = new Set(\r\n        bookHighlightList.map(h => truncateHash(h.hash))\r\n      );\r\n\r\n      // Add all highlights for new books\r\n      uniqueHighlights.push(...bookHighlightList);\r\n    }\r\n\r\n    return uniqueHighlights;\r\n  }\r\n\r\n  async processHighlights(\r\n    highlights: Highlight[],\r\n    workspaceId: string,\r\n    signal?: AbortSignal\r\n  ): Promise<void> {\r\n    const total = highlights.length;\r\n    if (total === 0) return;\r\n\r\n    // Process highlights in batches\r\n    for (let i = 0; i < highlights.length; i += this.config.batchSize) {\r\n      // Check for abort signal\r\n      if (signal?.aborted) {\r\n        throw new Error('Processing aborted');\r\n      }\r\n\r\n      const batch = highlights.slice(i, Math.min(i + this.config.batchSize, highlights.length));\r\n      \r\n      // Process batch with retry\r\n      await withRetry(async () => {\r\n        await this.notionClient.updateNotionDatabase(batch, workspaceId);\r\n        \r\n        // Calculate and report progress\r\n        const processed = i + batch.length;\r\n        const progress = Math.round((processed / total) * 100);\r\n        await this.config.onProgress(\r\n          progress,\r\n          `Processing ${processed}/${total} highlights`\r\n        );\r\n      }, this.config.maxRetries);\r\n\r\n      // Add delay between batches\r\n      await new Promise(resolve => setTimeout(resolve, this.config.batchDelay));\r\n    }\r\n  }\r\n\r\n  async parseAndValidateContent(fileContent: string): Promise<Highlight[]> {\r\n    const highlights = await parseClippings(fileContent);\r\n    if (highlights.length === 0) {\r\n      throw new Error('No highlights found in file');\r\n    }\r\n    return highlights;\r\n  }\r\n\r\n  async syncHighlights(\r\n    fileContent: string, \r\n    workspaceId: string,\r\n    signal?: AbortSignal\r\n  ): Promise<SyncProgress> {\r\n    // Parse highlights from file\r\n    const highlights = await this.parseAndValidateContent(fileContent);\r\n\r\n    // Deduplicate highlights\r\n    const uniqueHighlights = await this.deduplicateHighlights(highlights, workspaceId);\r\n\r\n    // Process highlights\r\n    await this.processHighlights(uniqueHighlights, workspaceId, signal);\r\n\r\n    return {\r\n      processed: uniqueHighlights.length,\r\n      total: highlights.length,\r\n      message: `Processed ${uniqueHighlights.length} unique highlights out of ${highlights.length} total`\r\n    };\r\n  }\r\n}\r\n\r\nexport { truncateHash };", "import type { Job, JobStatus, CreateJobParams } from '../types/job';\r\n\r\nexport class KVJobStore {\r\n  constructor(private jobStore: KVNamespace) {\r\n    if (!jobStore) {\r\n      throw new Error('KVJobStore requires a valid KVNamespace');\r\n    }\r\n  }\r\n\r\n  async createJob(params: CreateJobParams): Promise<Job> {\r\n    try {\r\n      console.log('Creating new job...', {\r\n        userId: params.userId,\r\n        workspaceId: params.workspaceId,\r\n        fileKey: params.fileKey\r\n      });\r\n\r\n      if (!params.userId || !params.workspaceId || !params.fileKey) {\r\n        throw new Error('Missing required job parameters');\r\n      }\r\n\r\n      const jobId = crypto.randomUUID();\r\n      \r\n      const job: Job = {\r\n        id: jobId,\r\n        userId: params.userId,\r\n        workspaceId: params.workspaceId,\r\n        fileKey: params.fileKey,\r\n        status: 'pending',\r\n        createdAt: Date.now(),\r\n        updatedAt: Date.now(),\r\n        expiresAt: params.expiresAt\r\n      };\r\n\r\n      // Store job data\r\n      console.log('Storing job data...', { jobId });\r\n      await this.jobStore.put(jobId, JSON.stringify(job));\r\n      \r\n      // Store job ID in user's job list\r\n      const userJobListKey = `user:${params.userId}:jobs`;\r\n      console.log('Updating user job list...', { userJobListKey });\r\n      const userJobs = await this.getUserJobs(params.userId);\r\n      userJobs.push(jobId);\r\n      await this.jobStore.put(userJobListKey, JSON.stringify(userJobs));\r\n\r\n      console.log('Job created successfully', { jobId });\r\n      return job;\r\n    } catch (error) {\r\n      console.error('Failed to create job:', {\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined,\r\n        params\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getJob(jobId: string): Promise<Job | null> {\r\n    try {\r\n      console.log('Fetching job...', { jobId });\r\n      \r\n      if (!jobId) {\r\n        throw new Error('Job ID is required');\r\n      }\r\n\r\n      const jobStr = await this.jobStore.get(jobId);\r\n      if (!jobStr) {\r\n        console.log('Job not found', { jobId });\r\n        return null;\r\n      }\r\n\r\n      try {\r\n        const job = JSON.parse(jobStr);\r\n        console.log('Job fetched successfully', {\r\n          jobId,\r\n          status: job.status,\r\n          updatedAt: new Date(job.updatedAt).toISOString()\r\n        });\r\n        return job;\r\n      } catch (parseError) {\r\n        console.error('Failed to parse job data:', {\r\n          jobId,\r\n          error: parseError instanceof Error ? parseError.message : 'Unknown error',\r\n          jobStr\r\n        });\r\n        throw new Error('Invalid job data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching job:', {\r\n        jobId,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateJob(jobId: string, updates: Partial<Job>): Promise<Job | null> {\r\n    try {\r\n      console.log('Updating job...', { jobId, updates });\r\n\r\n      const job = await this.getJob(jobId);\r\n      if (!job) {\r\n        console.log('Job not found for update', { jobId });\r\n        return null;\r\n      }\r\n\r\n      const updatedJob: Job = {\r\n        ...job,\r\n        ...updates,\r\n        updatedAt: Date.now()\r\n      };\r\n\r\n      await this.jobStore.put(jobId, JSON.stringify(updatedJob));\r\n      console.log('Job updated successfully', { jobId, status: updatedJob.status });\r\n      \r\n      return updatedJob;\r\n    } catch (error) {\r\n      console.error('Failed to update job:', {\r\n        jobId,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined,\r\n        updates\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async listJobs(userId: string, status?: JobStatus): Promise<Job[]> {\r\n    try {\r\n      console.log('Listing jobs...', { userId, status });\r\n      \r\n      const userJobs = await this.getUserJobs(userId);\r\n      const jobs: Job[] = [];\r\n\r\n      for (const jobId of userJobs) {\r\n        try {\r\n          const job = await this.getJob(jobId);\r\n          if (job && (!status || job.status === status)) {\r\n            jobs.push(job);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching job in list:', { jobId, error });\r\n          // Continue with other jobs even if one fails\r\n          continue;\r\n        }\r\n      }\r\n\r\n      console.log('Jobs listed successfully', {\r\n        userId,\r\n        status,\r\n        count: jobs.length\r\n      });\r\n      \r\n      return jobs;\r\n    } catch (error) {\r\n      console.error('Failed to list jobs:', {\r\n        userId,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async cleanupJobs(): Promise<number> {\r\n    try {\r\n      console.log('Starting job cleanup...');\r\n      \r\n      const { keys } = await this.jobStore.list();\r\n      const now = Date.now();\r\n      let cleanedCount = 0;\r\n\r\n      for (const key of keys) {\r\n        try {\r\n          // Skip user job list keys\r\n          if (key.name.startsWith('user:')) continue;\r\n\r\n          const jobStr = await this.jobStore.get(key.name);\r\n          if (!jobStr) continue;\r\n\r\n          const job: Job = JSON.parse(jobStr);\r\n          \r\n          if (\r\n            (job.expiresAt && job.expiresAt < now) ||\r\n            ((job.status === 'completed' || job.status === 'failed') &&\r\n              job.updatedAt < now - 24 * 60 * 60 * 1000)\r\n          ) {\r\n            await this.jobStore.delete(key.name);\r\n            \r\n            // Remove from user's job list\r\n            const userJobListKey = `user:${job.userId}:jobs`;\r\n            const userJobs = await this.getUserJobs(job.userId);\r\n            const updatedJobs = userJobs.filter(id => id !== job.id);\r\n            await this.jobStore.put(userJobListKey, JSON.stringify(updatedJobs));\r\n            \r\n            cleanedCount++;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error cleaning up job:', {\r\n            key: key.name,\r\n            error: error instanceof Error ? error.message : 'Unknown error'\r\n          });\r\n          // Continue with other jobs even if one fails\r\n          continue;\r\n        }\r\n      }\r\n\r\n      console.log('Job cleanup completed', { cleanedCount });\r\n      return cleanedCount;\r\n    } catch (error) {\r\n      console.error('Failed to cleanup jobs:', {\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async getUserJobs(userId: string): Promise<string[]> {\r\n    try {\r\n      if (!userId) {\r\n        throw new Error('User ID is required');\r\n      }\r\n\r\n      const userJobListKey = `user:${userId}:jobs`;\r\n      const jobList = await this.jobStore.get(userJobListKey);\r\n      return jobList ? JSON.parse(jobList) : [];\r\n    } catch (error) {\r\n      console.error('Failed to get user jobs:', {\r\n        userId,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n}", "import { KVJobStore } from './kvJobStore';\r\nimport { NotionClient, NotionStore, type NotionToken } from '@booksync/shared';\r\nimport { createKVStore } from '@booksync/shared';\r\nimport type { Environment } from '../types/env';\r\nimport type { CreateJobParams } from '../types/job';\r\n\r\nexport class OAuthCallbackService {\r\n  private jobStore: KVJobStore;\r\n  private notionClient: NotionClient;\r\n  private env: Environment;\r\n\r\n  constructor(env: Environment) {\r\n    this.env = env;\r\n    // Validate KV namespaces\r\n    if (!env.OAUTH_STORE) {\r\n      throw new Error('OAUTH_STORE KV namespace is not bound');\r\n    }\r\n    if (!env.JOB_STORE) {\r\n      throw new Error('JOB_STORE KV namespace is not bound');\r\n    }\r\n    \r\n    // Validate Notion credentials\r\n    if (!env.NOTION_CLIENT_ID) {\r\n      throw new Error('NOTION_CLIENT_ID is not configured');\r\n    }\r\n    if (!env.NOTION_CLIENT_SECRET) {\r\n      throw new Error('NOTION_CLIENT_SECRET is not configured');\r\n    }\r\n    if (!env.NOTION_REDIRECT_URI) {\r\n      throw new Error('NOTION_REDIRECT_URI is not configured');\r\n    }\r\n\r\n    console.log('Initializing OAuthCallbackService...', {\r\n      hasOauthStore: !!env.OAUTH_STORE,\r\n      hasJobStore: !!env.JOB_STORE,\r\n      redirectUri: env.NOTION_REDIRECT_URI\r\n    });\r\n\r\n    try {\r\n      // Initialize stores in correct order\r\n      this.jobStore = new KVJobStore(env.JOB_STORE);\r\n\r\n      // Create stores for Notion\r\n      // Create KV store with explicit validation\r\n      if (!env.OAUTH_STORE) {\r\n        throw new Error('OAUTH_STORE is undefined');\r\n      }\r\n\r\n      const kvStore = createKVStore(env.OAUTH_STORE);\r\n      if (!kvStore) {\r\n        throw new Error('Failed to create KV store');\r\n      }\r\n\r\n      // Initialize NotionStore with validated KV store\r\n      const notionStore = new NotionStore(kvStore);\r\n      if (!notionStore) {\r\n        throw new Error('Failed to create Notion store');\r\n      }\r\n\r\n      // Initialize Notion client with validated store\r\n      this.notionClient = new NotionClient({\r\n        store: notionStore,\r\n        clientId: env.NOTION_CLIENT_ID,\r\n        clientSecret: env.NOTION_CLIENT_SECRET,\r\n        redirectUri: env.NOTION_REDIRECT_URI\r\n      });\r\n\r\n      console.log('OAuthCallbackService initialized successfully');\r\n    } catch (error) {\r\n      console.error('Failed to initialize OAuthCallbackService:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async handleCallback(code: string): Promise<{ redirectUrl: string }> {\r\n    try {\r\n      console.log('Starting OAuth callback handling...');\r\n\r\n      // Exchange code for access token with logging\r\n      console.log('Exchanging code for token...');\r\n      const tokenData: NotionToken = await this.notionClient.exchangeCodeForToken(code);\r\n\r\n      // Validate token data\r\n      console.log('Validating token data...');\r\n      if (!tokenData?.access_token) {\r\n        throw new Error('Missing access_token in token data');\r\n      }\r\n      if (!tokenData?.workspace_id) {\r\n        throw new Error('Missing workspace_id in token data');\r\n      }\r\n      if (!tokenData?.owner) {\r\n        throw new Error('Missing owner in token data');\r\n      }\r\n\r\n      // Get user ID from token data with proper type checking\r\n      console.log('Extracting user ID...');\r\n      let userId = 'unknown';\r\n      if (tokenData.owner.type === 'user' && tokenData.owner.user?.id) {\r\n        userId = tokenData.owner.user.id;\r\n      } else {\r\n        console.log('No user ID found in token data, using default:', userId);\r\n      }\r\n\r\n      // Build redirect URL - just return to frontend after successful auth\r\n      console.log('Building redirect URL...');\r\n      const clientUrl = new URL(this.env.CLIENT_URL || 'http://localhost:5173');\r\n      clientUrl.searchParams.set('status', 'success');\r\n      clientUrl.searchParams.set('workspaceId', tokenData.workspace_id);\r\n\r\n      const redirectUrl = clientUrl.toString();\r\n      console.log('Redirecting to:', redirectUrl);\r\n\r\n      return { redirectUrl };\r\n    } catch (error) {\r\n      console.error('OAuth callback error:', {\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        stack: error instanceof Error ? error.stack : undefined\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n}", "import type { Job, JobStatus, CreateJobParams } from '../types/job';\r\n\r\nexport class JobStore implements DurableObject {\r\n  state: DurableObjectState;\r\n  jobs: Map<string, Job>;\r\n\r\n  constructor(state: DurableObjectState) {\r\n    this.state = state;\r\n    this.jobs = new Map();\r\n    this.initialize();\r\n  }\r\n\r\n  // Initialize state from storage\r\n  private async initialize() {\r\n    const stored = await this.state.storage.list<Job>();\r\n    for (const [key, value] of stored) {\r\n      this.jobs.set(key, value);\r\n    }\r\n  }\r\n\r\n  async fetch(request: Request): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    \r\n    switch (url.pathname) {\r\n      case '/create':\r\n        return this.handleCreateJob(request);\r\n      case '/status':\r\n        return this.handleGetStatus(request);\r\n      case '/update':\r\n        return this.handleUpdateJob(request);\r\n      case '/list':\r\n        return this.handleListJobs(request);\r\n      case '/cleanup':\r\n        return this.handleCleanupJobs();\r\n      default:\r\n        return new Response('Not found', { status: 404 });\r\n    }\r\n  }\r\n\r\n  private async handleCreateJob(request: Request): Promise<Response> {\r\n    const { userId, workspaceId, fileKey, expiresAt } = await request.json<CreateJobParams>();\r\n    const jobId = crypto.randomUUID();\r\n    \r\n    const job: Job = {\r\n      id: jobId,\r\n      userId,\r\n      workspaceId,\r\n      fileKey,\r\n      status: 'pending',\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now(),\r\n      expiresAt\r\n    };\r\n\r\n    this.jobs.set(jobId, job);\r\n    await this.state.storage.put(jobId, job);\r\n\r\n    return new Response(JSON.stringify(job), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  private async handleGetStatus(request: Request): Promise<Response> {\r\n    const jobId = new URL(request.url).searchParams.get('id');\r\n    if (!jobId) {\r\n      return new Response('Missing job ID', { status: 400 });\r\n    }\r\n\r\n    const job = await this.state.storage.get<Job>(jobId);\r\n    if (!job) {\r\n      return new Response('Job not found', { status: 404 });\r\n    }\r\n\r\n    return new Response(JSON.stringify(job), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  private async handleUpdateJob(request: Request): Promise<Response> {\r\n    const { id, status, progress, error } = await request.json<Partial<Job>>();\r\n    if (!id) {\r\n      return new Response('Missing job ID', { status: 400 });\r\n    }\r\n\r\n    const job = await this.state.storage.get<Job>(id);\r\n    if (!job) {\r\n      return new Response('Job not found', { status: 404 });\r\n    }\r\n\r\n    const updatedJob: Job = {\r\n      ...job,\r\n      status: status || job.status,\r\n      progress: progress ?? job.progress,\r\n      error: error ?? job.error,\r\n      updatedAt: Date.now()\r\n    };\r\n\r\n    this.jobs.set(id, updatedJob);\r\n    await this.state.storage.put(id, updatedJob);\r\n\r\n    return new Response(JSON.stringify(updatedJob), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  private async handleListJobs(request: Request): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    const status = url.searchParams.get('status') as JobStatus | null;\r\n    \r\n    // Filter jobs by status if provided\r\n    let filteredJobs = Array.from(this.jobs.values());\r\n    if (status) {\r\n      filteredJobs = filteredJobs.filter(job => job.status === status);\r\n    }\r\n\r\n    return new Response(JSON.stringify(filteredJobs), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  private async handleCleanupJobs(): Promise<Response> {\r\n    const now = Date.now();\r\n    let cleanedCount = 0;\r\n\r\n    for (const [jobId, job] of this.jobs.entries()) {\r\n      // Clean up jobs that are expired or completed/failed for more than 24 hours\r\n      if (\r\n        (job.expiresAt && job.expiresAt < now) ||\r\n        ((job.status === 'completed' || job.status === 'failed') &&\r\n          job.updatedAt < now - 24 * 60 * 60 * 1000)\r\n      ) {\r\n        this.jobs.delete(jobId);\r\n        await this.state.storage.delete(jobId);\r\n        cleanedCount++;\r\n      }\r\n    }\r\n\r\n    return new Response(JSON.stringify({ cleaned: cleanedCount }), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n}\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["fn", "assert", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_cloudflare", "init_cloudflare", "performance", "e", "init_performance", "init_performance", "performance", "init_performance", "error", "fn", "EventEmitter", "Writable", "Writable", "dir", "env", "count", "env2", "nextTick2", "process", "assert", "dir", "getBuiltinModule", "env", "exit", "nextTick", "platform", "cloudflare_default", "init_cloudflare", "assert", "init_cloudflare", "cloudflare_default", "isObject", "LogLevel", "APIErrorCode", "ClientErrorCode", "error", "AbortController", "Request", "Response", "fetch", "Client", "error", "isFullPage", "e", "a", "r", "l", "Certificate", "DiffieHellman", "DiffieHellmanGroup", "Hash", "Hmac", "KeyObject", "X509Certificate", "checkPrime", "checkPrimeSync", "createDiffieHellman", "createDiffieHellmanGroup", "createHash", "createHmac", "createPrivateKey", "createPublicKey", "createSecretKey", "generateKey", "generateKeyPair", "generateKeyPairSync", "generateKeySync", "generatePrime", "generatePrimeSync", "getCiphers", "getCurves", "getDiffieHellman", "getFips", "getHashes", "hkdf", "hkdfSync", "pbkdf2", "pbkdf2Sync", "randomFill", "randomFillSync", "randomInt", "scrypt", "scryptSync", "secureHeapUsed", "setEngine", "setFips", "timingSafeEqual", "webcrypto", "createHash", "error", "group", "entries", "hash", "e", "error", "import_client", "fn", "prototype", "fn", "context", "descriptors", "filter", "hasOwnProperty", "noop", "config", "error", "filter", "prototype", "toString", "encode", "fn", "e", "isFormData", "isFileList", "transitional", "context", "filter", "self", "prototype", "config", "context", "fn", "config", "validateStatus", "fn", "e", "fn", "origin", "domain", "config", "merge", "config", "config", "transitional", "signal", "e", "done", "fn", "e", "res", "config", "fn", "e", "config", "version", "validators", "config", "e", "transitional", "error", "config", "abort", "context", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "error", "hash", "title", "error", "generateHighlightHash", "createHash", "hash", "error", "error", "config", "hash", "generateHighlightHash", "error", "config", "error", "env", "error", "error", "BATCH_SIZE", "env", "error", "env", "e", "e", "env", "error", "env", "env"]
}
