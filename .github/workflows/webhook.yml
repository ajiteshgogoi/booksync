name: Process Highlights

on:
  repository_dispatch:
    types: 
      - process_highlights
      - process_highlights_test

permissions:
  contents: read
  actions: write

jobs:
  process-highlights:
    if: github.event.action == 'process_highlights'
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 1 hour timeout for file processing

    env:
      REDIS_URL: ${{ secrets.REDIS_URL }}
      NOTION_OAUTH_CLIENT_ID: ${{ secrets.NOTION_OAUTH_CLIENT_ID }}
      NOTION_OAUTH_CLIENT_SECRET: ${{ secrets.NOTION_OAUTH_CLIENT_SECRET }}
      NOTION_REDIRECT_URI: ${{ secrets.NOTION_REDIRECT_URI }}
      NODE_ENV: production

    steps:
      - name: Log Full Event Details
        run: |
          echo "=== Full Event Details ==="
          echo 'Event type: ${{ github.event.action }}'
          echo 'Has client payload: ${{ github.event.client_payload != null }}'
          echo 'Has fileContent: ${{ github.event.client_payload.fileContent != null }}'
          echo 'Has userId: ${{ github.event.client_payload.userId != null }}'
          echo "=========================="

      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd server
          echo "Installing dependencies..."
          npm ci
          echo "Dependencies installed"

      - name: Build
        run: |
          cd server
          echo "Building server..."
          npm run build
          echo "Build complete"

      - name: Process File
        env:
          FILE_CONTENT: ${{ github.event.client_payload.fileContent }}
          USER_ID: ${{ github.event.client_payload.userId }}
        run: |
          cd server
          echo "Starting file processing..."
          node --experimental-vm-modules processHighlights.js

  test-webhook:
    if: github.event.action == 'process_highlights_test'
    runs-on: ubuntu-latest
    steps:
      - name: Log Test Event
        run: |
          echo "Received test webhook event"
          echo "Event type: ${{ github.event.action }}"
          echo "Test payload: ${{ toJSON(github.event.client_payload) }}"
      
      - name: Return Success
        run: echo "âœ… Webhook test successful"