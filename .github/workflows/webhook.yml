name: Parse Highlights

on:
  repository_dispatch:
    types: 
      - parse_highlights
      - parse_highlights_test

permissions:
  contents: read
  actions: write

jobs:
  parse-highlights:
    if: github.event.action == 'parse_highlights'
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 1 hour timeout for file parsing
    
    # Allow concurrent parsing for different users, but prevent multiple concurrent parses per user
    concurrency:
      group: parse-${{ github.event.client_payload.userId }}
      cancel-in-progress: true

    env:
      NODE_ENV: production
      GITHUB_ACTIONS: true
      R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
      R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
      NOTION_OAUTH_CLIENT_ID: ${{ secrets.NOTION_OAUTH_CLIENT_ID }}
      NOTION_OAUTH_CLIENT_SECRET: ${{ secrets.NOTION_OAUTH_CLIENT_SECRET }}
      NOTION_REDIRECT_URI: ${{ secrets.NOTION_REDIRECT_URI }}

    steps:
      - name: Log Event Details
        run: |
          echo "=== Event Details ==="
          echo "Event type: ${{ github.event.action }}"
          echo "Has client payload: ${{ github.event.client_payload != null }}"
          echo "Has jobId: ${{ github.event.client_payload.jobId != null }}"
          echo "Has userId: ${{ github.event.client_payload.userId != null }}"
          echo "Has databaseId: ${{ github.event.client_payload.databaseId != null }}"
          echo "========================"

      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        working-directory: server
        run: |
          echo "Installing dependencies..."
          npm ci --include=dev
          echo "Dependencies installed"

      - name: Build
        working-directory: server
        run: |
          echo "Building server..."
          npm run build
          echo "Build complete"

      - name: Validate Client Payload
        run: |
          jobId="${{ github.event.client_payload.jobId }}"
          userId="${{ github.event.client_payload.userId }}"
          databaseId="${{ github.event.client_payload.databaseId }}"
          fileName="${{ github.event.client_payload.fileName }}"
          if [ -z "$jobId" ] || [ -z "$userId" ] || [ -z "$databaseId" ] || [ -z "$fileName" ]; then
            echo "Error: Missing required client payload parameters"
            echo "Required: jobId, userId, databaseId, fileName"
            echo "Received payload: ${{ toJSON(github.event.client_payload) }}"
            exit 1
          fi

      - name: Parse File
        if: success()
        working-directory: server
        env:
          JOB_ID: ${{ github.event.client_payload.jobId }}
          DATABASE_ID: ${{ github.event.client_payload.databaseId }}
          USER_ID: ${{ github.event.client_payload.userId }}
          R2_FILE_NAME: ${{ github.event.client_payload.fileName }}
          DEBUG: 'true'
        run: |
          echo "Environment Check:"
          echo "- JOB_ID: $JOB_ID"
          echo "- DATABASE_ID: $DATABASE_ID"
          echo "- USER_ID: $USER_ID"
          echo "- R2_FILE_NAME: $R2_FILE_NAME"
          echo "- R2 Config Status:"
          echo "  - ENDPOINT: ${R2_ENDPOINT:+configured}"
          echo "  - ACCESS_KEY: ${R2_ACCESS_KEY_ID:+configured}"
          echo "  - SECRET_KEY: ${R2_SECRET_ACCESS_KEY:+configured}"
          echo "  - BUCKET: ${R2_BUCKET_NAME:+configured}"
          
          echo "Starting file parsing..."
          node parseHighlights.js

  test-webhook:
    if: github.event.action == 'parse_highlights_test'
    runs-on: ubuntu-latest
    steps:
      - name: Log Test Event
        run: |
          echo "=== Webhook Test Event Details ==="
          echo "Event type: ${{ github.event.action }}"
          echo "Client Payload:"
          echo "- Has jobId: ${{ github.event.client_payload.jobId != null }}"
          echo "Full payload: ${{ toJSON(github.event.client_payload) }}"
       
      - name: Verify Required Secrets
        run: |
          echo "=== Required Secrets Check ==="
          echo "R2 Configuration:"
          echo "- R2_ENDPOINT: ${{ secrets.R2_ENDPOINT != '' }}"
          echo "- R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID != '' }}"
          echo "- R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY != '' }}"
          echo "- R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME != '' }}"
          
      - name: Return Success
        run: |
          echo "âœ… Webhook test completed"
          echo "Run process_highlights action to process files"
