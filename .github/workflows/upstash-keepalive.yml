name: Upstash Keepalive

on:
  schedule:
    # Run daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read

jobs:
  keepalive:
    if: github.repository == 'ajiteshgogoi/booksync'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Debug Redis URL
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
        run: |
          echo "Redis URL format check:"
          # Mask the actual values but show format
          echo "REDIS_URL starts with: ${REDIS_URL:0:10}..."
          
          # Try to identify if it's Upstash format
          if [[ "$REDIS_URL" == *"upstash"* ]]; then
            echo "Appears to be an Upstash URL"
          fi
          
          # Check URL structure
          if [[ "$REDIS_URL" == "https://"* ]]; then
            echo "URL uses HTTPS protocol"
          elif [[ "$REDIS_URL" == "redis://"* ]]; then
            echo "URL uses Redis protocol"
          fi

      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: server
        run: |
          npm install @upstash/redis dotenv

      - name: Test Redis connection
        working-directory: server
        run: |
          if [ -z "$REDIS_URL" ]; then
            echo "❌ Missing Redis URL"
            exit 1
          fi
          
          echo "Testing Redis connection..."
          node -e "
          const { Redis } = require('@upstash/redis');
          
          async function testConnection() {
            try {
              console.log('Attempting connection with REST config...');
              
              // First try using it as a direct REST URL
              const redis = new Redis({
                url: process.env.REDIS_URL,
              });
              
              // Test connection with a simple ping
              const result = await redis.ping();
              console.log('Connection test result:', result);
              console.log('✅ Redis connection successful');
              process.exit(0);
            } catch (error) {
              console.error('First attempt failed, checking URL format...');
              
              try {
                // If URL is in redis:// format, try to convert to Upstash REST format
                const url = process.env.REDIS_URL;
                if (url.startsWith('redis://')) {
                  const [host, token] = url.split('@')[1].split(':');
                  const restUrl = \`https://\${host}\`;
                  
                  console.log('Trying with converted REST format...');
                  const redis = new Redis({
                    url: restUrl,
                    token: token
                  });
                  
                  const result = await redis.ping();
                  console.log('Connection test result:', result);
                  console.log('✅ Redis connection successful');
                  process.exit(0);
                }
              } catch (innerError) {
                console.error('Both connection attempts failed');
                console.error('Original error:', error);
                console.error('Format conversion error:', innerError);
                process.exit(1);
              }
            }
          }
          
          testConnection();
          "
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}